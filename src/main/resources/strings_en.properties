language.name=English
language.code=en
empty=empty
yes=yes
no=no
or=or
detected=detected
ready=ready
paused=paused
playing=playing
looped=looped
loopedQueue=loopedQueue
missing=missing
unknown=unknown
infinite=infinite
enabled=enabled
disabled=disabled
message.spotify.down=The spotify api might be down, try seaching the name with `%prefix%splay <name: string*>`
message.spotify.unknownlink=The url you provided: `%url%` was not a valid spotify track, album, artist or playlist. If you think this is not right then contact support.
message.botpermission.missing=🔒 You are missing the following permission: `%permission%`
message.discordpermission.missing=🔒 I am missing the following discord-permission: %permissions%
message.discordpermissions.missing=🔒 I am missing the following discord-permissions: %permissions%
message.discordchannelpermission.missing=🔒 I am missing the following discord-permission in **%channel%**: %permissions%
message.discordchannelpermissions.missing=🔒 I am missing the following discord-permissions in **%channel%**: %permissions%
message.discordcategorypermission.missing=🔒 I am missing the following discord-permission in the category **%category%**: %permissions%
message.discordcategorypermissions.missing=🔒 I am missing the following discord-permissions in the category **%category%**: %permissions%
message.command.usage=Correct usage: `%syntax%`
message.numbertobig=**%arg%** is to big
message.exception=An error occurred, get in touch with our support team if the issue persists: <https://discord.gg/tfQ9s7u> (errorId: `%caseId%`)
message.pagination=Page %page%/%pages%
message.loading.effect=Applying image effect... (duration depends on image size and the effect)
message.filetobig=The maximum file size is **%size%** bytes

message.unknown.number=**%arg%** is not a valid number
message.unknown.timezone=`%arg%` is not a valid timezone: https://garygregory.wordpress.com/2013/06/18/what-are-the-java-timezone-ids/
message.unknown.language=**%arg%** is not a valid language
message.unknown.boolean=**%arg%** is not a valid boolean state
message.unknown.duration=**%arg%** is not a valid duration
message.unknown.timeunit=**%arg%** is not a valid timeunit
message.unknown.permstate=**%arg%** is not a valid Permission State, states are: Allow, Default, Deny
message.unknown.user=**%arg%** is not a valid user
message.unknown.member=**%arg%** is not a valid member
message.unknown.role=`%arg%` is not a valid role
message.unknown.roletype=**%arg%** is not a valid roleType
message.unknown.gaintype=**%arg%** is not a valid gainType
message.unknown.userorrole=`%arg%` is not a valid user or role
message.unknown.color=`%arg%` is not a valid color, correct format is `#XXXXXX` with X being a hexadecimal value
message.unknown.permissionnode=**%arg%** is not a valid permission node
message.unknown.commandnode=**%arg%** is not a valid command node
message.unknown.commandstate=**%arg%** is not a valid Command State, states are: Enabled, Disabled
message.unknown.channelcommandstate=**%arg%** is not a valid Command State, states are: Enabled, Default, Disabled
message.unknown.punishmenttype=**%arg%** is not a valid punishment type
message.unknown.verificationtype=**%arg%** is not a valid verification type
message.unknown.channeltype=**%arg%** is not a valid channel type
message.unknown.emojioremote=**%arg%** was not an emote or emoji OR I don't share a server with that emote
message.unknown.textchannel=**%arg%** is not a valid text channel
message.unknown.voicechannel=**%arg%** is not a valid voice channel
message.unknown.punishgroup=**%arg%** is not a valid punishment group
message.unknown.ccid=**%arg%** is not a valid custom command id
message.unknown.filtergroup=**%arg%** is not a valid filter group
message.unknown.permissiontype=**%arg%** is not a valid permission type
message.unknown.filtermode=**%arg%** is not a valid filtermode
message.unknown.joinrolegroup=**%arg%** is not a valid joinrolegroup
message.unknown.selfrolegroup=**%arg%** is not a valid selfrolegroup
message.unknown.birthday=**%arg%** is not a valid birthday
message.unknown.numberornumberrange=**%arg%** is not a valid number or number range
message.unknown.tristate=**%arg%** is not a valid tristate
message.unknown.command=**%arg%** is not a valid command, please type the command like you normally would but without the prefix
message.deleted.user=deleted user
message.view.isempty=The message you were trying to view has no content
message.pgremoved=The punishment group which you had selected has been removed, select with `%prefix%pg select <pgName>`
message.nopgselected=You don't have a punishment group selected, select with `%prefix%pg select <pgName>`
message.ccremoved=The custom command which you had selected has been removed, select with `%prefix%cc select <ccId>`
message.noccselected=You don't have a custom command selected, select with `%prefix%cc select <ccId>`
message.notconfirm=The arguments do not match "confirm"
message.notset.role.unverified=No unverified role is set, set one with `%prefix%setRole unverified <role>`
message.number.notinrange=**%arg%** does not lay between %start% and %end%
message.unknown.long=**%arg%** is not a valid long number (probably too long)
message.filetoobig=The file was to big: **%size%**, max is **%max%**
message.selfinteract.member.hierarchyexception=I cannot interact with **%user%**, this member has a role which is higher than or equal to my highest role
message.interact.member.hierarchyexception=You cannot interact with **%user%**, this member has a role which is higher than or equal to your highest role
message.interact.member.isbot=I cannot interact with **%user%**, this user is a bot
message.selfinteract.role.hierarchyexception=I cannot interact with **%role%**, this role is higher than or equal to my highest role
message.notimage=The supplied url **%url%** does not point to an image
message.notagif=The supplied url **%url%** does not point to a gif
message.notaurl=The supplied url **%url%** is not a valid url
message.melijnping.nowriteperms=You have pinged me in %channel% inside the %server% server. I should normally respond with a quickstart message but I was not able to talk in the channel, please give me the required permissions or use a channel where I can talk.
message.notuserorurl=**%arg%** is neither a url or user
message.string.cantcontainwordfailed=Your input %arg% was invalid. This argument can't contain any of %words% (case insensitive: %ignorecase%). Detected: %word%
message.string.cantcontaincharfailed=Your input %arg% was invalid. This argument can't contain any of %chars% (case insensitive: %ignorecase%). Detected: %char%
message.string.minfailed=Your input %arg% was to short: **%length%**, min length is **%min%**
message.string.maxfailed=Your input %arg% was to long: **%length%**, max length is **%max%**
message.string.matchfailed=Your input %arg% was invalid. It must match: `%pattern%`
message.amounttoobig=You tried to bet **%amount%** mel but you only have **%bal%** mel
message.dmsdisabledfix="%user%, your dms are disabled, to enable dms for this server:\
  \n1. Right click the server icon.\
  \n2. Click the `Privacy Settings`\
  \n3. Turn the switch 'Allow direct messages from server members' on
message.ttt.yourare=You are %shape% |
message.ttt.pleasewait=Please wait for your opponent.
message.ttt.yourturn=It's your turn.

message.feature.requires.premium=Get `%feature%` by becoming a donator, become one with `%prefix%donate`
message.feature.requires.premium.server=Get `%feature%` by linking your server to a donator, become one with `%prefix%donate` & link the server with `%prefix%donate linkserver`
premium.feature.volume.over.150=volume over 150
premium.feature.cc.limit=up to 100 custom commands
premium.feature.privateprefix.limit=up to %premiumLimit% private prefixes instead of %limit%
premium.feature.prefix.limit=up to %premiumLimit% server prefixes instead of %limit%
premium.feature.reminders.limit=up to %premiumLimit% reminders instead of %limit%

message.unknown.integer=**%arg%** is not a valid whole number
message.tosmall.integer=**%arg%** is to small, minimum is **%min%**
message.tobig.integer=**%arg%** is to big, maximum is **%max%**


message.unknown.float=**%arg%** is not a valid float, a valid float is a number with a decimal point
message.tosmall.float=**%arg%** is to small, minimum is **%min%**
message.tobig.float=**%arg%** is to big, maximum is **%max%**


message.runcondition.serveronly=This command can only be used in servers
message.runcondition.failed.user.supporter=This command requires you to support our bot `%prefix%donate`
message.runcondition.failed.server.supporter=This command requires that this server is linked to a donator `%prefix%donate linkServer`
message.runcondition.failed.voted=This command can only be used for a period of 24h after voting, vote link: **%url%**
message.runcondition.failed.devonly=This command can only be used by the bot owners
message.runcondition.failed.playingtracknotnull=There is no track playing
message.runcondition.failed.vc=You need to be in a VoiceChannel
message.runcondition.failed.vcbot=To use this command one of the following conditions must be met:\
  \n- I'm in the same VoiceChannel as you\
  \n- I'm disconnected\
  \n- You have the `music.bypass.samevc` permission

message.runcondition.failed.vcbotalone=To use this command one of the following conditions must be met:\
  \n- I'm in the same VoiceChannel as you and you're the only one listening\
  \n- I'm disconnected and you're in a VoiceChannel\
  \n- I'm in another VoiceChannel where no one is listening\
  \n- You have the `music.bypass.vcbotalone` permission

message.runcondition.failed.botalone=To use this command one of the following conditions must be met:\
  \n- I'm in another VoiceChannel where no one is listening\
  \n- I'm disconnected\
  \n- You have the `music.bypass.botalone` permission
message.runcondition.failed.nsfw=This command can only be used in NSFW channels

message.cooldown=You have to wait **%cooldown%** more seconds

command.remove.syntax=remove <numbers*>
command.remove.description=Removes tracks from the queue
command.remove.removed=Removed **%count%** tracks from the queue:
command.remove.arguments=%help.arg.numbers%
command.remove.examples=- `%prefix%remove 5` Removes track 5\
  \n- `%prefix%remove 5,6` Removes track 5 and 6\
  \n- `%prefix%remove 5-7,8` Removes track 5,6,7 and 8\
  \n- `%prefix%remove 5-6` Removes track 5 and 6


command.clearqueue.syntax=clearQueue
command.clearqueue.description=Clears the queue
command.clearqueue.cleared=Cleared **%count%** tracks from the queue


command.filter.syntax=filter <allowed | denied>
command.filter.description=Manages filters


command.filter.allowed.syntax=filter allowed <add | remove | removeByIndex | list>
command.filter.allowed.description=%prefix%filter allowed <add | remove | removeByIndex | list>


command.filter.allowed.add.syntax=filter allowed add <filterGroup*> <filter: string*>
command.filter.allowed.add.description=Adds an allowed filter the specified filter group
command.filter.allowed.add.success=Added an allowed filter to **%filterGroup%** with content:\n%filter%
command.filter.allowed.add.arguments=%help.arg.filtergroup%\
  \n%help.arg.filter%
command.filter.allowed.add.examples=- `%prefix%filter allowed add introduction notABadWord` adds "notABadWord" to the allowed list of the "introduction" filter group


command.filter.allowed.remove.syntax=filter allowed remove <filterGroup*> <filter*>
command.filter.allowed.remove.description=Removes an allowed filter from the specified filter group
command.filter.allowed.remove.success=Removed an allowed filter from **%filterGroup%** with content:\n%filter%
command.filter.allowed.remove.arguments=%help.arg.filtergroup%\
  \n%help.arg.filter%
command.filter.allowed.remove.examples- `%prefix%filter allowed remove introduction notABadWord` removes "notABadWord" from the allowed list of the "introduction" filter group


command.filter.allowed.removebyindex.syntax=filter allowed removeByIndex <filterGroup*> <filterIndex: number*>
command.filter.allowed.removebyindex.description=Removes allowed filters by index
command.filter.allowed.removebyindex.success=Removed the allowed filter at **%index%** in **%filterGroup%** with content:\n%filter%
command.filter.allowed.removebyindex.arguments=%help.arg.filtergroup%\
  \n%help.arg.number%, filterIndex: can be shown with `%prefix%allowedFilters list`
command.filter.allowed.removebyindex.examples=- `%prefix%filter allowed removeByIndex #bots 0` removes entry at index 0 from the bot channel's allowed list


command.filter.allowed.list.syntax=filter allowed list <filterGroup*>
command.filter.allowed.list.description=Shows the list of allowed filters
command.filter.allowed.list.success.channel=List of allowed filters in **%filterGroup%**:
command.filter.allowed.list.arguments=%help.arg.filtergroup%
command.filter.allowed.list.examples=- `%prefix%allowedFilters list introduction` Shows the allowed filters in the introduction filter group


command.filter.denied.syntax=filter denied <add | remove | removeByIndex | list>
command.filter.denied.description=%prefix%filter denied <add | remove | removeByIndex | list>


command.filter.denied.add.syntax=filter denied add <filterGroup*> <filter: string*>
command.filter.denied.add.description=Adds an denied filter the specified filter group
command.filter.denied.add.success=Added an denied filter to **%filterGroup%** with content:\n%filter%
command.filter.denied.add.arguments=%help.arg.filtergroup%\
  \n%help.arg.filter%
command.filter.denied.add.examples=- `%prefix%filter denied add introduction notABadWord` adds "notABadWord" to the denied list of the "introduction" filter group


command.filter.denied.remove.syntax=filter denied remove <filterGroup*> <filter*>
command.filter.denied.remove.description=Removes an denied filter from the specified filter group
command.filter.denied.remove.success=Removed an denied filter from **%filterGroup%** with content:\n%filter%
command.filter.denied.remove.arguments=%help.arg.filtergroup%\
  \n%help.arg.filter%
command.filter.denied.remove.examples=- `%prefix%filter denied remove introduction notABadWord` removes "notABadWord" from the denied list of the "introduction" filter group


command.filter.denied.removebyindex.syntax=filter denied removeByIndex <filterGroup*> <filterIndex: number*>
command.filter.denied.removebyindex.description=Removes denied filters by index
command.filter.denied.removebyindex.success=Removed the denied filter at **%index%** in **%filterGroup%** with content:\n%filter%
command.filter.denied.removebyindex.arguments=%help.arg.filtergroup%\
  \n%help.arg.number%, filterIndex: can be shown with `%prefix%deniedFilters list`
command.filter.denied.removebyindex.examples=- `%prefix%filter denied removeByIndex #bots 0` removes entry at index 0 from the bot channel's denied list


command.filter.denied.list.syntax=filter denied list <filterGroup*>
command.filter.denied.list.description=Shows the list of denied filters
command.filter.denied.list.success=List of denied filters in **%filterGroup%**:
command.filter.denied.list.arguments=%help.arg.filtergroup%
command.filter.denied.list.examples=- `%prefix%deniedFilters list introduction` Shows the denied filters in the introduction filter group


command.filtergroup.syntax=filterGroup <add | remove | list | select | setTriggerPoints | channels | target | setState>
command.filtergroup.description=Manages the filter groups


command.filtergroup.add.syntax=filterGroup add <filterGroup: string*> [points: number*] [filterMode*] [state: boolean*]
command.filtergroup.add.description=Adds a filter group
command.filtergroup.add.added=Added the filter group (name: **%filterGroupName%**, points: **%points%**, mode: **%mode%**, state: **%state%**)
command.filtergroup.add.arguments=%help.arg.string%, filterGroupName: name of a new filter group\
  \n%help.arg.number%, points: number the user should get when violating a filter in this group\
  \n%help.arg.boolean%, whether the filter group should be active\
  \n%help.arg.filtermode%
command.filtergroup.add.examples=- `%prefix%filterGroup add minor` Adds the filter group "minor" with 1 point for violating and is enabled\
  \n- `%prefix%filterGroup add medium 2` Adds the filter group "medium" with 2 points for violating and is enabled\
  \n- `%prefix%filterGroup add major 3 no_wrap false` Adds the filter group "major" with 3 points for violating with no_wrap mode and is disabled


command.filtergroup.remove.syntax=filterGroup remove <filterGroup*>
command.filtergroup.remove.description=Removes filter groups
command.filtergroup.remove.removed=Removed the filter group named **%filterGroupName%**
command.filtergroup.remove.arguments=%help.arg.filtergroup%
command.filtergroup.remove.examples=- `%prefix%filterGroup remove minor` Removed the filter group named minor


command.filtergroup.list.syntax=filterGroup list
command.filtergroup.list.description=Lists all the filter groups and their details
command.filtergroup.list.title=Filter Groups


command.filtergroup.select.syntax=filterGroup select <filterGroup*>
command.filtergroup.select.description=Selects filter groups for use in other subcommands
command.filtergroup.select.selected=Selected the filter group named **%filterGroupName%**
command.filtergroup.select.arguments=%help.arg.filtergroup%
command.filtergroup.select.examples=- `%prefix%filterGroup select medium` Selects the filter group "medium"


command.filtergroup.settriggerpoints.syntax=filterGroup setTriggerPoints <points: number*>
command.filtergroup.settriggerpoints.description=Sets the points for violating the filters in the selected group
command.filtergroup.settriggerpoints.set=The points have been set to **%arg%**
command.filtergroup.settriggerpoints.arguments=%help.arg.filtergroup%
command.filtergroup.settriggerpoints.examples=- `%prefix%filterGroup setTriggerPoints 3` Sets the points to 3 for so users who violate the filter group get 3 points


command.filtergroup.channels.syntax=filterGroup channels <add | remove | list>
command.filtergroup.channels.description=Manage the channels where the filtergroup will be active


command.filtergroup.channels.add.syntax=filterGroup channels add <textChannel* | all>
command.filtergroup.channels.add.description=Adds a channel for the bot to monitor for filter violations of filters of the selected filter group
command.filtergroup.channels.add.added=Added the channel **%channel%** to the filter group
command.filtergroup.channels.add.added.all=Added all the channels to the filter group
command.filtergroup.channels.add.arguments=%help.arg.textchannel%
command.filtergroup.channels.add.examples=- `%prefix%filterGroup channels add #general` Sets the selected filter group to be enforced in #general\
  \n- `%prefix%filterGroup channels add all` Sets the selected filter group to be enforced in all text channels


command.filtergroup.channels.remove.syntax=filterGroup channels remove <textChannel*>
command.filtergroup.channels.remove.description=Removes a channel for the bot to monitor for filter violations of filters of the selected filter group
command.filtergroup.channels.remove.added=Removed the channel **%channel%** from the filter group
command.filtergroup.channels.remove.arguments=%help.arg.textchannel%
command.filtergroup.channels.remove.examples=- `%prefix%filterGroup channels remove #general` Sets the selected filter group to be not be enforced in #general


command.filtergroup.channels.list.syntax=filterGroup channels list
command.filtergroup.channels.list.description=Lists the channels in which the filters of the filter group are active
command.filtergroup.channels.list.title=Filter Group Channels
command.filtergroup.channels.list.empty=This filter group is not active in any channels


command.filtergroup.target.syntax=filterGroup target <add | remove | removeAt | list>
command.filtergroup.target.description=Targets are the punishmentgroups that receive the points when someone breaks a filter


command.filtergroup.target.add.syntax=filterGroup target add <punishGroup: string*>
command.filtergroup.target.add.description=Adds punishgroups to the target list
command.filtergroup.target.add.added=Added **%arg%** to the targets of %filter%
command.filtergroup.target.add.arguments=%help.arg.string%
command.filtergroup.target.add.examples=- `%prefix%filterGroup target add tier-3` Filters triggered in this group will add their points to the punishgroup tier-3


command.filtergroup.target.remove.syntax=filterGroup target remove <punishGroup: string*>
command.filtergroup.target.remove.description=Removes punishgroups from the target list
command.filtergroup.target.remove.removed=Removed **%arg%** from the targets of %filter%
command.filtergroup.target.remove.arguments=%help.arg.string%
command.filtergroup.target.remove.examples=- `%prefix%filterGroup target remove tier-3` Filters in this group will no longer add their points to the punishgroup tier-3


command.filtergroup.target.removeat.syntax=filterGroup target removeAt <index: number*>
command.filtergroup.target.removeat.description=Removes punishgroups from the target list based on index
command.filtergroup.target.removeat.removed=Removed **%arg%** from the targets of %filter%
command.filtergroup.target.removeat.arguments=%help.arg.number%, index: get the correct index by viewing `%prefix%filterGroup target list`
command.filtergroup.target.removeat.examples=- `%prefix%filterGroup targetAt removeAt 1` Filters in this group will no longer add their points to the punishgroup at pos 1


command.filtergroup.target.list.syntax=filterGroup target list
command.filtergroup.target.list.description=Lists all targets of this filtergroup
command.filtergroup.target.list.title=filterGroup targets oytff **%filter%**


command.filtergroup.setdeleteonhit.syntax=filterGroup setDeleteOnHit <state: boolean*>
command.filtergroup.setdeleteonhit.description=Sets if the filters in the group should also delete the message or only trigger the targets
command.filtergroup.setdeleteonhit.enabled=Enabled deleting messages detected by this filter group
command.filtergroup.setdeleteonhit.disabled=Disabled deleting messages detected by this filter group
command.filtergroup.setdeleteonhit.arguments=%help.arg.boolean%, state: whether it should delete or not
command.filtergroup.setdeleteonhit.examples=- `%prefix%filterGroup setDeleteOnHit true` Enabled deleting detected messages\
  \n- `%prefix%filterGroup setDeleteOnHit false` Disabled deleting detected messages


command.filtergroup.setstate.syntax=filterGroup setState <state: boolean*>
command.filtergroup.setstate.description=Manages the state of the selected filter group
command.filtergroup.setstate.enabled=Enabled the selected filter group
command.filtergroup.setstate.disabled=Disabled the selected filter group
command.filtergroup.setstate.arguments=%help.arg.boolean%, state: whether the filters of the selected group should be active
command.filtergroup.setstate.examples=- `%prefix%filterGroup setState true` Enables the filter group\
  \n- `%prefix%filterGroup setState false` Disables the filter group


command.filtergroup.setmode.syntax=filterGroup setMode <filterMode*>
command.filtergroup.setmode.description=Manages the mode of the selected filter group
command.filtergroup.setmode.set=The filter mode of the selected filter group has been set to **%mode%**
command.filtergroup.setmode.arguments=%help.arg.filtermode%
command.filtergroup.setmode.examples=- `%prefix%filterGroup setMode no_wrap` sets the mode to no_wrap\
  \n- `%prefix%filterGroup setMode default` Sets the mode to default


command.setfiltermode.syntax=setFilterMode <global | channel>
command.setfiltermode.description=Sets how the filters works


command.setfiltermode.channel.syntax=setFilterMode channel <textChannel*> [filterMode* | null]
command.setfiltermode.channel.description=Manages the channel filter mode
command.setfiltermode.channel.set=The filter mode of **%channel%** has been set to **%mode%**
command.setfiltermode.channel.unset=The filter mode of **%channel%** has been unset
command.setfiltermode.channel.show=The filter mode of **%channel%** is set to **%mode%**
command.setfiltermode.channel.arguments=%help.arg.textchannel%\
  \n%help.arg.filtermode%
command.setfiltermode.channel.examples=- `%prefix%setFilterMode channel #general` Shows the filter mode of #general\
  \n- `%prefix%setFilterMode channel #general null` Unsets the filter mode of #general\
  \n- `%prefix%setFilterMode channel #general NO_WRAP` Sets the filter to not wrap


command.setfiltermode.global.syntax=setFilterMode global [filterMode* | null]
command.setfiltermode.global.description=Manages the global filter mode
command.setfiltermode.global.set=The global filter mode has been set to **%mode%**
command.setfiltermode.global.unset=The global filter mode has been unset
command.setfiltermode.global.show=The global filter mode is set to **%mode%**
command.setfiltermode.global.arguments=%help.arg.filtermode%
command.setfiltermode.global.examples=- `%prefix%setFilterMode global` Shows the filter mode of #general\
  \n- `%prefix%setFilterMode global null` Unsets the filter mode of #general\
  \n- `%prefix%setFilterMode global NO_WRAP` Sets the filter to not wrap


command.setremoveresponses.syntax=setRemoveResponses <global | textChannel*> [seconds: number* | null]
command.setremoveresponses.description=Set after how many seconds the bot should remove its response
command.setremoveresponses.show.set=The bot response is currently set to be removed after **%seconds%** seconds in **%channel%**
command.setremoveresponses.show.unset=The bot response is currently set to not be removed in **%channel%**
command.setremoveresponses.set=The bot response is currently set to be removed after **%seconds%** seconds in **%channel%**
command.setremoveresponses.unset=The bot response has been set to not be removed in **%channel%**
command.setremoveresponses.arguments=%help.arg.textchannel%\
  \n%help.arg.number%


command.setremoveresponses.global.syntax=setRemoveResponses <global | textChannel*> [seconds: number* | null]
command.setremoveresponses.global.description=Set after how many seconds the bot should remove its response
command.setremoveresponses.global.show.set=The bot response is currently set to be removed after **%seconds%** seconds in this server
command.setremoveresponses.global.show.unset=The bot response is currently set to not be removed in this server
command.setremoveresponses.global.set=The bot response is currently set to be removed after **%seconds%** seconds in this server
command.setremoveresponses.global.unset=The bot response has been set to not be removed in this server
command.setremoveresponses.global.arguments=%help.arg.textchannel%\
  \n%help.arg.number%


command.setremoveinvoke.syntax=setRemoveInvoke <global | textChannel*> [seconds: number* | null]
command.setremoveinvoke.description=Set after how many seconds the bot should remove the message that trigger a command (invoke)
command.setremoveinvoke.show.set=The invoke is currently set to be removed after **%seconds%** seconds in **%channel%**
command.setremoveinvoke.show.unset=The invoke is currently set to not be removed in **%channel%**
command.setremoveinvoke.set=The invoke is currently set to be removed after **%seconds%** seconds in **%channel%**
command.setremoveinvoke.unset=The invoke has been set to not be removed in **%channel%**
command.setremoveinvoke.arguments=%help.arg.textchannel%\
  \n%help.arg.number%


command.setremoveinvoke.global.syntax=setRemoveInvoke global [seconds: number* | null]
command.setremoveinvoke.global.description=Set after how many seconds the bot should remove the message that trigger a command (invoke)
command.setremoveinvoke.global.show.set=The invoke is currently set to be removed after **%seconds%** seconds in this server
command.setremoveinvoke.global.show.unset=The invoke is currently set to not be removed in this server
command.setremoveinvoke.global.set=The invoke is currently set to be removed after **%seconds%** seconds in this server
command.setremoveinvoke.global.unset=The invoke has been set to not be removed in this server
command.setremoveinvoke.global.arguments=%help.arg.number%


command.starboard.syntax=starboard <exclude | include | excluded | hideMessage | deleteMessage | setMinStars>
command.starboard.description=Allows you to manage the starboard options


command.starboard.exclude.syntax=starboard exclude <textChannel*>
command.starboard.exclude.description=Excludes a channel from the starboard, when excluded: star reactions won't make messages appear in the starboard
command.starboard.exclude.excluded=Excluded %channel% from the starboard
command.starboard.exclude.arguments=%help.arg.textchannel%


command.starboard.include.syntax=starboard include <textChannel*>
command.starboard.include.description=Includes a channel for the starboard, channels are included by default
command.starboard.include.excluded=Included %channel% for the starboard
command.starboard.include.arguments=%help.arg.textchannel%


command.starboard.excluded.syntax=starboard excluded
command.starboard.excluded.description=Shows all excluded channels
command.starboard.excluded.excludedlist=List of starboard-excluded channels:


command.starboard.setminstars.syntax=starboard setMinStars [stars: number*]
command.starboard.setminstars.description=Configures the minimum amount of stars a message needs to get posted on the starboard
command.starboard.setminstars.get=The current minstars is set to **%stars%**
command.starboard.setminstars.set=The minstars has been set to **%stars%**
command.starboard.setminstars.arguments=%help.arg.number%


command.starboard.deletemessage.syntax=starboard deleteMessage <messageId: number*>
command.starboard.deletemessage.description=Deletes a message from the starboard database and from the starboard channel
command.starboard.deletemessage.unknown=Sorry I couldn't find a starboard message for that id
command.starboard.deletemessage.channelgone=The starboard channel is unset and thus I can't find the message linked to this id
command.starboard.deletemessage.stargone=Found a starboard entry for this in the database but the starboard-message was already removed
command.starboard.deletemessage.hidden=The starboard-message linked to this id is now hidden, you can make it reappear by using deleteMessage and then adding a star


command.starboard.hidemessage.syntax=starboard hideMessage <messageId: number*>
command.starboard.hidemessage.description=Hides a message from the starboard channel (cant be chown again unless `starboard deleteMessage` is used)
command.starboard.hidemessage.unknown=Sorry I couldn't find a starboard message for that id
command.starboard.hidemessage.channelgone=The starboard channel is unset and thus I can't find the message linked to this id
command.starboard.hidemessage.stargone=Found a starboard entry for this in the database but the starboard-message was already removed, removed it from the database aswell now so you can re-add it with a star reaction.
command.starboard.hidemessage.deleted=The starboard-message linked to this id is now hidden, you can make it reappear by using deleteMessage and then adding a star


command.punishment.syntax=punishment <add | remove | setReason | setExtra | list>
command.punishment.description=Manages punishment presets used for autopunishments
command.punishment.nomatch=No punishments were found for **%arg%**, check all current punishments with `%prefix%punishment list`
command.punishment.nomatch.typed=No punishments of type **%type%** were found for **%arg%**, check all current punishments with `%prefix%punishment list`


command.punishment.add.syntax=punishment add <punishmentType*> <punishmentName: string*> <reason: string*>
command.punishment.add.description=Adds punishment presets used for autopunishments
command.punishment.add.added=Added punishment (name: **%name%**, type: **%type%**) with reason:\n%reason%
command.punishment.add.arguments=%help.arg.punishmenttype%\
  \n%help.arg.string%, punishmentName: name of the punishment, reason: reason for this punishment
command.punishment.add.examples=- `%prefix%punishment add tempban swearing1 some reason` Adds a punishment named swearing1 of type tempban with reason "some reason"


command.punishment.list.syntax=punishment list <punishmentType*>
command.punishment.list.description=Lists your punishment presets
command.punishment.list.title=Punishments:
command.punishment.list.typedtitle=Punishments:
command.punishment.list.arguments=%help.arg.punishmenttype%
command.punishment.list.examples=- `%prefix%punishment list tempban` Shows all the punishments that are of the tempban type\
  \n- `%prefix%punishment list` Shows all the punishments


command.punishment.remove.syntax=punishment remove <punishmentName: string*>
command.punishment.remove.description=Removes punishment presets used for autopunishments
command.punishment.remove.removed=Removed punishment (name: **%name%**, type: **%type%**) with reason:\n%reason%
command.punishment.remove.arguments=%help.arg.string%, punishmentName: name of the punishment
command.punishment.remove.examples=- `%prefix%punishment remove swearing1` Removes a punishment named swearing1


command.punishment.setreason.syntax=punishment setReason <punishmentName: string*> [reason: string*]
command.punishment.setreason.description=Sets the reason for punishment presets
command.punishment.setreason.show=The reason for punishment (name: **%name%**, type: **%type%**) is set to:\n%reason%
command.punishment.setreason.set=The reason for punishment (name: **%name%**, type: **%type%**) has been set to:\n%reason%
command.punishment.setreason.arguments=%help.arg.string%, punishmentName: name of the punishment, reason: reason for the punishment
command.punishment.setreason.examples=- `%prefix%punishment setReason swearing1 some other reason` Sets the reason of the punishment named swearing1 to "some other reason"\
  \n- `%prefix%punishment setReason swearing1` Shows the reason of the punishment named swearing1


command.punishment.setextra.syntax=punishment setExtra <ban | mute | softban>
command.punishment.setextra.description=Sets extra options for punishments


command.punishment.setextra.ban.syntax=punishment setExtra ban <duration | delDays>
command.punishment.setextra.ban.description=Sets extra options for punishments of type ban


command.punishment.setextra.ban.duration.syntax=punishment setExtra ban duration <punishmentName: string*> <duration*>
command.punishment.setextra.ban.duration.description=Sets the duration option of a punishment of type ban
command.punishment.setextra.ban.duration.set=The duration of the punishment (name: **%name%**, type: **ban**) has been set to **%duration%** seconds
command.punishment.setextra.ban.duration.set.infinite=The duration of the the punishment (name: **%name%**, type: **ban**) has been set to infinite
command.punishment.setextra.ban.duration.arguments=%help.arg.duration%\
  \n%help.arg.string%, punishmentName: name of the punishment
command.punishment.setextra.ban.duration.examples=- `%prefix%punishment setExtra ban duration swearing1 1d 6h` the target will be banned for 30 hours when they receive this punishment


command.punishment.setextra.ban.deldays.syntax=punishment setExtra ban delDays <punishmentName: string*> <days: number*>
command.punishment.setextra.ban.deldays.description=Sets the deldays option of a punishment of type ban
command.punishment.setextra.ban.deldays.set=The deletion days amount of the punishment (name: **%name%**, type: **ban**) has been set to **%deldays%**
command.punishment.setextra.ban.deldays.arguments=%help.arg.number%, days: can be an int from 0 to 7 that represents the amount of days it will go back to delete messages \
  \n%help.arg.string%, punishmentName: name of the punishment
command.punishment.setextra.ban.deldays.examples=- `%prefix%punishment setExtra ban delDays swearing1 0` no messages will be removed when a target receives this punishement\
  \n- `%prefix%punishment setExtra ban delDays swearing2 1` messages younger then 1 day sent by the target will be removed when a target receives this punishment


command.punishment.setextra.mute.syntax=punishment setExtra mute <duration>
command.punishment.setextra.mute.description=Sets extra options for punishments of type mute


command.punishment.setextra.mute.duration.syntax=punishment setExtra mute duration <punishmentName: string*> <duration*>
command.punishment.setextra.mute.duration.description=Sets the duration option of a punishment of type mute
command.punishment.setextra.mute.duration.set=The duration of the the punishment (name: **%name%**, type: **mute**) has been set to **%duration%** seconds
command.punishment.setextra.mute.duration.set.infinite=The duration of the the punishment (name: **%name%**, type: **mute**) has been set to infinite
command.punishment.setextra.mute.duration.arguments=%help.arg.duration%\
  \n%help.arg.string%, punishmentName: name of the punishment
command.punishment.setextra.mute.duration.examples=- `%prefix%punishment setExtra mute duration swearing3 1d 6h` the target will be muted for 30 hours when they receive this punishment


command.punishment.setextra.softban.syntax=punishment setExtra softban <duration>
command.punishment.setextra.softban.description=Sets extra options for punishments of type softban


command.punishment.setextra.softban.deldays.syntax=punishment setExtra softBan delDays <punishmentName: string*> <days: number*>
command.punishment.setextra.softban.deldays.description=Sets the deldays option of a punishment of type softBan
command.punishment.setextra.softban.deldays.set=The deletion days amount of the punishment (name: **%name%**, type: **softBan**) has been set to **%deldays%**
command.punishment.setextra.softban.deldays.arguments=%help.arg.number%, days: can be an int from 0 to 7 that represents the amount of days it will go back to delete messages \
  \n%help.arg.string%, punishmentName: name of the punishment
command.punishment.setextra.softban.deldays.examples=- `%prefix%punishment setExtra softBan delDays swearing1 0` no messages will be removed when a target receives this punishement\
  \n- `%prefix%punishment setExtra softBan delDays swearing2 1` messages younger then 1 day sent by the target will be removed when a target receives this punishment


command.punishmentgroup.syntax=punishmentGroup <add | remove | select | list | setPPTrigger | setPointExpireTime | setPPGoal | removePPGoal>
command.punishmentgroup.description=Manages punishment groups
command.punishmentgroup.nomatch=No punishment groups were found for **%arg%**, check all current punishment groups with `%prefix%pg list`


command.punishmentgroup.add.syntax=punishmentGroup add <groupName: string*>
command.punishmentgroup.add.description=Adds punishment groups
command.punishmentgroup.add.added=Added a punishment group named **%name%**
command.punishmentgroup.add.arguments=%help.arg.string%, groupName: name for a punishment group
command.punishmentgroup.add.examples=- `%prefix%punishmentGroup add chat` Adds a punishment group named "chat"


command.punishmentgroup.remove.syntax=punishmentGroup remove <groupName: string*>
command.punishmentgroup.remove.description=Removes punishment groups
command.punishmentgroup.remove.removed=Removed the punishment group named **%name%**
command.punishmentgroup.remove.arguments=%help.arg.string%, groupName: name of a punishment group
command.punishmentgroup.remove.examples=- `%prefix%punishmentGroup remove chat` Removes a punishment group named "chat"


command.punishmentgroup.list.syntax=punishmentGroup list
command.punishmentgroup.list.description=Lists punishment groups
command.punishmentgroup.list.empty=There are no punishment groups yet. Create one using `%prefix%punishmentgroup add <groupName: string*>`
command.punishmentgroup.list.title=Punishment Groups
command.punishmentgroup.list.pptrigger=Punishment Point Triggers
command.punishmentgroup.list.ppgoal=Punishment Point Goals


command.punishmentgroup.select.syntax=punishmentGroup select <groupName: string*>
command.punishmentgroup.select.description=Selects a punishment group for further use
command.punishmentgroup.select.selected=Selected the punishment group **%group%**
command.punishmentgroup.select.arguments=%help.arg.string%, groupName: name of a punishment group
command.punishmentgroup.select.examples=- `%prefix%punishmentGroup select chat` Selects a punishment group named "chat"


command.punishmentgroup.copy.syntax=punishmentGroup copy <groupName: string*> <targetGroupName: string*>
command.punishmentgroup.copy.description=Copies a punishment group
command.punishmentgroup.copy.copied=Copied the punishment group **%source%** an it's values to **%arg%**
command.punishmentgroup.copy.exists=**%arg%** already exists, Hint: use %prefix%punishmentGroup list
command.punishmentgroup.copy.arguments=%help.arg.string%, groupName: name of a punishment group, newGroupName: new name for a punishment group
command.punishmentgroup.copy.examples=- `%prefix%punishmentGroup copy chat chat2` Creates a punishment group named "chat2" with all properties of "chat"


command.punishmentgroup.setpunishmentpointtrigger.syntax=punishmentGroup setPunishmentPointTrigger <pointsTriggerType*> <state: boolean*>
command.punishmentgroup.setpunishmentpointtrigger.description=Sets the states of punishment point triggers for the selected punishment group
command.punishmentgroup.setpunishmentpointtrigger.set.enabled=Enabled the punishment point trigger **%type%** for **%group%**
command.punishmentgroup.setpunishmentpointtrigger.set.disabled=Disabled the punishment point trigger **%type%** for **%group%**
command.punishmentgroup.setpunishmentpointtrigger.arguments=%help.arg.pointstriggertype%\
  \n%help.arg.boolean%, state: when true enable and when false disable
command.punishmentgroup.setpunishmentpointtrigger.examples=- `%prefix%punishmentGroup setPunishmentPointTrigger FILTERED_MESSAGE true` Message filters will now give points to this punishment group


command.punishmentgroup.setpunishmentpointsgoal.syntax=punishmentGroup setPunishmentPointsGoal <points: number*> <punishmentName: string*>
command.punishmentgroup.setpunishmentpointsgoal.description=Sets point goals to the selected punishment group
command.punishmentgroup.setpunishmentpointsgoal.set=The punishment points goal for **%points%** has been set to **%punishment%** for **%groupName%**
command.punishmentgroup.setpunishmentpointsgoal.arguments=%help.arg.number%, points: amount of points which will grant the punishment to the target (starts at 1)\
  \n%help.arg.string%, punishmentName: name of the punishment you want to give when the goal is met
command.punishmentgroup.setpunishmentpointsgoal.examples=- `%prefix%punishmentGroup setPunishmentPointsGoal 5 swearing1` The bot will give the punishment swearing1 when the selected punishment group reaches 5+ points for the first time


command.punishmentgroup.removepunishmentpointsgoal.syntax=punishmentGroup removePunishmentPointsGoal <points: number*>
command.punishmentgroup.removepunishmentpointsgoal.description=Removes point goals from the selected punishment group
command.punishmentgroup.removepunishmentpointsgoal.removed=Removed punishment points goal to **%groupName%** of (**%points%** -> **%punishment%**)
command.punishmentgroup.removepunishmentpointsgoal.arguments=%help.arg.number%, points: amount of points which would grant the punishment to the target (starts at 1)
command.punishmentgroup.removepunishmentpointsgoal.examples=- `%prefix%punishmentGroup removePunishmentPointsGoal 5` The bot will remove the punishment goal bound to 5 points of the selected punishment group


command.punishmentgroup.setpointexpiretime.syntax=punishmentGroup setPointExpireTime <duration*>
command.punishmentgroup.setpointexpiretime.description=Configures after how much time a point will be removed again
command.punishmentgroup.setpointexpiretime.set=Set the point expire tim of **%group%** to **%duration%**
command.punishmentgroup.setpointexpiretime.arguments=%help.arg.duration%
command.punishmentgroup.setpointexpiretime.examples=- `%prefix%punishmentGroup setPointExpireTime 5d` Points will expire 5days from when they are acquired


command.gainprofile.syntax=gainProfile <load | set | remove | list | info | copy>
command.gainprofile.description=Main command to manage server gain profiles
command.gainprofile.notfound=**%arg%** Is not a valid gain profile, use %prefix%gp list


command.gainprofile.load.syntax=gainProfile load <gainProfileName: string* | gainProfileIndex: number*>
command.gainprofile.load.description=Loads the chosen gain profile
command.gainprofile.load.loaded=Loaded the **%gainProfile%** gain profile (takes +-3 seconds to take effect)
command.gainprofile.load.arguments=%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.number%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`
command.gainprofile.load.examples=- `%prefix%gainProfile load bass` Loads the bass profile if present`\
  \n- `%prefix%gainProfile load 0` Loads the gain profile at index 0


command.gainprofile.set.syntax=gainProfile set <gainProfileName: string*>
command.gainprofile.set.description=Sets or updats the chosen gain profile, uses the current active bands as gain profile
command.gainprofile.set.added=Created/Updated the gain profile **%arg%** with the current active bands
command.gainprofile.set.arguments=%help.arg.string%, the gainProfileName doesn't need to exist, although if present it will be overwritten
command.gainprofile.set.examples=- `%prefix%gainProfile set bass` Creates/Updates a gain profile with name `bass`


command.gainprofile.remove.syntax=gainProfile remove <gainProfileName: string* | gainProfileIndex: number*>
command.gainprofile.remove.description=Removes the chosen gain profile
command.gainprofile.remove.removed=Removed the gain profile **%arg%**
command.gainprofile.remove.arguments=%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.number%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`
command.gainprofile.remove.examples=- `%prefix%gainProfile remove bass` Removes the gain profile with name `bass`\
  \n- `%prefix%gainProfile remove 0` Removes the gain profile at index 0


command.gainprofile.list.syntax=gainProfile remove <gainProfileName: string*>
command.gainprofile.list.description=Lists all your gain profiles
command.gainprofile.list.title=List of gain profiles


command.gainprofile.copy.syntax=gainProfile copy <gainProfileName1: string* | gainProfileIndex: number*> <gainProfileName2: string*>
command.gainprofile.copy.description=Copies an existing gain profile to a new one or overwrites an existing one
command.gainprofile.copy.copied=Copied the **%gainProfile1%** gain profile to **%gainProfile2%**
command.gainprofile.copy.arguments=%help.arg.string%, the gainProfileName1 needs to exist: check this with `%prefix%gp list`, the gainProfileName2 doesn't need to exist: although if present it will be overwritten\
  \n%help.arg.number%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`
command.gainprofile.copy.examples=- `%prefix%gainProfile copy bass LOW_BASS` Copies the gain profile with name `bass` to LOW_BASS\
  \n- `%prefix%gainProfile copy 0 LOW_BASS` Copies the gain profile with index 0 to LOW_BASS


command.gainprofile.info.syntax=gainProfile info <gainProfileName: string* | gainProfileIndex: number*>
command.gainprofile.info.description=Shows info about the chosen gain profile
command.gainprofile.info.arguments=%help.arg.string%, the gainProfileName needs to exist: check this with `%prefix%gp list`\
  \n%help.arg.number%, the gainProfileIndex needs to exist: check this with `%prefix%gp list`
command.gainprofile.info.examples=- `%prefix%gainProfile info bass` Shows info about the gain profile with name `bass`\
  \n- `%prefix%gainProfile info 0` Shows info about the gain profile at index 0


command.managesupporters.syntax=manageSupporters <add | set | remove | list>
command.managesupporters.description=Used for managing the supporters


command.managesupporters.add.syntax=manageSupporters add <user*>
command.managesupporters.add.description=Adds a supported


command.managesupporters.remove.syntax=manageSupporters remove <user*>
command.managesupporters.remove.description=Removes a supporter


command.managesupporters.set.syntax=manageSupporters set <user*> <guildId: number*>
command.managesupporters.set.description=Adds or updates a supporter with linked guildId


command.managesupporters.list.syntax=manageSupporters list
command.managesupporters.list.description=Shows a list of all supporters


command.loop.syntax=loop
command.loop.description=Loops the current track
command.loop.looped=Track looping **enabled**
command.loop.unlooped=Track looping **disabled**
command.loop.examples=- `%prefix%loop` Changes the loop state to the opposite of the current loop state


command.loopqueue.syntax=loopQueue
command.loopqueue.description=Loops the queue
command.loopqueue.looped=Queue looping **enabled**
command.loopqueue.unlooped=Queue looping **disabled**
command.loopqueue.examples=- `%prefix%loop` Changes the queue's loop state to the opposite of the current queue's loop state


command.support.syntax=support
command.support.description=Sends a link for the support server
command.support.server=Get help in the melijn bot server: https://discordapp.com/invite/E2RfZA9


command.seek.syntax=seek [timestamp*]
command.seek.description=Manages the position of the current track
command.seek.seeked=I seeked to `[%position% / %duration%]`
command.seek.notseekable=The current playing track is not seekable, might be a stream or simply unsupported for this type of track
command.seek.show=The current position of the track is `[%position% / %duration%]`
command.seek.notinrange=**%arg%** is not in range of 0 - `[%duration%]`
command.seek.arguments=%help.arg.timestamp%
command.seek.examples=- `%prefix%seek` Shows the track position\
  \n- `%prefix%seek 1:00` Seeks to 1 minute\
  \n- `%prefix%seek 1` Seeks to 1 second\
  \n- `%prefix%seek 120` Seeks to 120 seconds\
  \n- `%prefix%seek 1:00:50` Seeks to 1 hour and 50 seconds



command.forward.syntax=forward <timestamp*>
command.forward.description=Adds the timestamp to the current timestamp and thus forwards
command.forward.forwarded=Forwarded to `[%position% / %duration%]`
command.forward.arguments=%help.arg.timestamp%
command.forward.examples=- `%prefix%forward 1:00` Forwards by 1 minute\
  \n- `%prefix%forward 1` Forwards by 1 second\
  \n- `%prefix%forward 120` Forwards by 120 seconds\
  \n- `%prefix%forward 1:00:50` Forwards by 1 hour and 50 seconds



command.rewind.syntax=rewind <timestamp*>
command.rewind.description=Subtracts the timestamp from the current timestamp and thus rewinds
command.rewind.rewinded=Rewinded to `[%position% / %duration%]`
command.rewind.arguments=%help.arg.timestamp%
command.rewind.examples=- `%prefix%rewind 1:00` Rewinds by 1 minute\
  \n- `%prefix%rewind 1` Rewinds by 1 second\
  \n- `%prefix%rewind 120` Rewinds by 120 seconds\
  \n- `%prefix%rewind 1:00:50` Rewinds by 1 hour and 50 seconds


command.nowplaying.syntax=nowPlaying
command.nowplaying.description=Shows info about the active track
command.nowplaying.title=Now %status%
command.nowplaying.show.description=[**%title%**](%url%)
command.nowplaying.status=Status:
command.nowplaying.progress=Progress:


command.trackinfo.syntax=trackInfo <trackIndex*>
command.trackinfo.description=Shows detailed information about the track
command.trackinfo.title=TrackInfo
command.trackinfo.requester=Requester:
command.trackinfo.requesterid=Requester Id:
command.trackinfo.length=Length:
command.trackinfo.timeuntil=Time until track:
command.trackinfo.progress=Progress:
command.trackinfo.arguments=%help.arg.trackindex%
command.trackinfo.examples=- `%prefix%trackInfo 1` Shows info of track 1


command.volume.syntax=volume [volume*]
command.volume.description=Manages the volume of the music player
command.volume.set=The volume has been set to **%volume%%** (wait a few seconds)
command.volume.show=The volume has is set to **%volume%%**
command.volume.arguments=%help.arg.volume%
command.volume.examples=- `%prefix%volume 50` Makes the music sounds half as loud as 100% (default)\
  \n- `%prefix%volume` Shows the current volume


command.speed.syntax=speed [speed*]
command.speed.description=Manages the speed of the music player
command.speed.set=The speed has been set to **%speed%%** (wait a few seconds)
command.speed.show=The speed has is currently set to **%speed%%**
command.speed.arguments=%help.arg.speed%
command.speed.examples=- `%prefix%volume 50` Sets the speed to 50%\
  \n- `%prefix%volume` Shows the current speed


command.pitch.syntax=pitch [pitch*]
command.pitch.description=Manages the pitch of the music player
command.pitch.set=The pitch has been set to **%pitch%%** (wait a few seconds)
command.pitch.show=The pitch has is currently set to **%pitch%%**
command.pitch.arguments=%help.arg.pitch%
command.pitch.examples=- `%prefix%pitch 50` Sets the pitch to 50%\
  \n- `%prefix%pitch` Shows the current pitch


command.rate.syntax=rate [rate*]
command.rate.description=Manages the rate of the music player
command.rate.set=The rate has been set to **%rate%%** (wait a few seconds)
command.rate.show=The rate has is currently set to **%rate%%**
command.rate.arguments=%help.arg.rate%
command.rate.examples=- `%prefix%rate 50` Sets the rate to 50%\
  \n- `%prefix%rate` Shows the current rate


command.setband.syntax=setBand <number* | all> [gain: number*]
command.setband.description=Sets the frequency gain for the band for the music player
command.setband.set=The gain of band **%bandId%** has been set to **%gain%%**
command.setband.show=The gain of ban **%bandId%** is set to **%gain%%**
command.setband.arguments=%help.arg.number%, range [0-14] <-> (25, 40, 63, 100, 160, 250, 400, 630, 1k, 1.6k, 2.5k, 4k, 6.3k, 10k and 16k) Hz\
  \n%help.arg.number%, gain: 1-500, 100 is default, 300 is twice as loud
command.setband.examples=- `%prefix%setBand all 200` Doubles the gains of all frequencies\
  \n- `%prefix%setBand all` Shows the audio levels of all frequencies


command.setband.all.syntax=setBand all [gain: number*]
command.setband.all.description=Manages the frequency gains of all bands for the music player
command.setband.all.set=The gain of all bands have been set to **%gain%%**
command.setband.all.show=The gain of each band
command.setband.all.arguments=%help.arg.number%, gain: 1-500, 100 is default, 300 is twice as loud
command.setband.all.examples=- `%prefix%setBand all 200` Doubles the gains of all frequencies\
  \n- `%prefix%setBand all` Shows the audio levels of all frequencies


command.like.syntax=like 
command.like.description=Adds the current song to your favourites
command.like.added=Added **%title%** to your **favourite** playlist, it's at **#%position%**.


command.playlist.syntax=playlist <add | remove | saveQueue | list | load>
command.playlist.description=Command to manage your song playlists
command.playlist.unknownplaylist=No playlist found for `%arg%`, check with `%prefix%playlist list` or create a new one with `%prefix%playlist add <name>`
command.playlist.tracklimit=You've hit the limit of **%count%** tracks, upgrade to premium to get upto **%premiumCount%** tracks per playlist
command.playlist.tracklimit.premium=You've hit the premium limit of **%count%** tracks per playlist,
command.playlist.playlistlimit=You've hit the playlist limit, you can only have upto **%count%** different playlists or upto **%premiumCount%**
command.playlist.playlistlimit.premium=You've hit the premium playlist limit of **%count%** different playlists


command.playlist.clear.syntax=playlist clear <playlistName: string*>
command.playlist.clear.description=Clears an entire playlist
command.playlist.clear.cleared=Cleared your **%playlist%** wich had **%count%** tracks
command.playlist.clear.arguments=%help.arg.string%
command.playlist.clear.examples=- `%prefix%playlist clear favourites` clears all tracks from a playlist named favourites


command.playlist.add.syntax=playlist add <playlistName: string*>
command.playlist.add.description=Adds the current playing track to a playlist of choice
command.playlist.add.added=Added **%title%** to your **%playlist%** playlist, it's at **#%position%**.
command.playlist.add.arguments=%help.arg.string%
command.playlist.add.examples=- `%prefix%playlist add favourites` Adds the current playing track to a playlist named favourites.


command.playlist.savequeue.syntax=playlist saveQueue <playlistName: string*> [positions: numbers*]
command.playlist.savequeue.description=Adds the entire queue to a playlist, if specified it only adds the positions in queue you supplied
command.playlist.savequeue.added=Added **%amount%** tracks to your **%playlist%** playlist, it's from **#%positionStart%** -> **#%positionEnd%**.
command.playlist.savequeue.arguments=%help.arg.string%\
  \n%help.arg.numbers%
command.playlist.savequeue.examples=- `%prefix%playlist saveQueue favourites` Adds the entire queue and playing track to your playlist if possible.\
  \n- `%prefix%playlist saveQueue jammers 0-10,35-50` Adds the playing track, song 1-10 and song 35-50 to your playlist if possible


command.playlist.remove.syntax=playlist remove <playlistName: string*> <positions: numbers*>
command.playlist.remove.description=Removes the track at the specified indexes from the playlist of choice
command.playlist.remove.removed=Removed **%title%** from your **%playlist%** playlist.
command.playlist.remove.removed.multiple=Removed **%amount%** tracks from your **%playlist%** playlist.
command.playlist.remove.arguments=%help.arg.string%\
  \n%help.arg.numbers%
command.playlist.remove.examples=- `%prefix%playlist remove favourites 2` Removes the second track from a playlist named favourites.\
  \n- `%prefix%playlist remove favourites 2-10` Removes track 2-10 from your playlist name favourites.


command.playlist.load.syntax=playlist load <playlistName: string*>
command.playlist.load.description=Load a playlist into the queue
command.playlist.load.loaded=Loaded **%loadedAmount%** tracks from your playlist, **%failedAmount%** have failed
command.playlist.load.arguments=%help.arg.string%
command.playlist.load.examples=- `%prefix%playlist load favourites` Loads your playlist named favourites.


command.playlist.list.syntax=playlist list [playlistName: string*]
command.playlist.list.description=Lists all your playlists or shows all tracks in a playlist
command.playlist.list.tracks.title=Track list %playlist%
command.playlist.list.playlist.title=Your Playlists
command.playlist.list.playlist.empty=You don't have any playlists yet, try creating your first playlist with `%prefix%playlist add favourites` (Note: this only works if theres music playing and will add the playing track)
command.playlist.list.arguments=%help.arg.string%
command.playlist.list.examples=- `%prefix%playlist list` Shows a list of your playlists.\
  \n- `%prefix%playlist list favourites` Shows a list of tracks from your favourites playlist. 



command.shuffle.syntax=shuffle
command.shuffle.description=Shuffles the tracks in the queue
command.shuffle.success=Shuffled the queue


command.resume.syntax=resume
command.resume.description=Resumes the music player
command.resume.success=Resumed the music player


command.pause.syntax=pause
command.pause.description=Pauses the music player
command.pause.success=Paused the music player


command.bassboost.syntax=bassboost [state: boolean* | percent: number*]
command.bassboost.description=Manage bassboost effects for the music player
command.bassboost.enabled=Enabled bassboost
command.bassboost.disabled=Disabled bassboost
command.bassboost.show=Bassboost is currently set to **%value%%**
command.bassboost.set=Set bassboost to **%value%%**
command.bassboost.arguments=%help.arg.boolean%\
  \n%help.arg.number%
command.bassboost.examples=- `%prefix%bassboost on` Enables the bassboost\
  \n- `%prefix%bassboost off` Disables the bassboost\
  \n- `%prefix%bassboost 100%` Same as bassboost on\
  \n- `%prefix%bassboost 200%` Double the normal bassboost effect\
  \n- `%prefix%bassboost 0` Same as bassboost off



command.nightcore.syntax=nightcore [state: boolean* | percent: number*]
command.nightcore.description=Speeds up and increases the pitch of the playing track
command.nightcore.enabled=Enabled nightcore mode
command.nightcore.disabled=Disabled nightcore mode
command.nightcore.show=Nightcore is currently set to **%value%%**
command.nightcore.set=Set nightcore to **%value%%**
command.nightcore.arguments=%help.arg.boolean%\
  \n%help.arg.number%
command.nightcore.examples=- `%prefix%nightcore off` Disables nightcore mode\
  \n- `%prefix%nightcore on` Enables nightcore mode\
  \n- `%prefix%nightcore 100%` Same as nightcore on\
  \n- `%prefix%nightcore 200%` Double the normal nighcore effect\
  \n- `%prefix%nightcore 0` Same as nightcore off


command.skip.syntax=skip [trackIndex*]
command.skip.description=Skips tracks in the queue
command.skip.title=Skipped by %user%
command.skip.skips=Skipped **%amount%** tracks\
  \n[Previous](%url%): %track% `[%position% / %duration%]`
command.skip.skip=[Previous](%url%): %track% `[%position% / %duration%]`
command.skip.next=\n[Next](%url%): %track% `[%duration%]`
command.skip.nonext=\nNo next track, destroyed music player
command.skip.arguments=%help.arg.trackindex%, will skip to this index and remove all previous tracks
command.skip.examples=- `%prefix%skip` Skips the current playing track\
  \n- `%prefix%skip 4` Skips the current playing track and 3 in the queue


command.move.syntax=move <index1: number*> <index2: number*>
command.move.description=Moves a track to another position
command.move.sameindex=The indexes are the same
command.move.moved=Moved the **%track%** at position **%pos1%** to **%pos2%**
command.move.arguments=%help.arg.number%, index1: position of track that will move to index2
command.move.examples=- `%prefix%move 3 1` Moves the third track to the first position in the queue


command.voteskip.syntax=voteSkip
command.voteskip.description=Skips tracks in the queue if users agree
command.voteskip.titles=%votes% users agreed to skip
command.voteskip.title=%votes% user agreed to skip
command.voteskip.progress.title=%votes%/%votesRequired% users have agreed to skip so far 
command.voteskip.playing=[Playing](%url%): %track% `[%position% / %duration%]`
command.voteskip.skips=Skipped **%amount%** tracks\
  \n[Previous](%url%): %track% `[%position% / %duration%]`
command.voteskip.skip=[Previous](%url%): %track% `[%position% / %duration%]`
command.voteskip.next=\n[Next](%url%): %track% `[%duration%]`
command.voteskip.nonext=\nNo next track, destroyed music player


command.summon.syntax=summon [voiceChannel*]
command.summon.description=Summons the bot to a voiceChannel
command.summon.summoned=I've been summoned
command.summon.summoned.other=I've been summoned to **%channel%**
command.summon.arguments=%help.arg.voicechannel%
command.summon.examples=- `%prefix%summon` Summons the bot to your channel\
  \n- `%prefix%summon 368079833944555530` Summons the bot the the voiceChannel with that id


command.massmove.syntax=massMove <all | voiceChannel*> <null | voiceChannel*>
command.massmove.description=Moves the selected member to another voice channel or disconnects them
command.massmove.moved.all=Moved **%amount%** members to **%channel%**
command.massmove.kicked.all=Kicked **%amount%** members from all channels
command.massmove.moved=Moved **%amount%** members from **%channel%** to **%channel1%**
command.massmove.kicked=Kicked **%amount%** members from **%channel%**
command.massmove.arguments=%help.arg.voicechannel%
command.massmove.examples=- `%prefix%massMove General General-2` Moves all members connected to General to General-2\
  \n- `%prefix%massMove General null` Disconnects all members connected to General\
  \n- `%prefix%massMove all General-2` Moves all members connected to voice to General-2\
  \n- `%prefix%massMove all null` Disconnects all members connected to a voicechannel


command.queue.syntax=queue
command.queue.description=Shows the music queue
command.queue.title=Queue
command.queue.fakefooter=\n\nQueue duration: **%duration%**\
  \nQueue size: **%amount%**


command.lyrics.syntax=lyrics [query: string*]
command.lyrics.description=Shows the lyrics of the playing track or of the query, might not get a result tho
command.lyrics.help=I must either be playing a track or you could provide a query.
command.lyrics.examples=- `%prefix%lyrics rick astley never gonna give you up`
command.lyrics.words=Words
command.lyrics.characters=Characters
command.lyrics.powered=powered by %url%
command.lyrics.extrahelp=When using the no argument form: `%prefix%lyrics`, a track must be playing


command.clearchannel.syntax=clearChannel [textChannel*]
command.clearchannel.description=Makes a duplicate of the current channel and deletes the old channel
command.clearchannel.clearquestion=**WARNING!**: clearing the channel (**%channel%**) cannot be undone. Type `confirm` to proceed
command.clearchannel.notconfirm=You didn't type confirm, thus I will not clear the channel (**%channel%**)
command.clearchannel.arguments=%help.arg.textchannel%
command.clearchannel.examples=- `%prefix%clearChannel #channel` Makes a copy of the channel #channel and deletes the original\
  \n- `%prefix%clearChannel` Makes a copy of the channel this was sent in and deletes the original


command.lock.syntax=lock <textChannel...* | voiceChannel...* | all>
command.lock.description=Takes away send Message Write and Add Reaction permissions and stores the old state
command.lock.alreadylocked=**%channel%** is already locked, use `%prefix%unlock` to unlock or `%prefix%droplock` to keep as is and drop the old state
command.lock.locked=🔐 Locked **%channel%**, `%overrides%` overrides and `%permChanges%` permChanges
command.lock.questionmany=I found `%text%` TextChannels and `%voice%` VoiceChannels, type `yes` to lock them\
  \nList of failed channels: %unknown%
command.lock.questionmany.denied=Okay, cancelled locking of these channels
command.lock.questionmany.expired=You didn't answer in time, cancelled locking of these channels
command.lock.lockedmany=alreadyLocked: %alreadyLocked%\
  \nlocked: %locked%\
  \ntext: %text%\
  \ntextOverrides: %textOverrides%\
  \ntextPermChanges: %textPermChanges%\
  \nvoice: %voice%\
  \nvoiceOverrides: %voiceOverrides%\
  \nvoicePermChanges: %voicePermChanges%
command.lock.arguments=%help.arg.textchannel%\
  \n%help.arg.voicechannel%
command.lock.examples=- `%prefix%lock #channel` Locks #channel


command.unlock.syntax=lock <textChannel...* | voiceChannel...* | all>
command.unlock.description=Takes away send Message Write and Add Reaction permissions and stores the old state
command.unlock.notlocked=**%channel%** is not locked, use `%prefix%lock` to lock channels
command.unlock.unlocked=🔓 Unlocked **%channel%**, `%overrides%` overrides and `%permChanges%` permChanges
command.unlock.questionmany=I found `%text%` TextChannels and `%voice%` VoiceChannels, type `yes` to unlock them\
  \nList of failed channels: %unknown%
command.unlock.questionmany.denied=Okay, cancelled unlocking of these channels
command.unlock.questionmany.expired=You didn't answer in time, cancelled unlocking of these channels
command.unlock.unlockedmany=notLocked: %notLocked%\
  \nunlocked: %unlocked%\
  \ntext: %text%\
  \ntextOverrides: %textOverrides%\
  \ntextPermChanges: %textPermChanges%\
  \nvoice: %voice%\
  \nvoiceOverrides: %voiceOverrides%\
  \nvoicePermChanges: %voicePermChanges%
command.unlock.arguments=%help.arg.textchannel%\
  \n%help.arg.voicechannel%
command.unlock.examples=- `%prefix%unlock #channel` Unlocks #channel


command.metrics.syntax=metrics <commandNode* | limit | all> <timePeriod*>
command.metrics.description=Shows when and how many commands were executed
command.metrics.arguments=%help.arg.commandnode%\
  \n%help.arg.timeperiod%
command.metrics.examples=- `%prefix%metrics play thisweek` Shows the usage of the play command this week


command.metrics.limit.syntax=metrics limit <amount: number*> <timePeriod*>
command.metrics.limit.description=Shows the top amount metrics of command usage in the given time period
command.metrics.limit.arguments=%help.arg.number%, amount: must be greater than 0
command.metrics.limit.examples=- `%prefix%metrics limit 10 hour` Shows the top 10 commands and their usage in the last hour


command.metrics.all.syntax=metrics all <timePeriod*>
command.metrics.all.description=Shows the metrics of the past time period of all commands
command.metrics.all.arguments=%help.arg.timeperiod%
command.metrics.all.examples=- `%prefix%metrics all all` Shows all commands and their usage over all time



command.remindme.syntax=remindme <list | removeAt | duration*> [message: string*]
command.remindme.description=Setup reminders so you dont forget important stuff :p
command.remindme.limit=You've hit the limit of **%limit%** reminders, maybe get a dedicated app for reminding you off things instead ?
command.remindme.examples=- `%prefix%remindme 1h take out the dog`\
  \n- `%prefix%remindme 30m go to bed, work tomorrow`
command.remindme.arguments=%help.arg.duration%\
  \n%help.arg.string%


command.remindme.removeat.syntax=remindme removeAt <index: number*>
command.remindme.removeat.empty=You don't have any reminders
command.remindme.removeat.description=Delete reminders
command.remindme.removeat.removed=Removed your reminder at position **%index%**, message: `%message%`
command.remindme.removeat.arguments=%help.arg.number%, duration: check possible values with `%prefix%remindme list`
command.remindme.removeat.examples=- `%prefix%remindme removeAt 1` removes earliest reminder


command.remindme.list.syntax=remindme list
command.remindme.list.description=Shows a list of all your reminders
command.remindme.list.empty=You don't have any reminders
command.remindme.list.examples=- `%prefix%remindme list` shows list



message.music.loadfailed=Loading this track has failed, caused by:\n`%cause%`
message.music.nomatches=No songs were found for the input **%source%**, check for spelling or use a link
message.music.notracks=There is no track playing or paused
message.music.addedtrack.title=Track added by %user%
message.music.addedtrack.description=[#%position%](%url%) **%title%** `%duration%`
message.music.addedtracks.title=Tracks added by %user%
message.music.addedtracks.description=**%size%** tracks, positions: #%positionFirst% -> #%positionLast%
message.music.queuelimit=The queue is limited to %amount% tracks, donators get %donateAmount% tracks limit (`%prefix%donate`)
message.music.searchmenu=Track picker
message.music.search.cancelled.description=No track was picked


command.stop.syntax=stop
command.stop.description=Destroys the music player, leaves the VoiceChannel
command.stop.success=Destroyed the music player and left!


command.musicnode.syntax=musicNode
command.musicnode.description=Shows what music node the bot is on for your guild


command.play.syntax=play [-t | -r | -b] <attachment | youtube | soundcloud | attachment* | song* | spotifyLink* | url*>
command.play.description=Tries to load your input and adds it to the queue
command.play.loadingtrack=Loading **%trackCount%** track...
command.play.loadingtracks=Loading **%trackCount%** tracks...
command.play.loadedtrack=Finished loading track: (**%loadedCount%** loaded, **%failedCount%** failed)
command.play.loadedtracks=Finished loading tracks: (**%loadedCount%** loaded, **%failedCount%** failed)
command.play.arguments=%help.arg.attachment%\
  \n%help.arg.song%\
  \n%help.arg.spotifyLink%\
  \n%help.arg.url%
command.play.examples=- `%prefix%play ~attachment~` Adds the attachment to the queue\
  \n- `%prefix%play attachment ~attachment~` Adds the attachment to the queue\
  \n- `%prefix%play Rick Astley - Never Gonna Give You Up` Searches your song on youtube and adds it to the queue\
  \n- `%prefix%play youtube Rick Astley - Never Gonna Give You Up` Searches your song on youtube and adds it to the queue\
  \n- `%prefix%play soundcloud -b Miauw ik ben een kat` Searches your song on soundcloud and adds it to the bottom of the queue\
  \n- `%prefix%play -r https://www.youtube.com/watch?v=dQw4w9WgXcQ` Adds the song to a random position in the queue\
  \n- `%prefix%play -t https://www.twitch.tv/pondelinp` Adds the stream to the top of the queue\
  \n- `%prefix%play https://open.spotify.com/track/6qaf0vrdvKAqIwwdz4aQpg?si=Ezrk24_ST1aJOp5IyPvDHg` Gets track info from spotify api and searches on youtube and soundcloud for matching track, then adds it to the queue


command.play.yt.syntax=play yt [-t | -r | -b] <song*>
command.play.yt.description=Tries to load your input from youtube and adds it to the queue
command.play.yt.arguments=%help.arg.song%
command.play.yt.examples=- `%prefix%play yt Rick Astley - Never Gonna Give You Up` Searches the song on youtube and adds it to the queue


command.play.sc.syntax=play sc [-t | -r | -b] <song*>
command.play.sc.description=Tries to load your input from soundcloud and adds it to the queue
command.play.sc.arguments=%help.arg.song%
command.play.sc.examples=- `%prefix%play sc Miauw ik ben een kat` Searches your song on soundcloud and adds it to the queue


command.play.attachment.syntax=play attachment [-t | -r | -b] <attachment*>
command.play.attachment.description=Tries to load your attachment and adds it to the queue
command.play.attachment.arguments=%help.arg.attachment%
command.play.attachment.examples=- `%prefix%play ~attachment~` Adds the attachment to the queue


command.splay.syntax=splay [-t | -r | -b] <song* | youtube | soundcloud>
command.splay.description=Shows the first 5 options from youtube with reactions to pick a track
command.splay.loadingtrack=Loading the track...
command.splay.loadedtrack=Loaded the track
command.splay.failedloadedtrack=Failed to load the track
command.splay.arguments=%help.arg.song%
command.splay.examples=- `%prefix%splay Rick Astley - Never Gonna Give You Up` Searches your songs matching "Rick Astley - Never Gonna Give You Up" on youtube\
  \n- `%prefix%splay -t citypop` Searches your songs matching "citypop" on youtube and adds the selected track to the top of the queue\
  \n- `%prefix%splay -r future funk` Searches your songs matching "future funk" on youtube and adds the selected track to a random position in the queue\
  \n- `%prefix%splay -r cemellia` Searches your songs matching "cemellia" on youtube and adds the selected track to the bottom of the queue


command.splay.yt.syntax=splay yt [-t | -r | -b] <song*>
command.splay.yt.description=Tries to load your input from youtube and shows a track picker
command.splay.yt.arguments=%help.arg.song%
command.splay.yt.examples=- `%prefix%splay yt Rick Astley - Never Gonna Give You Up` Searches the song on youtube and shows the trackpicker


command.splay.sc.syntax=splay sc [-t | -r | -b] <song*>
command.splay.sc.description=Tries to load your input from soundcloud and shows a track picker
command.splay.sc.arguments=%help.arg.song%
command.splay.sc.examples=- `%prefix%play sc Miauw ik ben een kat` Searches the song on soundcloud and shows the trackpicker


command.forcerole.syntax=forceRole <add | remove | viewUser | viewRole | list>
command.forcerole.description=Manages what roles are forced to a user, users that leave and rejoin get this role back


command.forcerole.add.syntax=forceRole add <user*> <role*>
command.forcerole.add.description=Forces a role to the user
command.forcerole.add.success=Forced the **%role%** role upon **%user%**
command.forcerole.add.arguments=%help.arg.user%\
  \n%help.arg.role%
command.forcerole.add.examples=- `%prefix%forceRole add @ToxicMushroom cheater` Forces the cheater role upon ToxicMushroom


command.forcerole.remove.syntax=forceRole remove <user*> <role*>
command.forcerole.remove.description=Unforces a role from the user
command.forcerole.remove.success=Unforced the **%role%** role from **%user%**
command.forcerole.remove.arguments=%help.arg.user%\
  \n%help.arg.role%
command.forcerole.remove.examples=- `%prefix%forceRole remove @ToxicMushroom cheater` Unforces the cheater role from ToxicMushroom


command.forcerole.viewuser.syntax=forceRole viewUser <user*>
command.forcerole.viewuser.description=Shows the forced roles of a user
command.forcerole.viewuser.title=Forced roles of **%user%**:
command.forcerole.viewuser.arguments=%help.arg.user%


command.forcerole.viewrole.syntax=forceRole viewRoles <role*>
command.forcerole.viewrole.description=Shows the users who have the role forced upon them
command.forcerole.viewrole.title=List of users with **%role%** forced upon them:
command.forcerole.viewrole.arguments=%help.arg.role%


command.forcerole.list.syntax=forceRole list
command.forcerole.list.description=Shows a list of all roles forced upon users and how many users it was forced upon
command.forcerole.list.empty=There are no forced roles on anyone in this server
command.forcerole.list.title=List of forced roles with usercount:


command.purge.syntax=purge <number*> [user*]
command.purge.description=Deletes an amount of messages, in the current message, newest to older
command.purge.inprogress=There is already a purge in progress in this channel, please wait for this to complete. (This process can be very slow if the messages are older then 2 weeks).
command.purge.error=An error occurred while purging, this can occur when discord has api issue or if someone is deleting messages I planned to delete.
command.purge.success.one=Purged **%amount%** message
command.purge.success.user.one=Purged **%amount%** message of **%user%**
command.purge.success.more=Purged **%amount%** messages
command.purge.success.user.more=Purged **%amount%** messages of **%user%**
command.purge.arguments=%number%, represents the amount of messages that will be deleted
command.purge.examples=- `%prefix%purge 10` Deletes the last sent 11 messages (11 is so it includes the command you sent)\
  \n- `%prefix%purge 10 @YingHamster` Checks the last sent 11 messages: if they are from YingHamster deletes them\
  \n- `%prefix%spurge 10` Deletes the last 11 messages and gives no response\
  \n- `%prefix%spurge 10 @YingHamster` Checks the last sent 11 messages: if they are from YingHamster deletes them and gives no response


command.setbirthday.syntax=setBirthday [birthday* | null] [dateFormat*]
command.setbirthday.description=Sets you birthday
command.setbirthday.show.set=Your birthday is set to (birtday: **%birthday%**, birtyear: **%birthyear%**)
command.setbirthday.show.unset=Your birthday is unset
command.setbirthday.set=Your birthday has been set to **%birthday%**
command.setbirthday.unset=Your birthday has been unset
command.setbirthday.set.year=Your birthday has been set to **%birthday%** **%birthyear%**
command.setbirthday.arguments=%help.arg.birthday%\
  \n%help.arg.dateformat%
command.setbirthday.examples=- `%prefix%setBirthday 05/01/2000 mdy` Sets your birthday to the first of May in 2000\
  \n- `%prefix%setBirthday 05/01` Sets your birthday to five January\
  \n- `%prefix%setBirthday null` Unsets your birthday\
  \n- `%prefix%setBirthday` Shows your birthday


command.setmusicchannel.syntax=setMusicChannel [voiceChannel* | null]
command.setmusicchannel.description=Sets the voiceChannel, this makes the bot know where to play the streamUrl
command.setmusicchannel.show.set=The music channel is set to **%channel%**
command.setmusicchannel.show.unset=The music channel is unset
command.setmusicchannel.set.success=The music channel has been set to **%channel%**
command.setmusicchannel.unset.success=The music channel has been unset
command.setmusicchannel.arguments=%help.arg.voicechannel%
command.setmusicchannel.examples=- `%prefix%setMusicChannel 344081173212823553` Sets the music channel to 🎶 Music channel 🔊\
  \n- `%prefix%setMusicChannel null` Unsets the music channel\
  \n- `%prefix%setMusicChannel` Shows the music channel


command.setstreamurl.syntax=setStreamUrl [url* | null]
command.setstreamurl.description=Sets the streamUrl, this makes the bot know what to play in the music channel
command.setstreamurl.show.set=The stream url is set to **%url%**
command.setstreamurl.show.unset=The stream url is unset
command.setstreamurl.set=The stream url has been set to **%arg%**
command.setstreamurl.unset=The stream url has been unset
command.setstreamurl.arguments=%help.arg.url%, url must link to an audio file or stream
command.setstreamurl.examples=- `%prefix%setStreamUrl https://www.youtube.com/watch?v=jhExvE5fvJw` Sets the streamUrl to this yt vic\
  \n- `%prefix%setStreamUrl https://www.twitch.tv/pondelinp` Sets the streamUrl to this twitch stream\
  \n- `%prefix%setStreamUrl null` Unsets the stream url\
  \n- `%prefix%setStreamUrl` Shows the stream url


command.settings.syntax=settings
command.settings.description=Shows most of the settings of the bot
command.settings.title=Server settings


command.togglevotereminder.syntax=toggleVoteReminder [list | voteReminderOption*]
command.togglevotereminder.description=Toggles the vote reminder.
command.togglevotereminder.invalidoption=%arg% is not a valid VoteReminderOption, check `%prefix%help arg voteReminderOption`
command.togglevotereminder.set.true=The vote reminder for **%option%** has been **enabled**.
command.togglevotereminder.set.false=The vote reminder for **%option%** has been **disabled**.
command.togglevotereminder.show.true=The vote reminder for **%option%** is currently **enabled**.
command.togglevotereminder.arguments=%help.arg.votereminderoption%
command.togglevotereminder.examples=- `%prefix%toggleVoteReminder topgg` toggles the topgg voteReminder\
  \n- `%prefix%toggleVoteReminder global` toggles the global voteReminder


command.togglevotereminder.list.syntax=toggleVoteReminder list
command.togglevotereminder.list.description=Shows all the states of your vote-reminders


command.setslowmode.syntax=setSlowMode [textChannel* | slowModeDelay*] [slowModeDelay*]
command.setslowmode.description=More precise control for the slowmode setting of channels
command.setslowmode.show.unset=The slowmode of **%channel%** is unset
command.setslowmode.show.set=The slowmode of **%channel%** is set to **%slowMode%s**
command.setslowmode.unset=The slowmode of **%channel%** has been unset
command.setslowmode.set=The slowmode of **%channel%** has been set to **%slowMode%s**
command.setslowmode.arguments=%help.arg.textchannel%\
  \n%help.arg.slowmodedelay%
command.setslowmode.examples=- `%prefix%setSlowMode` Shows the slowmode value in the channel this was sent in\
  \n- `%prefix%setSlowMode #general` Shows the slowmode value in #general\
  \n- `%prefix%setSlowMode 10` Sets the slowmode value in the channel this was sent in to 10 seconds\
  \n- `%prefix%setSlowMode #general 10` Sets the slowmode value in #general to 10 seconds


command.setembedcolor.syntax=setEmbedColor [color* | null]
command.setembedcolor.description=Manages the embed color
command.setembedcolor.set=The embed color has been set to **%arg%**
command.setembedcolor.unset=The embed color has been unset
command.setembedcolor.show.set=The embed color is set to **%color%**
command.setembedcolor.show.unset=The embed color is unset
command.setembedcolor.arguments=%help.arg.color%
command.setembedcolor.examples=- `%prefix%setEmbedColor` Shows the current embed color\
  \n- `%prefix%setEmbedColor #FFFFFF` Sets the embed color to white\
  \n- `%prefix%setEmbedColor null` Unsets the embed color


command.setprivateembedcolor.syntax=setPrivateEmbedColor [color* | null]
command.setprivateembedcolor.description=Manages the private embed color
command.setprivateembedcolor.set=Your embed color has been set to **%arg%**
command.setprivateembedcolor.unset=Your embed color has been unset
command.setprivateembedcolor.show.set=Your embed color is set to **%color%**
command.setprivateembedcolor.show.unset=Your embed color is unset
command.setprivateembedcolor.arguments=%help.arg.color%
command.setprivateembedcolor.examples=- `%prefix%setPrivateEmbedColor` Shows your current embed color\
  \n- `%prefix%setPrivateEmbedColor #FFFFFF` Sets your embed color to white\
  \n- `%prefix%setPrivateEmbedColor null` Unsets your embed color


command.settimezone.syntax=setTimeZone [timezone* | null]
command.settimezone.description=Manages the timezone of the server
command.settimezone.set=The timezone has been set to **%zone%**
command.settimezone.unset=The timezone has been unset
command.settimezone.show.set=The timezone is set to **%zone%**
command.settimezone.show.unset=The timezone is unset
command.settimezone.arguments=%help.arg.timezone%
command.settimezone.examples=- `%prefix%setTimeZone` Shows the current timezone of the server\
  \n- `%prefix%setTimeZone Europe/Brussels` Sets the timezone of the server to brussels\
  \n- `%prefix%setTimeZone null` Unsets the timezone of the server


command.setprivatetimezone.syntax=setPrivateTimeZone [timezone* | null]
command.setprivatetimezone.description=Manages the private timezone
command.setprivatetimezone.set=Your timezone has been set to **%zone%**
command.setprivatetimezone.unset=Your timezone has been unset
command.setprivatetimezone.show.set=Your timezone is set to **%zone%**
command.setprivatetimezone.show.unset=Your timezone is unset
command.setprivatetimezone.arguments=%help.arg.timezone%
command.setprivatetimezone.examples=- `%prefix%setPrivateTimeZone` Shows your current timezone\
  \n- `%prefix%setPrivateTimeZone Europe/Brussels` Sets your timezone to brussels\
  \n- `%prefix%setPrivateTimeZone null` Unsets your timezone


title.rating=Rating
title.airing=Airing
title.publishing=Publishing
title.startdate=Start Date
title.enddate=End Date
title.joindate=Join Date
title.lastonline=Last Online
title.description=Description
title.synopsis=Synopsis
title.about=About
title.location=Location
title.birthday=Birthday
title.gender=Gender
title.genres=Genres
title.othernames=Other Names
title.format=Format
title.avgepisodelength=Avg Episode Length
title.episodes=Episodes
title.chapters=Chapters
title.volumes=Volumes
title.status=Status
title.nextepisode=Next Episode
title.airingat=Airing at
title.anime.type=Type
title.manga.type=Type
title.topanimegenres=Top rated Anime genres
title.topmangagenres=Top rated Manga genres
title.nofitgotourl=The rest did not fit, click the title to see more
title.otherstats=Other Stats
title.favorite.anime=Favorite Anime
title.favorite.manga=Favorite Manga
title.favorite.characters=Favorite Characters
title.fullname=Full Name
title.firstname=First Name
title.lastname=Last Name
title.namekanji=Name Kanji
title.alternativenames=Alternative Names
title.anime=Anime
title.manga=Manga


footer.favourites=Favourites %amount% 💗
footer.members=Members %amount% 👥


command.anilist.syntax=aniList <animeTitle: string* | character | anime | manga>
command.anilist.description=Command for searching on aniList
command.anilist.noresult=No anime results were found for **%arg%**, check for spelling mistakes
command.anilist.nsfw=I can only show the result **%anime%** in an NSFW marked channel
command.anilist.arguments=%help.arg.string%, animeTitle: an existing anime title
command.anilist.examples=- `%prefix%aniList beyblade` https://www.youtube.com/watch?v=rsJ7TbafbJE


command.anilist.user.syntax=aniList user <username: string*>
command.anilist.user.description=Shows info about an aniList users
command.anilist.user.noresult=No user results were found for **%arg%**, check for spelling mistakes
command.anilist.user.favorite.anime=Favorite Anime
command.anilist.user.favorite.manga=Favorite Manga
command.anilist.user.favorite.characters=Favorite Characters
command.anilist.user.title.animestats=**Anime Stats**
command.anilist.user.animestats=watched: **%watched%**\
    \nepisodes watched: **%epwatched%**\
    \nmean score: `%meanscore%%`\
    \nscore standard deviation: `%standardDeviation%%`
command.anilist.user.title.mangastats=**Manga Stats**
command.anilist.user.mangastats=read: **%read%**\
    \nvolumes read: **%volread%**\
    \nchapters read: **%chapread%**\
    \nmean score: `%meanscore%%`\
    \nscore standard deviation: `%standardDeviation%%`
command.anilist.user.examples=- `%prefix%aniList user Cat` Shows the aniList profile of Cat
command.anilist.user.arguments=%help.arg.string%, username: an existing aniList username


command.anilist.searchuser.syntax=aniList searchUser <username: string*>
command.anilist.searchuser.description=Searching aniList users
command.anilist.searchuser.examples=- `%prefix%aniList searchUser Cat` Shows the aniList profile of Cat
command.anilist.searchuser.arguments=%help.arg.string%, username: an existing aniList username


command.anilist.anime.syntax=aniList anime <animeTitle: string*>
command.anilist.anime.description=Command for searching anime on aniList
command.anilist.anime.noresult=No anime results were found for **%arg%**, check for spelling mistakes
command.anilist.anime.nsfw=I can only show the result **%anime%** in an NSFW marked channel
command.anilist.anime.argument=%help.arg.string%, animeTitle: an existing anime series title
command.anilist.anime.examples=- `%prefix%aniList anime beyblade` https://www.youtube.com/watch?v=rsJ7TbafbJE


command.anilist.searchanime.syntax=aniList searchAnime <animeTitle: string*>
command.anilist.searchanime.description=Searches aniList users
command.anilist.searchanime.arguments=%help.arg.string%, animeTitle: an existing anime series title
command.anilist.searchanime.examples=- `%prefix%aniList searchAnime beyblade` https://www.youtube.com/watch?v=rsJ7TbafbJE


command.anilist.manga.syntax=aniList manga <mangaTitle: string*>
command.anilist.manga.description=Shows info about aniList manga
command.anilist.manga.nsfw=I can only show the result **%anime%** in an NSFW marked channel
command.anilist.manga.noresult=No manga results were found for **%arg%**, check for spelling mistakes
command.anilist.manga.arguments=%help.arg.string%, mangaTitle: an existing manga title
command.anilist.manga.examples=- `%prefix%aniList manga darling in the franxx` Show most of the info from aniList about the "darling in the franxx" manga


command.anilist.searchmanga.syntax=aniList searchManga <mangaTitle: string*>
command.anilist.searchmanga.description=Searches aniList manga
command.anilist.searchmanga.arguments=%help.arg.string%, mangaTitle: an existing manga title
command.anilist.searchmanga.examples=- `%prefix%aniList searchManga darling in the franxx` Show most of the info from aniList about the "darling in the franxx" manga


command.anilist.character.syntax=aniList character <characterName: string*>
command.anilist.character.description=Shows info about aniList characters
command.anilist.character.noresult=No characters were found for **%arg%**, check for spelling mistakes
command.anilist.character.arguments=%help.arg.string%, characterName: an existing character name
command.anilist.character.examples=- `%prefix%aniList character Kiritsugu Emiya` Shows info about Kiritsugu Emiya


command.anilist.searchcharacter.syntax=aniList searchCharacter <characterName: string*>
command.anilist.searchcharacter.description=Searches aniList characters
command.anilist.searchcharacter.arguments=%help.arg.string%, characterName: an existing character name
command.anilist.searchcharacter.examples=- `%prefix%aniList searchCharacter Kiritsugu Emiya` Shows info about Kiritsugu Emiya


command.myanimelist.syntax=myAnimeList <animeTitle: string* | character | anime | manga>
command.myanimelist.description=Command for searching on myAnimeList
command.myanimelist.arguments=%help.arg.string%, animeTitle: an existing anime title
command.myanimelist.examples=- `%prefix%myAnimeList beyblade` https://www.youtube.com/watch?v=rsJ7TbafbJE


command.myanimelist.user.syntax=myAnimeList user <username: string*>
command.myanimelist.user.description=Command for searching user mal profiles
command.myanimelist.user.noresult=No user results were found for **%arg%**, check for spelling mistakes
command.myanimelist.user.arguments=%help.arg.string%, username: an existing mal username
command.myanimelist.user.examples=- `%prefix%myAnimeList user Cat` Shows Cat's mal profile


command.myanimelist.character.syntax=myAnimeList character <characterName: string*>
command.myanimelist.character.description=Command for searching characters on mal
command.myanimelist.character.noresult=No characters were found for **%arg%**, check for spelling mistakes
command.myanimelist.character.arguments=%help.arg.string%, characterName: an existing character name
command.myanimelist.character.examples=- `%prefix%myAnimeList character Kiritsugu Emiya` Shows info about Kiritsugu Emiya


command.myanimelist.anime.syntax=myAnimeList anime <animeTitle: string*>
command.myanimelist.anime.description=Command for searching anime on mal
command.myanimelist.anime.noresult=No anime results were found for **%arg%**, check for spelling mistakes
command.myanimelist.anime.arguments=%help.arg.string%, animeTitle: an existing anime title
command.myanimelist.anime.examples=- `%prefix%myAnimeList anime beyblade` https://www.youtube.com/watch?v=rsJ7TbafbJE


command.myanimelist.manga.syntax=myAnimeList manga <mangaTitle: string*>
command.myanimelist.manga.description=Command for searching manga on mal
command.myanimelist.manga.noresult=No manga results were found for **%arg%**, check for spelling mistakes
command.myanimelist.manga.arguments=%help.arg.string%, mangaTitle: an existing manga title
command.myanimelist.manga.examples=- `%prefix%myAnimeList manga darling in the franxx` Show most of the info from myAnimeList about the "darling in the franxx" manga


command.emotes.syntax=emotes [full | raw | compact]
command.emotes.description=Shows all the emotes in the current server
command.emotes.noemotes=This server has no custom emojis/emotes
command.emotes.examples=- `%prefix%emotes` simple line of emotes\
  \n- `%prefix%emotes raw` shows the raw value of each emote\
  \n- `%prefix%emotes full` shows a detailed list of all the emotes\
  \n- `%prefix%emotes compact` shows a simple line of the emotes but without spaces between the emotes


command.bonk.syntax=bonk <user*> [millisdelay: number*] [loop: boolean*]
command.bonk.description=Bonk a user
command.bonk.arguments=%help.arg.user%\
  \n%help.arg.number%\
  \n%help.arg.boolean%
command.bonk.examples=- `%prefix%bonk Xavin` Will bonk Xavin with a 200ms delay and loops\
  \n- `%prefix%bonk @Xavin 500` Will bonk Xavin with a 500ms delay and loops\
  \n- `%prefix%bonk @Xavin 2000 false` Will bonk Xavin with a 2000ms delay and doesn't loop


command.ship.syntax=ship <user*> [user*]
command.ship.description=Ship yourself with a user or specify 2 users to ship
command.ship.arguments=%help.arg.user%
command.ship.examples=- `%prefix%ship Xavin` Ship yourself with Xavin 😳\
  \n- `%prefix%ship @Xavin @Yukine` 😳 Ship xavin and yukine 😳



command.meme.syntax=meme
command.meme.description=Shows a random hot post from a meme reddit


command.reddit.syntax=reddit <subreddit: string*> [hot | new | top | rising]
command.reddit.description=Shows a random post from the chosen subreddit and category
command.reddit.allpostsnsfw=**%amount%** posts were nsfw, none of the posts were safe for work.\nPlease try again in an nsfw textchannel.
command.reddit.subnsfw=**%subreddit%** is an nsfw subreddit.\nPlease try again in an nsfw textchannel.
command.reddit.down=**%subreddit%** or the reddit api is down or overloaded, see: https://www.redditstatus.com/ and try again later.
command.reddit.unknown=**%subreddit%** is not a subreddit.
command.reddit.private=**%subreddit%** is a private subreddit.
command.reddit.empty=**%subreddit%** is an empty subreddit.
command.reddit.arguments=%help.arg.string%
command.reddit.examples=- `%prefix%reddit dankmemes` Shows a random top post on r/dankmemes from today\
  \n- `%prefix%reddit r/dankmemes hot` Shows a random hot post on r/dankmemes\
  \n- `%prefix%reddit r/dankmemes top hour` Shows a random top post on r/dankmemes from this hour\
  \n- `%prefix%reddit r/dankmemes top week` Shows a random top post on r/dankmemes from this week\
  \n- `%prefix%reddit r/dankmemes top month` Shows a random top post on r/dankmemes from this month\
  \n- `%prefix%reddit r/dankmemes top year` Shows a random top post on r/dankmemes from this year\
  \n- `%prefix%reddit r/dankmemes top all` Shows a random top post on r/dankmemes from all time


command.osu.syntax=osu <user | top | recent | setUser>
command.osu.description=View osu stats, recent and/or top plays of a user.
command.osu.guide=You can either link an OSU! profile to your discord account: `%prefix%osu setUser <osuUserName: string*>` and then don't specify a user after commands \
   \n**or**\nYou can just specify a user after the command `%syntax%`
command.osu.unknownuser=Oops, I couldn't find a user named **%name%** on OSU!, check for spelling errors
command.osu.unknownscore=Oops, The user named **%name%** has no scores yet on OSU!, time to *click the circles..*
command.osu.unknownbeatmapfromscore=Oops, The OSU! beatmap for your **#%x%** score is missing!


command.osu.setuser.syntax=osu setUser <osuUserName: string* | null>
command.osu.setuser.description=Link your osu account to your discord account.
command.osu.setuser.help=You then don't have to use an arguments for `%prefix%osu user`, `%prefix%osu top`, ect..\
  \nOther users can then also ping you instead of writing your osu name `%prefix%osu user @ToxicMushroom`
command.osu.setuser.unset=The OSU! account has been unlinked from your discord account
command.osu.setuser.set=The OSU! account **%name%** has been linked to your discord account
command.osu.setuser.show.unset=There is currently no OSU! account linked to your discord account
command.osu.setuser.show.set=The OSU! account **%name%** is currently linked to your discord account
command.osu.setuser.arguments=%help.arg.string%, osuUserName: must be an existing osu user
command.osu.setuser.examples=- `%prefix%osu setUser PixelHamster` PixelHamster is now set as your OSU! user\
  \n- `%prefix%osu setUser null` Unlinks your osu username\
  \n- `%prefix%osu setUser` Shows the currently linked OSU! user


command.osu.user.syntax=osu user [user* | osuUserName: string*]
command.osu.user.description=Shows the OSU! user profile info of the specified user
command.osu.user.arguments=%help.arg.string%, osuUserName: must be an existing osu user
command.osu.user.examples=- `%prefix%osu user PixelHamster` Shows the osu profile of PixelHamster\
  \n- `%prefix%osu user` Shows the osu profile of the profile linked to your discord account\
  \n- `%prefix%osu user @DiscordWumpus` Shows the osu profile of the profile linked @DiscordWumpus's discord account


command.osu.top.syntax=osu top [user* | osuUserName: string*] [index: number*]
command.osu.top.description=Shows the top OSU! plays of the specified user
command.osu.top.arguments=%help.arg.string%, osuUserName: must be an existing osu user
command.osu.top.examples=- `%prefix%osu top PixelHamster` Shows the top osu plays of PixelHamster\
  \n- `%prefix%osu top` Shows the top osu plays of the profile linked to your discord account\
  \n- `%prefix%osu top @DiscordWumpus` Shows the top osu plays of the profile linked @DiscordWumpus's discord account


command.osu.recent.syntax=osu recent [user* | osuUserName: string*] [index: number*]
command.osu.recent.description=Shows the recent OSU! plays of the specified user
command.osu.recent.arguments=%help.arg.string%, osuUserName: must be an existing osu user
command.osu.recent.norecent=I couldn't find recent plays for **%name%** on OSU!
command.osu.recent.examples=- `%prefix%osu recent PixelHamster` Shows the recent osu plays of PixelHamster\
  \n- `%prefix%osu recent` Shows the recent osu plays of the profile linked to your discord account\
  \n- `%prefix%osu recent @DiscordWumpus` Shows the recent osu plays of the profile linked @DiscordWumpus's discord account


command.pat.syntax=pat [user*] [user*]
command.pat.description=Gives a virtual pat to users
command.pat.eb.description=**%author%** patted **%target%**
command.pat.eb.description.solo=**%author%** pats
command.pat.arguments=%help.arg.user%
command.pat.examples=- `%prefix%pat` You pat\
  \n- `%prefix%pat @someone` You pat someone\
  \n- `%prefix%pat @someone @someoneElse` someone pats someoneElse


command.shoot.syntax=shoot [user*] [user*]
command.shoot.description=Shoot users
command.shoot.eb.description=**%author%** shot **%target%**
command.shoot.eb.description.solo=**%author%** shoots
command.shoot.arguments=%help.arg.user%
command.shoot.examples=- `%prefix%shoot` You shoot\
  \n- `%prefix%shoot @someone` You shoot someone\
  \n- `%prefix%shoot @someone @someoneElse` someone shoots someoneElse


command.blush.syntax=blush [user*] [user*]
command.blush.description=Blush by users
command.blush.eb.description=**%author%** made **%target%** blush
command.blush.eb.description.solo=**%author%** blushes
command.blush.arguments=%help.arg.user%
command.blush.examples=- `%prefix%blush` You blush\
  \n- `%prefix%blush @someone` You make someone blush\
  \n- `%prefix%blush @someone @someoneElse` someone makes someoneElse blush


command.cuddle.syntax=cuddle [user*] [user*]
command.cuddle.description=Cuddle users
command.cuddle.eb.description=**%author%** cuddled **%target%**
command.cuddle.eb.description.solo=**%author%** cuddles
command.cuddle.arguments=%help.arg.user%
command.cuddle.examples=- `%prefix%cuddle` You cuddle\
  \n- `%prefix%cuddle @someone` You cuddle someone\
  \n- `%prefix%cuddle @someone @someoneElse` someone cuddles someoneElse


command.greet.syntax=greet [user*] [user*]
command.greet.description=Greet users
command.greet.eb.description=**%author%** greeted **%target%**
command.greet.eb.description.solo=**%author%** greets
command.greet.arguments=%help.arg.user%
command.greet.examples=- `%prefix%greet` You cuddle\
  \n- `%prefix%greet @someone` You greet someone\
  \n- `%prefix%greet @someone @someoneElse` someone greets someoneElse


command.handholding.syntax=handholding [user*] [user*]
command.handholding.description=Hold hands with users
command.handholding.eb.description=**%author%** held hands with **%target%**
command.handholding.eb.description.solo=**%author%** holds hands
command.handholding.arguments=%help.arg.user%
command.handholding.examples=- `%prefix%handholding` You hold hands\
  \n- `%prefix%handholding @someone` You hold hands with someone\
  \n- `%prefix%handholding @someone @someoneElse` someone holds hands with someoneElse


command.highfive.syntax=highfive [user*] [user*]
command.highfive.description=Highfive users
command.highfive.eb.description=**%author%** highfived **%target%**
command.highfive.eb.description.solo=**%author%** highfives
command.highfive.arguments=%help.arg.user%
command.highfive.examples=- `%prefix%highfive` You highfive\
  \n- `%prefix%highfive @someone` You highfive someone\
  \n- `%prefix%highfive @someone @someoneElse` someone highfives someoneElse


command.hug.syntax=hug [user*] [user*]
command.hug.description=Hug users
command.hug.eb.description=**%author%** hugged **%target%**
command.hug.eb.description.solo=**%author%** hugs
command.hug.arguments=%help.arg.user%
command.hug.examples=- `%prefix%hug` You hug\
  \n- `%prefix%hug @someone` You hug someone\
  \n- `%prefix%hug @someone @someoneElse` someone hugs someoneElse


command.kiss.syntax=kiss [user*] [user*]
command.kiss.description=Kiss users
command.kiss.eb.description=**%author%** kissed **%target%**
command.kiss.eb.description.solo=**%author%** kisses
command.kiss.arguments=%help.arg.user%
command.kiss.examples=- `%prefix%kiss` You kiss\
  \n- `%prefix%kiss @someone` You kiss someone\
  \n- `%prefix%kiss @someone @someoneElse` someone kisses someoneElse


command.lick.syntax=lick [user*] [user*]
command.lick.description=Lick users
command.lick.eb.description=**%author%** licked **%target%**
command.lick.eb.description.solo=**%author%** licks
command.lick.arguments=%help.arg.user%
command.lick.examples=- `%prefix%lick` You lick\
  \n- `%prefix%lick @someone` You lick someone\
  \n- `%prefix%lick @someone @someoneElse` someone licks someoneElse


command.poke.syntax=poke [user*] [user*]
command.poke.description=Poke users
command.poke.eb.description=**%author%** poked **%target%**
command.poke.eb.description.solo=**%author%** pokes
command.poke.arguments=%help.arg.user%
command.poke.examples=- `%prefix%poke` You poke\
  \n- `%prefix%poke @someone` You poke someone\
  \n- `%prefix%poke @someone @someoneElse` someone pokes someoneElse



command.punch.syntax=punch [user*] [user*]
command.punch.description=Punch users
command.punch.eb.description=**%author%** punched **%target%**
command.punch.eb.description.solo=**%author%** punches
command.punch.arguments=%help.arg.user%
command.punch.examples=- `%prefix%punch` You punch\
  \n- `%prefix%punch @someone` You punch someone\
  \n- `%prefix%punch @someone @someoneElse` someone punches someoneElse


command.pout.syntax=pout [user*] [user*]
command.pout.description=Pout by users
command.pout.eb.description=**%author%** pouts at **%target%**
command.pout.eb.description.solo=**%author%** pouts
command.pout.arguments=%help.arg.user%
command.pout.examples=- `%prefix%pout` You pout\
  \n- `%prefix%pout @someone` You pout at someone\
  \n- `%prefix%pout @someone @someoneElse` someone pouts at someoneElse

command.slap.syntax=slap [user*] [user*]
command.slap.description=Slap users
command.slap.eb.description=**%author%** slapped **%target%**
command.slap.eb.description.solo=**%author%** slaps
command.slap.arguments=%help.arg.user%
command.slap.examples=- `%prefix%slap` You slap\
  \n- `%prefix%slap @someone` You slap someone\
  \n- `%prefix%slap @someone @someoneElse` someone slaps someoneElse


command.stare.syntax=stare [user*] [user*]
command.stare.description=Stare at users
command.stare.eb.description=**%author%** stared at **%target%**
command.stare.eb.description.solo=**%author%** stares
command.stare.arguments=%help.arg.user%
command.stare.examples=- `%prefix%stare` You stare\
  \n- `%prefix%stare @someone` You stare at someone\
  \n- `%prefix%stare @someone @someoneElse` someone stares at someoneElse


command.thumbsup.syntax=thumbsup [user*] [user*]
command.thumbsup.description=Thumbsup at users
command.thumbsup.eb.description=**%author%** points his thumb up at **%target%**
command.thumbsup.eb.description.solo=**%author%** points his thumbs up
command.thumbsup.arguments=%help.arg.user%
command.thumbsup.examples=- `%prefix%thumbsup` You point your thumbs up\
  \n- `%prefix%thumbsup @someone` You point your thumbs up at someone\
  \n- `%prefix%thumbsup @someone @someoneElse` someone point their thumbs up at someoneElse


command.tickle.syntax=tickle [user*] [user*]
command.tickle.description=Tickles users
command.tickle.eb.description=**%author%** tickled **%target%**
command.tickle.eb.description.solo=**%author%** tickles
command.tickle.arguments=%help.arg.user%
command.tickle.examples=- `%prefix%tickle` You tickle\
  \n- `%prefix%tickle @someone` You tickle someone\
  \n- `%prefix%tickle @someone @someoneElse` someone tickles someoneElse


command.awoo.syntax=awoo [user*] [user*]
command.awoo.description=Awoo's users
command.awoo.eb.description=**%author%** awoo'd at **%target%**
command.awoo.eb.description.solo=**%author%** awoo's
command.awoo.arguments=%help.arg.user%
command.awoo.examples=- `%prefix%awoo` You awoo\
  \n- `%prefix%awoo @someone` You awoo someone\
  \n- `%prefix%awoo @someone @someoneElse` someone awoo at someoneElse


command.cry.syntax=cry [user*] [user*]
command.cry.description=Make users cry
command.cry.eb.description=**%author%** cries at **%target%**
command.cry.eb.description.solo=**%author%** cry
command.cry.arguments=%help.arg.user%
command.cry.examples=- `%prefix%cry` You cry\
  \n- `%prefix%cry @someone` You cry at someone\
  \n- `%prefix%cry @someone @someoneElse` someone cries at someoneElse


command.bite.syntax=bite [user*] [user*]
command.bite.description=Bites users
command.bite.eb.description=**%author%** bit **%target%**
command.bite.eb.description.solo=**%author%** bites
command.bite.arguments=%help.arg.user%
command.bite.examples=- `%prefix%bite` You bite\
  \n- `%prefix%bite @someone` You bite someone\
  \n- `%prefix%bite @someone @someoneElse` someone bites someoneElse


command.dab.syntax=dab [user*] [user*]
command.dab.description=Pls don't
command.dab.eb.description=**%author%** dabbed on **%target%**
command.dab.eb.description.solo=**%author%** dabs
command.dab.arguments=%help.arg.user%
command.dab.examples=- `%prefix%dab` You dab\
  \n- `%prefix%dab @someone` You dab on someone\
  \n- `%prefix%dab @someone @someoneElse` someone dabs on someoneElse


command.lewd.syntax=lewd [user*] [user*]
command.lewd.description=Lewd at users
command.lewd.eb.description=**%author%** lewded at **%target%**
command.lewd.eb.description.solo=**%author%** lewds
command.lewd.arguments=%help.arg.user%
command.lewd.examples=- `%prefix%lewd` You lewd\
  \n- `%prefix%lewd @someone` You lewd at someone\
  \n- `%prefix%lewd @someone @someoneElse` someone lewds at someoneElse


command.nekoh.syntax=nekoH
command.nekoh.description=NSFW Cat girls


command.rule34.syntax=rule34 <tag: string*>
command.rule34.description=Searches the rule34 board for your tag
command.rule34.arguments=%help.arg.string%, tag: tags can have spaces (will be replaced by _), seperate multiple tags by a komma
command.rule34.examples=- `%prefix%rule34 neko` shows neko images from r34 (NSFW)


command.safebooru.syntax=safebooru <tag: string*>
command.safebooru.description=Searches the safebooru board for your tag
command.safebooru.arguments=%help.arg.string%, tag: tags can have spaces (will be replaced by _), seperate multiple tags by a komma
command.safebooru.examples=- `%prefix%safebooru neko` shows mostly sfw neko images from safebooru (Can be on the edge sometimes)


command.gelbooru.syntax=gelbooru <tag: string*>
command.gelbooru.description=Searches the gelbooru board for your tag
command.gelbooru.arguments=%help.arg.string%, tag: tags can have spaces (will be replaced by _), seperate multiple tags by a komma
command.gelbooru.examples=- `%prefix%gelbooru neko` shows neko images from gelbooru (NSFW)


command.tbib.syntax=tbib <tag: string*>
command.tbib.description=Searches the big image board for your tag
command.tbib.arguments=%help.arg.string%, tag: tags can have spaces (will be replaced by _), seperate multiple tags by a komma
command.tbib.examples=- `%prefix%tbib neko` shows neko images from tbib (NSFW)


command.shrug.syntax=shrug [user*] [user*]
command.shrug.description=Shrug at users
command.shrug.eb.description=**%author%** shrugged at **%target%**
command.shrug.eb.description.solo=**%author%** shrugs
command.shrug.arguments=%help.arg.user%
command.shrug.examples=- `%prefix%shrug` You shrug\
  \n- `%prefix%shrug @someone` You shrug at someone\
  \n- `%prefix%shrug @someone @someoneElse` someone shrugs at someoneElse


command.nom.syntax=nom [user*] [user*]
command.nom.description=Eat food
command.nom.eb.description=**%target%**, **%author%** wants to eat your food
command.nom.eb.description.solo=**%author%** wants to eat
command.nom.arguments=%help.arg.user%
command.nom.examples=- `%prefix%nom` You want to eat\
  \n- `%prefix%nom @someone` You want to eat someone's food\
  \n- `%prefix%nom @someone @someoneElse` someone wants to eat someoneElse's food


command.confused.syntax=confused [user*] [user*]
command.confused.description=Show that you're confused
command.confused.eb.description=**%target%** confused **%author%**
command.confused.eb.description.solo=**%author%** is confused
command.confused.arguments=%help.arg.user%
command.confused.examples=- `%prefix%confused` You are confused\
  \n- `%prefix%confused @someone` You are confused because off someone\
  \n- `%prefix%confused @someone @someoneElse` someone is confused because off someoneElse


command.megumin.syntax=megumin
command.megumin.description=EXPLOSION


command.miku.syntax=miku
command.miku.description=Hatsune Miku images (might be suggestive)


command.neko.syntax=neko
command.neko.description=Cat girls


command.owo.syntax=owo
command.owo.description=OwO what's this


command.smug.syntax=smug
command.smug.description=Smugs


command.aiwaifu.syntax=aiWaifu
command.aiwaifu.description=Shows a random image generated by ai based on anime images
command.aiwaifu.title=Generated by TWDNE using StyleGAN 2


command.thinking.syntax=thinking
command.thinking.description=Think


command.discordmeme.syntax=discordMeme
command.discordmeme.description=Shows a meme about discord
command.discordmeme.title=Discord meme


command.donate.syntax=donate <linkServer>
command.donate.description=Shows the patreon link
command.donate.response=**[Subscriptions](%url%)** (*Automatically activate your premium by joining our support server*)\
  \n**[One-Time](%urlPaypal%)** [**$1.5+ -> 1 month donator perks**] (*put username and # part in donation msg*)


command.donate.linkserver.syntax=donate linkServer
command.donate.linkserver.description=Links the server where this command was sent in to your account | 14 day delay
command.donate.linkserver.selected=Successfully selected **%server%** as your premium server
command.donate.linkserver.oncooldown=Picking a new premium server is still on cooldown for: **%timeLeft%**


command.say.syntax=say [fontSize: number*] <text: string*>
command.say.description=Makes the bot say something in a text bubble.
command.say.arguments=%help.arg.number%, fontSize: size of the font (default is 60)\
  \n%help.arg.string%, text: text for the bot to put inside the text bubble 


command.blurple.syntax=blurple <user* | imageUrl* | attachment*> [colorOffset*] [gifQuality*] [state*] [fps*]
command.blurple.description=Adds a discordlike filter to your image/gif
command.blurple.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.blurple.examples=- `%prefix%blurple` Shows a blurple image from your avatar\
  \n- `%prefix%blurple @someone` Shows a blurple image from the user's avatar\
  \n- `%prefix%blurple ~attachment~` Shows a blurple image from the attachment\
  \n- `%prefix%blurple http://random.cat/view/1286` Shows a blurple image from the url\
  \n- `%prefix%blurple http://random.cat/view/1286 128` Shows a blurple image from the url\
  \n- `%prefix%blurpleGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows a blurple gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.appendreversegif.syntax=appendReverseGif <user* | imageUrl* | attachment*> [gifQuality*] [state*] [fps*]
command.appendreversegif.description=Adds a reverse gif at the end of your image/gif of your image/gif
command.appendreversegif.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.appendreversegif.examples=- `%prefix%appendReverseGif` Shows a reverse appended gif from the user's avatar\
  \n- `%prefix%appendReverseGif @someone` Shows a reverse appended gif from the user's avatar\
  \n- `%prefix%appendReverseGif ~attachment~` Shows a reverse appended gif from the attachment avatar\
  \n- `%prefix%appendReverseGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a reverse appended gif from the url with best quality, repeating and 20 fps


command.flipimg.syntax=flipImg <user* | imageUrl* | attachment*> [gifQuality*] [state*] [fps*]
command.flipimg.description=Flips your image/gif
command.flipimg.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.flipimg.examples=- `%prefix%flipImg` Flips your avatar\
  \n- `%prefix%flipImg @someone` Shows a flipped image from the user's avatar\
  \n- `%prefix%flipImg ~attachment~` Shows a flipped image from the attachment\
  \n- `%prefix%flipImg http://random.cat/view/1286` Shows a flipped image from the url\
  \n- `%prefix%flipGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a flipped gif from the url, best quality, repeating and 20 fps


command.mirror.syntax=mirror <user* | imageUrl* | attachment*> [gifQuality*] [state*] [fps*]
command.mirror.description=Mirrors your image/gif
command.mirror.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.mirror.examples=- `%prefix%mirror` Mirrors your avatar\
  \n- `%prefix%mirror @someone` Shows a mirrored image from the user's avatar\
  \n- `%prefix%mirror ~attachment~` Shows a mirrored image from the attachment\
  \n- `%prefix%mirror http://random.cat/view/1286` Shows a mirrored image from the url\
  \n- `%prefix%mirrorGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a mirrored gif from the url, best quality, repeating and 20 fps


command.greyscale.syntax=greyscale <user* | imageUrl* | attachment*> [gifQuality*] [state*] [fps*]
command.greyscale.description=Greyscales your image/gif
command.greyscale.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.greyscale.examples=- `%prefix%greyscales` Greyscales your avatar\
  \n- `%prefix%greyscales @someone` Shows a greyscaled image from the user's avatar\
  \n- `%prefix%greyscales ~attachment~` Shows a greyscaled image from the attachment\
  \n- `%prefix%greyscales http://random.cat/view/1286` Shows a greyscaled image from the url\
  \n- `%prefix%greyscalesGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 1 true 20` Shows a greyscaled gif from the url, best quality, repeating and 20 fps


command.invert.syntax=invert <user* | imageUrl* | ~attachment~> [gifQuality*] [state*] [fps*]
command.invert.description=Inverts your image/gif
command.invert.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.invert.examples=- `%prefix%invert` Shows an inverted image from your avatar\
  \n- `%prefix%invert @someone` Shows an inverted image from the user's avatar\
  \n- `%prefix%invert ~attachment~` Shows an inverted image from the attachment\
  \n- `%prefix%invert http://random.cat/view/1286` Shows an inverted image from the url\
  \n- `%prefix%invert http://random.cat/view/1286 128` Shows an inverted image from the url\
  \n- `%prefix%invertGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows an inverted gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.spookify.syntax=spookify <user* | imageUrl* | ~attachment~> [colorOffset*] [gifQuality*] [state*] [fps*]
command.spookify.description=Adds a spooky filter to your image/gif
command.spookify.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.coloroffset%\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.spookify.examples=- `%prefix%spookify` Shows a spooky image from your avatar\
  \n- `%prefix%spookify @someone` Shows a spooky image from the user's avatar\
  \n- `%prefix%spookify ~attachment~` Shows a spooky image from the attachment\
  \n- `%prefix%spookify http://random.cat/view/1286` Shows a spooky image from the url\
  \n- `%prefix%spookify http://random.cat/view/1286 128` Shows a spooky image from the url\
  \n- `%prefix%spookifyGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 128 1 true 20` Shows a spooky gif from the url with colorOffset of 128, best quality, repeating and 20 fps


command.pixelate.syntax=pixelate <user* | imageUrl* | ~attachment~> [number*] [gifQuality*] [state*] [fps*]
command.pixelate.description=Adds a pixelated filter to your image/gif
command.pixelate.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.number%, signifies the amount of pixels to merge, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.pixelate.examples=- `%prefix%pixelate` Shows a pixelated image from your avatar\
  \n- `%prefix%pixelate @someone` Shows a pixelated image from the user's avatar\
  \n- `%prefix%pixelate ~attachment~` Shows a pixelated image from the attachment\
  \n- `%prefix%pixelate http://random.cat/view/1286` Shows a pixelated image from the url\
  \n- `%prefix%pixelate http://random.cat/view/1286 128` Shows a pixelated image from the url\
  \n- `%prefix%pixelateGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a pixelated gif from the url with 5 pixel merging, best quality (1), repeating and 20 fps


command.jail.syntax=jail <user*>
command.jail.description=You can throw someone in jail
command.jail.arguments=%help.arg.user%
command.jail.examples=- `%prefix%jail @ToxicMushroom` Shows an image of toxicmushroom behind bars 


command.blur.syntax=blur <user* | imageUrl* | ~attachment~> [number*] [gifQuality*] [state*] [fps*]
command.blur.description=Adds a blurred filter to your image/gif
command.blur.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.number%, signifies the amount of pixels to blur, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.blur.examples=- `%prefix%blur` Shows a blurred image from your avatar\
  \n- `%prefix%blur @someone` Shows a blurred image from the user's avatar\
  \n- `%prefix%blur ~attachment~` Shows a blurred image from the attachment\
  \n- `%prefix%blur http://random.cat/view/1286` Shows a blurred image from the url\
  \n- `%prefix%blur http://random.cat/view/1286 128` Shows a blurred image from the url\
  \n- `%prefix%blurGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a blurred gif from the url with 5 radius, best quality (1), repeating and 20 fps



command.sharpen.syntax=sharpen <user* | imageUrl* | ~attachment~> [number*] [gifQuality*] [state*] [fps*]
command.sharpen.description=Adds a sharpening filter to your image/gif
command.sharpen.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.number%, signifies the strength of the filter, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.sharpen.examples=- `%prefix%sharpen` Shows a sharpening image from your avatar\
  \n- `%prefix%sharpen @someone` Shows a sharpening image from the user's avatar\
  \n- `%prefix%sharpen ~attachment~` Shows a sharpening image from the attachment\
  \n- `%prefix%sharpen http://random.cat/view/1286` Shows a sharpening image from the url\
  \n- `%prefix%sharpen http://random.cat/view/1286 128` Shows a sharpening image from the url\
  \n- `%prefix%sharpenGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a sharpening gif from the url with 5 strength, best quality (1), repeating and 20 fps


command.smoothpixelate.syntax=smoothPixelate <user* | imageUrl* | ~attachment~> [number*] [gifQuality*] [state*] [fps*]
command.smoothpixelate.description=Adds a smoother pixelated filter to your image/gif
command.smoothpixelate.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.number%, signifies the amount of pixels to merge, between 1 and image height or width (depending which is larger)\
  \n%help.arg.gifquality%\
  \n%help.arg.state%, gif loops if positive, gif doesn't loop if negative\
  \n%help.arg.fps%
command.smoothpixelate.examples=- `%prefix%pixelate` Shows a pixelated image from your avatar\
  \n- `%prefix%pixelate @someone` Shows a pixelated image from the user's avatar\
  \n- `%prefix%pixelate ~attachment~` Shows a pixelated image from the attachment\
  \n- `%prefix%pixelate http://random.cat/view/1286` Shows a pixelated image from the url\
  \n- `%prefix%pixelate http://random.cat/view/1286 128` Shows a pixelated image from the url\
  \n- `%prefix%pixelateGif https://purr.objects-us-east-1.dream.io/i/013_-_dWRtzKh.gif 5 1 true 20` Shows a pixelated gif from the url with 5 pixel merging, best quality (1), repeating and 20 fps


command.globalrecolor.syntax=globalRecolor <user* | imageUrl* | ~attachment~> <color*>
command.globalrecolor.description=Replaces all colors with the chosen one
command.globalrecolor.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.color%
command.globalrecolor.example=- `%prefix%globalRecolor @someone #00FF00` Makes someone's avatar green\
  \n- `%prefix%globalRecolor ~attachment~ #00FF00` Makes the attachment green\
  \n- `%prefix%globalRecolor http://random.cat/view/1286 #00FF00` Makes the url green


command.replacecolor.syntax=replaceColor <user* | imageUrl* | ~attachment~> <toReplace: color*> <replacement: color*> [alphaSelector: number*] [alphaReplacement: number*]
command.replacecolor.description=Replaces the selected color (and alpha if specified) with the specified color (and alpha if specified)
command.replacecolor.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.color%\
  \n%help.arg.number%, alphaSelector (1 & 2): -1 matches all or any, other values between 0-255 specify the alpha
command.replacecolor.examples=- `%prefix%replaceColor @someone #FFFFFF #00FF00` Replaces all the white in the someone's avatar with green\
  \n- `%prefix%replaceColor ~attachment~ #FFFFFF #00FF00 -1 0` Replaces all the white in the attachment transparent green\
  \n- `%prefix%replaceColor http://random.cat/view/1286 #FFFFFF #00FF00 255 140` Replaces all the full white in the linked image with 55% transparent green (GIF: is either 0% or 100%)


command.gifinfo.syntax=gifInfo <user* | imageUrl* | ~attachment~> [gifFrame: number*]
command.gifinfo.description=Shows basic info about the provided gif
command.gifinfo.eb.gif.title=Gif Info
command.gifinfo.eb.gif.value=**Frames** %frames%\
  \n**Repeat amount** %loops%\
  \n**Width** %width%\
  \n**Height** %height%
#  \n**Global color table** %gctUrl%
command.gifinfo.eb.frame.title=Frame Info
command.gifinfo.eb.frame.value=**Delay until next frame** %delay%ms\
  \n**Background color** %bgColor%\
  \n**Transparent color** %transColor%
#  \n**Local color table** %lctUrl%
command.gifinfo.arguments=%help.arg.user%\
  \n%help.arg.imageurl%\
  \n%help.arg.attachment%\
  \n%help.arg.number%, gifFrame: must be between 0 based index of a gif frame
command.gifinfo.examples=- `%prefix%gifInfo` Shows info of the gif from your avatar\
  \n- `%prefix%gifInfo @someone` Shows info of the gif from the user's avatar\
  \n- `%prefix%gifInfo ~attachment~` Shows info of the gif  from the attachment\
  \n- `%prefix%gifInfo http://random.cat/view/1286` Shows info of the gif from the url\
  \n- `%prefix%gifInfo http://random.cat/view/1286 2` Shows info about the third frame of the gif from the url


command.pngstogif.syntax=pngsToGif <~attachment~ | url: string* | urls: string*> [loop: number*] [frameDelayMillis: number*]
command.pngstogif.description=Will put all the frames you provide together into a gif
command.pngstogif.arguments=%help.arg.attachment%, the attachment needs to be a .zip and contain png\
  \n%help.arg.url%, the url must point to a png or zip containing pngs\
  \n%help.arg.string%, urls: each url must point to a png or zip containing pngs and then be seperated by a space or newline (ex. "https://example.com/1.png https://example.com/2.png")\
  \n%help.arg.number%, loop: Amount of times the gif should loop (0 -> infnite), frameDelayMillis: how long each frame should be delayed (default is 500ms)
command.pngstogif.examples=- `%prefix%pngsToGif https://example.com/images.zip`\
  \n- `%prefix%pngsToGif https://example.com/image_0.png`\
  \n- `%prefix%pngsToGif "https://example.com/images1.zip https://example.com/images2.zip"`\
  \n- `%prefix%pngsToGif "https://example.com/images.zip https://example.com/image_last.png"`\
  \n- `%prefix%pngsToGif "https://example.com/image_1.png https://example.com/image_2.png"`\
  \n- `%prefix%pngsToGif ~attachment~`\
  \n- `%prefix%pngsToGif https://example.com/images.zip 1 20` loops once and 20ms delay\
  \n- `%prefix%pngsToGif https://example.com/images.zip 0 20` loops infinite and 20ms delay


command.pngsfromgif.syntax=pngsFromGif <~attachment~ | url: string*>
command.pngsfromgif.description=Puts all frames from a gif into png format and then zips the pngs
command.pngsfromgif.arguments=%help.arg.attachment%, the attachment needs to be a gif\
  \n%help.arg.url%, the url needs to be a gif
command.pngsfromgif.examples=- `%prefix%pngsFromGif https://example.com/animation.gif`\
  \n- `%prefix%pngsFromGif ~attachment~`


command.urban.syntax=urban <word*>
command.urban.description=Searches the urbandictionary.com for a result
command.urban.meaning=**Meaning**
command.urban.example=**Example**
command.urban.notfound=**%arg%** was not found, check for spelling or there is no definition
command.urban.urbanoffline=Connection to urbandictionary.com could not be established
command.urban.arguments=%help.arg.word%
command.urban.examples=- `%prefix%urban smh) Shows the meaning of smh (Shaking my head`


command.invite.syntax=invite
command.invite.description=Shows invite links for the bot
command.invite.title=Invite %botName%
command.invite.desc=[normal invite](%urlWithPerm%)\
  \n[fallback invite](%urlWithoutPerm%) 


command.managehistory.syntax=manageHistory <remove | clear>
command.managehistory.description=Manages the history of users


command.managehistory.remove.syntax=manageHistory remove <user*> <caseId: string*>
command.managehistory.remove.description=Removes specific punishment entries of users
command.managehistory.remove.foundnothing=No entry found with `%caseId%` for **%user%**
command.managehistory.remove.removed=Removed the **%type%** entry for `%caseId%` from **%user%**
command.managehistory.remove.examples=- `%prefix%manageHistory remove @ToxicMushroom AAT3/gZPseI` Removes the punishment with id `AAT3/gZPseI` from ToxicMushroom
command.managehistory.remove.arguments=%help.arg.user%\
  \n%help.arg.string%, caseId: You can view caseIds with `%prefix%history` or in logs



command.managehistory.clear.syntax=manageHistory clear <punishmentType* | all> <user*>
command.managehistory.clear.description=Clears all punishments of a specific type form a user
command.managehistory.clear.cleared=Cleared %amount% punishments of type **%type%** from **%user%**
command.managehistory.clear.clearednone=There was nothing to clear of type **%type%** for **%user%**
command.managehistory.clear.examples=- `%prefix%manageHistory clear @ToxicMushroom bans` Clears the bans of ToxicMushroom\
  \n- `%prefix%manageHistory clear @ToxicMushroom bans` Clears all punishments of ToxicMushroom
command.managehistory.clear.arguments=%help.arg.user%\
  \n%help.arg.punishmenttype%


command.googlereverseimagesearch.syntax=googleReverseImageSearch <url* | ~attachment~>
command.googlereverseimagesearch.description=Sends you a link to google's reverse image search page with your provided imaged
command.googlereverseimagesearch.arguments=%help.arg.url%\
  \n%help.arg.attachment%


command.reverseimagesearch.syntax=reverseImageSearch <url* | ~attachment~>
command.reverseimagesearch.description=Allows you to find the source of most 2d drawings and fanarts on sites like pixiv, booru and more. uses saucenao
command.reverseimagesearch.arguments=%help.arg.url%\
  \n%help.arg.attachment%


command.chicken.syntax=chicken
command.chicken.description=Shows a chicken
command.chicken.title=Enjoy your 🐓 ~tok tok~


command.frog.syntax=frog
command.frog.description=Shows a frog
command.frog.title=Enjoy your 🐸 ~ribbit~


command.fish.syntax=fish
command.fish.description=Shows a fish
command.fish.title=Enjoy your 🐟 ~blub~


command.cat.syntax=cat
command.cat.description=Shows a cat
command.cat.title=Enjoy your 🐱 ~meow~


command.duck.syntax=duck
command.duck.description=Shows a duck
command.duck.title=Enjoy your 🦆 ~quack~


command.dog.syntax=dog
command.dog.description=Shows a dog
command.dog.title=Enjoy your 🐶 ~woof~


command.alpaca.syntax=alpaca
command.alpaca.description=Shows an alpaca
command.alpaca.title=Enjoy your alpaca!


command.bird.syntax=bird
command.bird.description=Shows a bird
command.bird.title=Enjoy your 🐦 ~tweet~!


command.koala.syntax=koala
command.koala.description=Shows a koala
command.koala.title=Enjoy your 🐨!


command.fox.syntax=fox
command.fox.description=Shows a fox
command.fox.title=Enjoy your 🦊!


command.panda.syntax=panda
command.panda.description=Shows an panda
command.panda.title=Enjoy your 🐼!


command.penguin.syntax=penguin
command.penguin.description=Shows a penguin
command.penguin.title=Enjoy your 🐧!


command.possum.syntax=possum
command.possum.description=Shows a possum
command.possum.title=Enjoy your possum!


command.snek.syntax=snek
command.snek.description=Shows a snek
command.snek.title=Enjoy your 🐍!


command.nyancat.syntax=nyancat
command.nyancat.description=Shows a nyancat
command.nyancat.title=Enjoy your <:normie_nyan:490976816018751503> ~meow!~


command.setbannedorkickedtriggersleave.syntax=setBannedOrKickedTriggersLeave [state: boolean*]
command.setbannedorkickedtriggersleave.description=Sets if the leave message should be sent when banned or kicked
command.setbannedorkickedtriggersleave.show.true=BannedOrKickedTriggersLeave is currently enabled
command.setbannedorkickedtriggersleave.show.false=BannedOrKickedTriggersLeave is currently disabled
command.setbannedorkickedtriggersleave.set.true=BannedOrKickedTriggersLeave has been enabled
command.setbannedorkickedtriggersleave.set.false=BannedOrKickedTriggersLeave has been disabled
command.setbannedorkickedtriggersleave.arguments=%help.arg.boolean%, state: positive states will enable, negative states will disable
command.setbannedorkickedtriggersleave.examples=- `%prefix%setBannedOrKickedTriggersLeave` Shows the current state\
  \n- `%prefix%setBannedOrKickedTriggersLeave true` The leave messaage will now be sent when banned or kicked


command.setbotlogstate.syntax=setBotLogState [state: boolean*]
command.setbotlogstate.description=Sets if bot actions should be logged
command.setbotlogstate.show.true=The BotLogState is currently enabled
command.setbotlogstate.show.false=The BotLogState currently disabled
command.setbotlogstate.set.true=The BotLogState has been enabled
command.setbotlogstate.set.false=The BotLogState has been disabled
command.setbotlogstate.arguments=%help.arg.boolean%, state: positive states will enable, negative states will disable
command.setbotlogstate.examples=- `%prefix%setBotLogState` Shows the current state\
  \n- `%prefix%setBotLogState true` Bots will be present in log messages


command.verify.syntax=verify <member* | *>
command.verify.description=Command to manually verify members
command.verify.all=Verified **%count%** unverified members
command.verify.all.failures=Verified **%count%** unverified members\
  \nFailures: %failures%, (see logs)
command.verify.success=Verified %user%!
command.verify.failure=Failed to verify %user%, (see logs)
command.verify.arguments=%help.arg.member%
command.verify.examples=- `%prefix%verify @someone` Verifies @someone\
  \n- `%prefix%verify *` Verifies all unverified members


logging.birthday=It's the birthday of %user% today! 🎊


logging.music.newtrack.title=New track playing
logging.music.newtrack.userfield.title=User
logging.music.newtrack.userIdfield.title=User ID
logging.music.newtrack.channelfield.title=VoiceChannel
logging.music.newtrack.channelIdfield.title=VoiceChannel ID

logging.music.streamurl.loadfailed.title=Loading stream url has failed
logging.music.streamurl.loadfailed.description=\nURL: %url%\
  \nCause: %cause%


logging.music.resumed.title=Track resume
logging.music.resumed.userfield.title=User
logging.music.resumed.userIdfield.title=User ID
logging.music.resumed.channelfield.title=VoiceChannel
logging.music.resumed.channelIdfield.title=VoiceChannel ID


logging.music.paused.title=Track paused
logging.music.paused.userfield.title=User
logging.music.paused.userIdfield.title=User ID
logging.music.paused.channelfield.title=VoiceChannel
logging.music.paused.channelIdfield.title=VoiceChannel ID


logging.music.exception.title=Track error
logging.music.exception.channelfield.title=VoiceChannel
logging.music.exception.channelIdfield.title=VoiceChannel ID
logging.music.exception.causefield.title=Cause


logging.removed.channel.title=Removed %type%Channel
logging.removed.channel.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the channel might have been deleted
logging.removed.channel.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.logchannel.title=Removed %type% LogChannel
logging.removed.logchannel.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the channel might have been deleted
logging.removed.logchannel.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.role.title=Removed %type% Role
logging.removed.role.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the role might have been deleted
logging.removed.role.causepath.cannotinteract=Caused by hierarchy, I don't have permission to interact with the role or my highest role is lower then the role or is the same as the role
logging.removed.role.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.removed.selfrole.title=Removed %emoteji% -> SelfRole
logging.removed.selfrole.causepath.unknownid=Caused by an invalid id: `%causeArg%`, the role might have been deleted
logging.removed.selfrole.causepath.cannotinteract=Caused by hierarchy, I don't have permission to interact with the role or my highest role is lower then the role or is the same as the role
logging.removed.selfrole.causepath.nopermission=Caused by a missing permission, I'm missing the `%causeArg%` permission


logging.verification.hitverificationthroughputlimit.title=Hit verification throughput limit
logging.verification.hitverificationthroughputlimit.description=\nUser: %user%\
  \nUser Id: %userId%


logging.verification.failedaddingrole.title=Failed adding role
logging.verification.failedaddingrole.description=\nUser: %user%\
  \nUser Id: %userId%\
  \nRole: %role%\
  \nRole Id: %roleId%


logging.verification.failed.title=Verification failed
logging.verification.failed.description=\nUser: %user%\
  \nUser Id: %userId%


logging.verification.verified.title=Verified by: %author%
logging.verification.verified.description=\nUser: %user%\
  \nUser Id: %userId%


logging.punishmentpoints.title=Violation of a chat filter
logging.punishmentpoints.description=\nChannel: %channel%\
  \nChannel Id: %channelId%\
  \n\
  \nMessage: %message%\
  \nMessage Id: %messageId%\
  \n\
  \nReason: %extra%\
  \nPunishment points received: %points%\
  \nMoment: %moment%
logging.punishmentpoints.description.extra.dm=Server: %server%\
  \nServer Id: %serverId%\
  \n
logging.punishmentpoints.description.extra.lc=Target: %target%\
  \nTarget Id: %targetId%\
  \n
logging.punishmentpoints.description.extra.dmfailed=\nExtra: failed to send the notification in dms
logging.punishmentpoints.description.extra.openingpcfailed=\nExtra: failed to open a private message channel


logging.punishmentpoints.cause.mustnot.contain=Message can not contain: %word%
logging.punishmentpoints.cause.must.match=Message must match: %word%
logging.punishmentpoints.cause.contain.all=Message must contain all: %word%
logging.punishmentpoints.cause.contain.any=Message must contain any: %word%


message.punishment.kick.description=\nKick Author: %kickAuthor%\
  \nKick Author Id: %kickAuthorId%\
  \nKicked: %kicked%\
  \nKicked Id: %kickedId%\
  \nReason: %reason%\
  \nTime of kick: %moment%
message.punishment.kick.author=Kicked by %user% %spaces%
message.punishmenthistory.kick=```INI\
  \n[Kick Author] %kickAuthor%\
  \n[Kick Author Id] %kickAuthorId%\
  \n[Reason] %reason%\
  \n[Time of kick] %moment%```


message.punishment.warn.description=\nWarn Author: %warnAuthor%\
  \nWarn Author Id: %warnAuthorId%\
  \nWarned: %warned%\
  \nWarned Id: %warnedId%\
  \nReason: %reason%\
  \nTime of warn: %moment%\
  \nCase Id: %warnId%
message.punishment.warn.author=Warned by %user% %spaces%
message.punishmenthistory.warn=```INI\
  \n[Warn Author] %warnAuthor%\
  \n[Warn Author Id] %warnAuthorId%\
  \n[Reason] %reason%\
  \n[Time of warn] %moment%\
  \n[Case Id]: %warnId%```


message.punishment.mute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nMuted: %muted%\
  \nMutedId: %mutedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%\
  \nCase Id: %muteId%
message.punishment.mute.author=Muted by %user% %spaces%
message.punishmenthistory.mute=```INI\
  \n[Mute Author] %muteAuthor%\
  \n[Mute Author Id] %muteAuthorId%\
  \n[Unmute Author] %unmuteAuthor%\
  \n[Unmute Author Id] %unmuteAuthorId%\
  \n[Reason] %muteReason%\
  \n[Unmute Reason] %unmuteReason%\
  \n[Duration] %duration%\
  \n[Start of mute] %startTime%\
  \n[End of mute] %endTime%\
  \n[Active] %active%\
  \n[Case Id]: %muteId%```


message.punishment.unmute.description=\nMute Author: %muteAuthor%\
  \nMute Author Id: %muteAuthorId%\
  \nUnmute Author Id: %unMuteAuthorId%\
  \nUnmuted: %unMuted%\
  \nUnmutedId: %unMutedId%\
  \nMute Reason: %muteReason%\
  \nUnmute Reason: %unmuteReason%\
  \nDuration: %duration%\
  \nStart of mute: %startTime%\
  \nEnd of mute: %endTime%\
  \nCase Id: %muteId%
message.punishment.unmute.author=Unmuted by %user% %spaces%


message.punishment.ban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nBanned: %banned%\
  \nBannedId: %bannedId%\
  \nReason: %reason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%\
  \nCase Id: %banId%
message.punishment.ban.author=Banned by %user% %spaces%
message.punishmenthistory.ban=```INI\
  \n[Ban Author] %banAuthor%\
  \n[Ban Author Id] %banAuthorId%\
  \n[Unban Author] %unbanAuthor%\
  \n[Unban Author Id] %unbanAuthorId%\
  \n[Reason] %banReason%\
  \n[Unban Reason] %unbanReason%\
  \n[Duration] %duration%\
  \n[Start of ban] %startTime%\
  \n[End of ban] %endTime%\
  \n[Active] %active%\
  \n[Case Id]: %banId%```


message.punishment.softban.description=\nSoftBan Author: %softBanAuthor%\
  \nSoftBan Author Id: %softBanAuthorId%\
  \nSoftBanned: %softBanned%\
  \nSoftBanned Id: %softBannedId%\
  \nReason: %reason%\
  \nMoment: %moment%\
  \nCase Id: %softBanId%
message.punishment.softban.author=SoftBanned by %user% %spaces%
message.punishmenthistory.softban=```INI\
  \n[SoftBan Author] %softBanAuthor%\
  \n[SoftBan Author Id] %softBanAuthorId%\
  \n[Reason] %reason%\
  \n[Moment] %moment%\
  \n[Case Id]: %softBanId%```


message.punishment.unban.description=\nBan Author: %banAuthor%\
  \nBan Author Id: %banAuthorId%\
  \nUnban Author Id: %unBanAuthorId%\
  \nUnbanned: %unBanned%\
  \nUnbannedId: %unBannedId%\
  \nBan Reason: %banReason%\
  \nUnban Reason: %unbanReason%\
  \nDuration: %duration%\
  \nStart of ban: %startTime%\
  \nEnd of ban: %endTime%\
  \nCase Id: %banId%
message.punishment.unban.author=Unbanned by %user% %spaces%


message.punishment.extra.dm=\nExtra: Target had dm's disabled
message.punishment.extra.bot=\nExtra: Target is a bot
message.punishment.extra.failed=\nFAILURE: %cause%
message.punishment.description.nlc=\nServer: %serverName%\
  \nServer Id: %serverId%


command.softban.syntax=softBan <user*> [delDays*] [reason*]
command.softban.description=Bans and unbans the user to clear the past x days of messages
command.softban.cannotban=I cannot ban **%user%** because this user has an equal or higher role position relative to me
command.softban.success=SoftBanned **%user%** for: `%reason%`
command.softban.failure=SoftBanning **%user%** failed, cause: ```%cause%```
command.softban.arguments=%help.arg.user%\
  \n%help.arg.deldays%\
  \n%help.arg.reason%
command.softban.examples=- `%prefix%softban @someone` Bans @someone with 7 days of message clear with reason "/", then unbans @someone\
  \n- `%prefix%softban @someone 2` Bans @someone with 2 days of message clear with reason "/", then unbans @someone\
  \n- `%prefix%softban @someone 1 advertising` Bans @someone with 1 day of message clear with reason "advertising", then unbans @someone


command.snipe.syntax=snipe [amount: number* | all] [textChannel*]
command.snipe.description=Shows you recent deleted messages
command.snipe.nosnipe=There was nothing to snipe
command.snipe.arguments=%help.arg.number%, amount is min 1 and max 10\
  \n%help.arg.textchannel%
command.snipe.examples=- `%prefix%snipe all` Shows all recent deleted messages in the current channel\
  \n- `%prefix%snipe` Shows the latest deleted message in the current channel\
  \n- `%prefix%snipe 1 #chat` Shows the latest deleted message in #chat


command.setverificationpassword.syntax=setVerificationPassword [verificationPassword* | null]
command.setverificationpassword.description=Sets or shows the verification password
command.setverificationpassword.show.unset=The verification password is unset
command.setverificationpassword.show.set=The verification password is set to:\n%password%
command.setverificationpassword.unset=The verification password has been unset
command.setverificationpassword.set=The verification password has been set to:\n%arg%
command.setverificationpassword.arguments=%help.arg.verificationpassword%
command.setverificationpassword.examples=- `%prefix%setVerificationPassword` Shows the current verification password\
  \n- `%prefix%setVerificationPassword passwordsuperhidden` Sets the verification password to "passwordsuperhidden"\
  \n- `%prefix%setVerificationPassword null` Unsets the verification password


command.setmaxuserverificationflowrate.syntax=setMaxUserVerificationFlowRate [users/m* | null]
command.setmaxuserverificationflowrate.description=Sets or shows the verification code
command.setmaxuserverificationflowrate.show.unset=The MaxUserVerificationFlowRate is unset
command.setmaxuserverificationflowrate.show.set=The MaxUserVerificationFlowRate is set to **%rate%** users/hour
command.setmaxuserverificationflowrate.unset=The MaxUserVerificationFlowRate has been unset
command.setmaxuserverificationflowrate.set=The MaxUserVerificationFlowRate has been set to **%arg%** users/hour
command.setmaxuserverificationflowrate.arguments=%help.arg.number%, 0 - some very big number
command.setmaxuserverificationflowrate.examples=- `%prefix%setMaxUserVerificationFlowRate` Shows the current MaxUserVerificationFlowRate\
  \n- `%prefix%setMaxUserVerificationFlowRate 1` Allows 1 user to verify themselves per minute\
  \n- `%prefix%setMaxUserVerificationFlowRate null` Allows unlimited users to verify themselves per minute


command.setverificationtype.syntax=setVerificationType [verificationType* | null]
command.setverificationtype.description=Sets or shows the verification type
command.setverificationtype.show.unset=The verification type is unset
command.setverificationtype.show.set=The verification type is set to:\n%type%
command.setverificationtype.unset=The verification type has been unset
command.setverificationtype.set=The verification type has been set to:\n%arg%
command.setverificationtype.arguments=%help.arg.verificationtype%
command.setverificationtype.examples=- `%prefix%setVerificationType` Shows the current verification type\
  \n- `%prefix%setVerificationType CODE` Sets the verification type to code\
  \n- `%prefix%setVerificationType null` Unsets the verification type


command.setverificationemoteji.syntax=setVerificationEmoteji [emote* | emoji* | null]
command.setverificationemoteji.description=Sets or shows the verification code
command.setverificationemoteji.show.unset=The verification emoteji is unset
command.setverificationemoteji.show.set=The verification emoteji is set to:\n%emoteji%
command.setverificationemoteji.unset=The verification emoteji has been unset
command.setverificationemoteji.set.emote=The verification emoteji has been set to emote(name: **%emoteName%** | id: **%emoteId%**)
command.setverificationemoteji.set.emoji=The verification emoteji has been set to %arg%
command.setverificationemoteji.arguments=%help.arg.emote%\
  \n%help.arg.emoji%
command.setverificationemoteji.examples=- `%prefix%setVerificationEmoteji` Shows the current verification emoteji\
  \n- `%prefix%setVerificationEmoteji :omegalul:` Sets the emoteji to the omegalul emote\
  \n- `%prefix%setVerificationEmoteji 🐟` Sets the emoteji to the 🐟 emoji


command.joinrole.syntax=joinRole <add | remove | removeAt | list | group>
command.joinrole.description=Main command for managing joinroles


command.joinrole.add.syntax=joinRole add <joinRoleGroup*> <role* | null> [chance: number*]
command.joinrole.add.description=Adds joinroles
command.joinrole.add.added.role=Added the joinrole **%role%** to **%group%**
command.joinrole.add.added.null=Added the joinrole `no role` to **%group%**
command.joinrole.add.added.chance.role=Added the joinrole **%role%** to **%group%** with **%chance%** chance
command.joinrole.add.added.chance.null=Added the joinrole `no role` to **%group%** with **%chance%** chance
command.joinrole.add.arguments=%help.arg.joinrolegroup%\
  \n%help.arg.role%\
  \n%help.arg.number%, chance: number must be higher than 0
command.joinrole.add.examples=- `%prefix%joinRole add class @knight 50` Adds @knight with 50 chance to the "class" group\
  \n- `%prefix%joinRole add class @peasant` Adds @peasant with 100 chance to the "class" group


command.joinrole.remove.syntax=joinRole remove <joinRoleGroup*> <role* | null>
command.joinrole.remove.description=Removes joinroles
command.joinrole.remove.removed.role=Removed the joinrole **%role%** from **%group%**
command.joinrole.remove.removed.null=Removed the joinrole `no role` from **%group%**
command.joinrole.remove.arguments=%help.arg.joinrolegroup%\
  \n%help.arg.role%\
  \n%help.arg.number%, chance: number must be higher than 0
command.joinrole.remove.examples=- `%prefix%joinRole remove class @knight` Adds @knight with 50 chance to the "class" group


command.joinrole.removeat.syntax=joinRole removeAt <joinRoleGroup*> <index: number*>
command.joinrole.removeat.description=Removes joinroles at a specified position
command.joinrole.removeat.emptygroup=The group **%group%** is empty
command.joinrole.removeat.removed.role=Removed the joinrole **%role%** from **%group%** at position **%position%**
command.joinrole.removeat.removed.null=Removed the joinrole `no role` from **%group%** at position **%position%**
command.joinrole.removeat.arguments=%help.arg.joinrolegroup%\
  \n%help.arg.number%, index: find correct index with `%prefix%joinRole list`
command.joinrole.removeat.examples=- `%prefix%joinRole removeAt 1` Removes role at position 1 from the "class" group


command.joinrole.list.syntax=joinRole list
command.joinrole.list.description=Lists all joinroles
command.joinrole.list.empty=There are no joinroles yet :c
command.joinrole.list.title=List of joinroles


command.joinrole.group.syntax=joinRole group <add | remove | removeAt | list | setGetAllRoles | setEnabled>
command.joinrole.group.description=Main command for managing joinrolegroups
command.joinrole.group.exists=The joinrolegroup **%arg%** already exists, check with `%prefix%joinRole group list`


command.joinrole.group.add.syntax=joinRole group add <groupName: string*>
command.joinrole.group.add.description=Adds joinrolegroups
command.joinrole.group.add.added=Added **%group%** as joinrolegroup
command.joinrole.group.add.arguments=%help.arg.string%, groupName: name for a joinrolegroup (max 64 characters)
command.joinrole.group.add.examples=- `%prefix%joinRole group add class` Adds a group named "class"


command.joinrole.group.remove.syntax=joinRole group remove <joinRoleGroup*>
command.joinrole.group.remove.description=Removes joinrolegroups
command.joinrole.group.remove.removed=Removed the joinrolegroup **%group%** at position **%index%**
command.joinrole.group.remove.arguments=%help.arg.joinrolegroup%
command.joinrole.group.remove.examples=- `%prefix%joinRole group remove class` Removes a group named "class"


command.joinrole.group.removeat.syntax=joinRole group removeAt <index: number*>
command.joinrole.group.removeat.description=Removes joinrolegroups at specific positions
command.joinrole.group.removeat.added=Removed **%group%** as joinrolegroup
command.joinrole.group.removeat.arguments=%help.arg.number%, index: view indexes with `%prefix%joinRole group list`
command.joinrole.group.removeat.examples=- `%prefix%joinRole group removeAt 1` Removes a group at position 1


command.joinrole.group.setenabled.syntax=joinRole group setEnabled <joinRoleGroup*> [enabled: boolean*]
command.joinrole.group.setenabled.description=Manages the enabled state of a joinrolegroup
command.joinrole.group.setenabled.show.true=The joinrolegroup **%group%** is currently enabled
command.joinrole.group.setenabled.show.false=The joinrolegroup **%group%** is currently disabled
command.joinrole.group.setenabled.set.true=The joinrolegroup **%group%** has been enabled
command.joinrole.group.setenabled.set.false=The joinrolegroup **%group%** has been disabled
command.joinrole.group.setenabled.arguments=%help.arg.joinrolegroup%\
  \n%help.arg.boolean%, enabled: positive states will enable, negative states will disable
command.joinrole.group.setenabled.examples=- `%prefix%joinRole group setEnabled class` Shows whether the joinrolegroup "class" is enabled or disabled\
  \n- `%prefix%joinRole group setEnabled class true` Enabled the joinrolegroup named "class"


command.joinrole.group.setgetallroles.syntax=joinRole group setGetAllRoles <joinRoleGroup*> [getAllRoles: boolean*]
command.joinrole.group.setgetallroles.description=Manages the getallroles state of a joinrolegroup
command.joinrole.group.setgetallroles.show.true=The getallroles state for joinrolegroup **%group%** is currently enabled
command.joinrole.group.setgetallroles.show.false=The getallroles state for joinrolegroup **%group%** is currently disabled
command.joinrole.group.setgetallroles.set.true=The getallroles state for joinrolegroup **%group%** has been enabled
command.joinrole.group.setgetallroles.set.false=The getallroles state for joinrolegroup **%group%** has been disabled
command.joinrole.group.setgetallroles.arguments=%help.arg.joinrolegroup%\
  \n%help.arg.boolean%, getAllRoles: positive states will enable, negative states will disable
command.joinrole.group.setgetallroles.examples=- `%prefix%joinRole group setGetAllRoles class` Shows whether the joinrolegroup "class" will give all roles or not\
  \n- `%prefix%joinRole group setGetAllRoles class true` Sets the joinrolegroup named "class" to give all roles


command.joinrole.group.list.syntax=joinRole group list
command.joinrole.group.list.description=Lists joinrolegroups
command.joinrole.group.list.title=List of joinrolegroups
command.joinrole.group.list.empty=There are no joinrolegroups set up


command.selfrole.syntax=selfRole <add | remove | removeAt | list | sendGroupAuto | group | setGetAllRoles | setName>
command.selfrole.description=Main command for managing selfroles


command.selfrole.setmode.syntax=selfRole setMode <selfRoleMode*>
command.selfrole.setmode.description=Manages the mode of selfroles
command.selfrole.setmode.show=The selfrole mode is currently set to **%mode%**
command.selfrole.setmode.set=The selfrole mode has been set to **%mode%**
command.selfrole.setmode.arguments=%help.arg.selfrolemode%
command.selfrole.setmode.examples=- `%prefix%filterGroup setMode auto` sets the mode to automatic\
  \n- `%prefix%filterGroup setMode manual` Sets the mode to manual


command.selfrole.setgetallroles.syntax=selfRole setGetAllRoles <selfRoleGroup*> <emote* | emoji*> [state: boolean*]
command.selfrole.setgetallroles.description=Sets the state of a selfrole emoteji if it should give all roles or one by chance
command.selfrole.setgetallroles.show.true=GetAllRoles is currently enabled for the **%emoteji%** in **%group%**
command.selfrole.setgetallroles.show.false=GetAllRoles is currently disabled for the **%emoteji%** in **%group%**
command.selfrole.setgetallroles.set.true=GetAllRoles has been enabled for the **%emoteji%** in **%group%**
command.selfrole.setgetallroles.set.false=GetAllRoles has been disabled for the **%emoteji%** in **%group%**
command.selfrole.setgetallroles.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.boolean%, state: positive states will set the selfrole to give all roles, negative states will set the selfrole to give one random role
command.selfrole.setgetallroles.examples=- `%prefix%selfRole setGetAllRoles basic 🐟` Shows the current state of setGetAllRoles for the 🐟 emoji in the basic group\
  \n- `%prefix%selfRole setGetAllRoles basic 🐟 true` Enables setGetAllRoles for the 🐟 emoji in the basic group\
  \n- `%prefix%selfRole setGetAllRoles basic 🐟 false` Disables setGetAllRoles for the 🐟 emoji in the basic group


command.selfrole.setname.syntax=selfRole setName <selfRoleGroup*> <emote* | emoji*> [name: string*]
command.selfrole.setname.description=Sets the name of a selfrole entry
command.selfrole.setname.show=Selfrole entry name is currently set to **%name%** for the **%emoteji%** in **%group%**
command.selfrole.setname.set=Selfrole entry name has been set to **%name%** for the **%emoteji%** in **%group%**
command.selfrole.setname.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.string%, name: Name that can be shown before the selfrole entries
command.selfrole.setname.examples=- `%prefix%selfRole setName basic 🐟` Shows the current name for the 🐟 emoji in the basic group\
  \n- `%prefix%selfRole setName basic 🐟 "Fish° blub"` Sets the name for the 🐟 emoji \
  in the basic group to Fish° blub\
  \n- `%prefix%selfRole setName basic 🐟 Fish` Sets the name for the 🐟 emoji in the basic group to Fish\


command.selfrole.sendgroupauto.syntax=selfRole sendGroupAuto <selfRoleGroup*> [textChannel*]
command.selfrole.sendgroupauto.description=Sends the selfrole group message and sets the group up
command.selfrole.sendgroupauto.noselfroles.forgroup=There are no selfroles in the **%group%** group
command.selfrole.sendgroupauto.titleformat.part=**%group%** part #%part%
command.selfrole.sendgroupauto.titleformat=**%group%**
command.selfrole.sendgroupauto.bodyformat=%name%:\n%emoteji% -> %role%\n\n
command.selfrole.sendgroupauto.sent=I have sent and configured the selfrole group **%group%** in **%channel%**
command.selfrole.sendgroupauto.arguments=%help.arg.textchannel%\
  \n%help.arg.selfrolegroup%
command.selfrole.sendgroupauto.examples=- `%prefix%selfRole sendGroupAuto basic #selfroles` Sends the basic group in the #selfroles channel\
  \n- `%prefix%selfRole sendGroupAuto basic` Sends the basic group in the channel this command was sent in


command.selfrole.add.syntax=selfRole add <selfRoleGroup*> <emote* | emoji*> <role*> [chance: number*]
command.selfrole.add.success=Added the selfrole **%emoteji%** -> **%role%** to **%group%**
command.selfrole.add.success.chance=Added the selfrole **%emoteji%** -> **%role%** to **%group%** with **%chance%** chance
command.selfrole.add.description=Adds a selfrole
command.selfrole.add.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.role%\
  \n%help.arg.number%, chance: number must be higher than 0
command.selfrole.add.examples=- `%prefix%selfRole add languages :omegalul: @epicrole` Adds a selfrole entry for @epicrole connected to :omegalul: in the languages group\
  \n- `%prefix%selfRole add languages 🐟 @fish 100` Adds a selfrole entry for @fishlang connected to 🐟 in the languages group with chance 100\
  \n- `%prefix%selfRole add languages 🐟 @fishlang 20` Adds a selfrole entry for @fishlang connected to 🐟 in the languages group with chance 20


command.selfrole.remove.syntax=selfRole remove <selfRoleGroup*> <emote* | emoji*> [role*]
command.selfrole.remove.description=Removes a selfrole
command.selfrole.remove.emotejivoid=The emoteji **%emoteji%** in group **%group%** is not linked to a role
command.selfrole.remove.success=Removed the selfrole **%emoteName%** -> **%role%** from **%group%**
command.selfrole.remove.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.emote%\
  \n%help.arg.emoji%\
  \n%help.arg.role%
command.selfrole.remove.examples=- `%prefix%selfRole remove languages :omegalul:` Removes the selfrole entries for :omegalul: in the languages group\
  \n- `%prefix%selfRole remove languages 🐟 @fishlang` Removes the selfrole entry for 🐟 -> @fishlang in the languages group


command.selfrole.removeat.syntax=selfRole removeAt <selfRoleGroup*> <index: number*>
command.selfrole.removeat.description=Removes a selfrole at the specified index
command.selfrole.removeat.success=Removed the selfrole at position **%index%**: **%emoteji%** -> **%role%** from **%group%*$
command.selfrole.removeat.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.number%, from 1 to the size of the selfrole list, use `%prefix%selfRole list` to see indexes
command.selfrole.removeat.examples=- `%prefix%selfRole removeAt languages 1` Removes the selfrole entry at index 1 in group languages


command.selfrole.group.syntax=selfRole group <add | remove | list | messageIds | setChannel | setSelfRoleAble | setEnabled | setPattern | changeName>
command.selfrole.group.description=Main command for managing selfrole groups
command.selfrole.group.exists=There already exists a selfrole with **%arg%** as name, use `%prefix%selfRole group list` to see the used ones


command.selfrole.group.add.syntax=selfRole group add <name: string*>
command.selfrole.group.add.description=Adds a selfrole group
command.selfrole.group.add.added=Added **%name%** as selfrole group
command.selfrole.group.add.arguments=%help.arg.string%, name: name for the selfrole group (0 to 64 characters)
command.selfrole.group.add.examples=- `%prefix%selfRole group add languages` Adds the selfrole group named languages


command.selfrole.group.remove.syntax=selfRole group remove <selfRoleGroup*>
command.selfrole.group.remove.description=Removes a selfrole group
command.selfrole.group.remove.removed=Removed **%name%** from selfrole groups
command.selfrole.group.remove.arguments=%help.arg.selfrolegroup%
command.selfrole.group.remove.examples=- `%prefix%selfRole remove languages` Removes the selfrole group named languages


command.selfrole.group.setchannel.syntax=selfRole group setChannel <selfRoleGroup*> <textChannel*>
command.selfrole.group.setchannel.description=Sets the textChannel for a selfrole group
command.selfrole.group.setchannel.show=The channel for the **%group%** selfrole group is currently set to **%channel%**
command.selfrole.group.setchannel.unset=Set the channel for the **%group%** selfrole group to **%channel%**
command.selfrole.group.setchannel.set=Set the channel for the **%group%** selfrole group to **%channel%**
command.selfrole.group.setchannel.arguments=%help.arg.selfrolegroup%
command.selfrole.group.setchannel.examples=- `%prefix%selfRole group setChannel languages #langs` Sets the selfrole group languages to be active in #langs


command.selfrole.group.setpattern.syntax=selfRole group setPattern <selfRoleGroup*> [selfRolePattern* | null]
command.selfrole.group.setpattern.description=Sets the pattern for a selfrole group selfrole entry
command.selfrole.group.setpattern.show.unset=The pattern for the **%group%** selfrole group is currently not set, I will use the default pattern instead
command.selfrole.group.setpattern.show=The pattern for the **%group%** selfrole group is currently set to:```%pattern%```
command.selfrole.group.setpattern.set=The pattern for the **%group%** selfrole group has been set to:```%pattern%```
command.selfrole.group.setpattern.unset=The pattern for the **%group%** selfrole group has been unset
command.selfrole.group.setpattern.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.selfrolepattern%
command.selfrole.group.setpattern.examples=- `%prefix%selfRole group setPattern languages "%name%:%enter%%emoteji% -> %role%"` Sets the pattern to the text between the double quotes\
  \n- `%prefix%selfRole group setPattern null` Unsets he pattern, melijn will use the default one\
  \n- `%prefix%selfRole group setPattern` Show the current pattern


command.selfrole.group.messageids.syntax=selfRole group messageIds <add | remove | removeAt | clear | list>
command.selfrole.group.messageids.description=Manages the messageIds where the selfrole group will respond on


command.selfrole.group.messageids.add.syntax=selfRole group messageIds add <selfRoleGroup*> <messageId: long*>
command.selfrole.group.messageids.add.description=Adds a messageId to the list of messageIds of a selfrole group
command.selfrole.group.messageids.add.added=Added **%messageId%** to the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.add.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.bignumber%, messageId must be between an existing one pls
command.selfrole.group.messageids.add.examples=- `%prefix%selfRole group messageIds add languages 462917197556088833` Adds the messageId 462917197556088833 to the messageIds of the selfrole group named languages


command.selfrole.group.messageids.remove.syntax=selfRole group messageIds remove <selfRoleGroup*> <messageId: long*>
command.selfrole.group.messageids.remove.description=Removes a messageId from the list of messageIds of a selfrole group
command.selfrole.group.messageids.remove.removed=Removed **%messageId%** from the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.remove.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.bignumber%, messageId must be between an existing one pls
command.selfrole.group.messageids.remove.examples=- `%prefix%selfRole group messageIds remove languages 462917197556088833` Removes the messageId 462917197556088833 from the messageIds of the selfrole group named languages


command.selfrole.group.messageids.removeat.syntax=selfRole group messageIds removeAt <selfRoleGroup*> <index: number*>
command.selfrole.group.messageids.removeat.description=Removes a messageId from the list of messageIds of a selfrole group
command.selfrole.group.messageids.removeat.removed=Removed **%messageId%** at index **%index%** from the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.removeat.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.number%, index must be between 1 and the total amount of messageIds, use `%prefix%selfRole group messageIds list <selfRoleGroup*>` to see indexes
command.selfrole.group.messageids.removeat.examples=- `%prefix%selfRole group messageIds removeAt languages 1` Removes the messageId from the messageIds of the selfrole group named languages


command.selfrole.group.messageids.clear.syntax=selfRole group messageIds clear <selfRoleGroup*>
command.selfrole.group.messageids.clear.description=Clears the list of messageIds of a selfrole group
command.selfrole.group.messageids.clear.cleared=Cleared the messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.clear.arguments=%help.arg.selfrolegroup%
command.selfrole.group.messageids.clear.examples=- `%prefix%selfRole group messageIds clear languages` Clears the messageIds of the selfrole group named languages


command.selfrole.group.messageids.list.syntax=selfRole group messageIds list <selfRoleGroup*>
command.selfrole.group.messageids.list.description=Shows the list of messageIds of a selfrole group
command.selfrole.group.messageids.list.title=List of messageIds of the **%group%** selfrole group
command.selfrole.group.messageids.list.empty=There are no messageIds set for the **%group%** selfrole group
command.selfrole.group.messageids.list.arguments=%help.arg.selfrolegroup%
command.selfrole.group.messageids.list.examples=- `%prefix%selfRole group messageIds list languages` Lists the messageIds of the languages group


command.selfrole.group.changename.syntax=selfRole group changeName <selfRoleGroup*> <name: string*>
command.selfrole.group.changename.description=Changes the name of an existing selfrole group
command.selfrole.group.changename.updated=Changed the name of the **%oldName%** selfrole group to **%newName%**
command.selfrole.group.changename.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.string%, name: new name for the selfrole group (0 to 64 characters)
command.selfrole.group.changename.examples=- `%prefix%selfRole group changeName languages langs` Changes the name of the languages group to langs


command.selfrole.group.setenabled.syntax=selfRole group setEnabled <selfRoleGroup*> <state: boolean*>
command.selfrole.group.setenabled.description=Sets the enabled state of a selfrole group
command.selfrole.group.setenabled.show.true=The selfrole group **%group%** is currently enabled
command.selfrole.group.setenabled.show.false=The selfrole group **%group%** is currently disabled
command.selfrole.group.setenabled.set.true=The selfrole group **%group%** has been enabled
command.selfrole.group.setenabled.set.false=The selfrole group **%group%** has been disabled
command.selfrole.group.setenabled.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.boolean%
command.selfrole.group.setenabled.examples=- `%prefix%selfRole group setEnabled languages true` Enables the selfrole group named languages


command.selfrole.group.setselfroleable.syntax=selfRole group setSelfRoleable <selfRoleGroup*> <state: boolean*>
command.selfrole.group.setselfroleable.description=Sets the selfroleable state of a selfrole group
command.selfrole.group.setselfroleable.show.true=The selfrole group **%group%** is currently selfroleable
command.selfrole.group.setselfroleable.show.false=The selfrole group **%group%** is currently not selfroleable
command.selfrole.group.setselfroleable.set.true=The selfrole group **%group%** has been set to be selfroleable
command.selfrole.group.setselfroleable.set.false=The selfrole group **%group%** has been set to be not selfroleable
command.selfrole.group.setselfroleable.arguments=%help.arg.selfrolegroup%\
  \n%help.arg.boolean%
command.selfrole.group.setselfroleable.examples=- `%prefix%selfRole group setSelfRoleable languages true` Makes the selfrole group named languages able to be self assigned using `%prefix%`


command.selfrole.group.list.syntax=selfRole group list
command.selfrole.group.list.description=Lists the selfrole groups
command.selfrole.group.list.title=List of selfrole groups


command.selfrole.list.syntax=selfRole list
command.selfrole.list.description=Shows the list of selfroles
command.selfrole.list.title=List of SelfRoles
command.selfrole.list.empty=There are no selfroles set


command.customcommand.syntax=customCommand <list | add | remove | select | response | rename | copy | aliases | setChance | setPrefixState | setDescription>
command.customcommand.description=Main command for managing custom commands
command.customcommand.help=Custom commands support variables in their response, these special words will be replaced when executed. `%prefix%helpVar list`
command.customcommand.examples=- `%prefix%customCommand response setContent Hi, {username} thx for executing this command!` -> The cc will replace the {username} with the executor's username


command.customcommand.rename.syntax=customCommand rename <newName: string*>
command.customcommand.rename.description=Renames the selected custom command to the new name
command.customcommand.rename.success=Renamed **%oldName%** to **%newName%**
command.customcommand.rename.arguments=%help.arg.string%, newName: new name for the custom command
command.customcommand.rename.examples=- `%prefix%customCommand rename test2` Renames the selected custom command to 'test2'


command.customcommand.copy.syntax=customCommand copy <firstId: ccId*> <secondId: ccId*>
command.customcommand.copy.description=Copies the response, chance and prefix state
command.customcommand.copy.success=Copied the properties of (name: **%ccName1%** | id: **%id1%**) to (name: **%ccName2%** | id: **%id2%**)
command.customcommand.copy.arguments=%help.arg.ccid%
command.customcommand.copy.examples=- `%prefix%customCommand copy 1 2` Copies the response, chance and prefix state from custom command with id 1 to the custom command with id 2


command.customcommand.list.syntax=customCommand list
command.customcommand.list.description=Shows the list of customCommands
command.customcommand.list.title=List of custom commands:


command.customcommand.add.syntax=customCommand add <ccname*> [ccresponse*]
command.customcommand.add.description=Adds a custom command
command.customcommand.add.success=Added the custom command (name: **%ccName%** | id: **%id%**) with content:\n%content%
command.customcommand.add.limit=You've reached the custom command limit of **%limit%**
command.customcommand.add.arguments=%help.arg.ccname%\
  \n%help.arg.ccresponse%
command.customcommand.add.examples=- `%prefix%customCommand add blub 🐟` Adds a customCommand with blub as invoke and 🐟 as reply


command.customcommand.remove.syntax=customCommand remove <ccId*>
command.customcommand.remove.description=Removes a custom command
command.customcommand.remove.failed=The custom command with id **%id%** is unknwon, use `%prefix%cc list`
command.customcommand.remove.success=Removed the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.remove.arguments=%help.arg.ccid%
command.customcommand.remove.examples=- `%prefix%customCommand remove 25` Removes the customCommand with id 5


command.customcommand.select.syntax=customCommand select <ccId*>
command.customcommand.select.description=Selects a custom command
command.customcommand.select.selected=You've selected the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.select.arguments=%help.arg.ccid%
command.customcommand.select.examples=- `%prefix%customCommand select 25` Selects the customCommand with id 5


command.customcommand.aliases.syntax=customCommand aliases <add | remove | list>
command.customcommand.aliases.description=Main command for managing aliases for the selected custom command


command.customcommand.aliases.add.syntax=customCommand aliases add <ccalias*>
command.customcommand.aliases.add.description=Adds an alias to the selected custom command
command.customcommand.aliases.add.success=Added **%arg%** as alias for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.aliases.add.arguments=%help.arg.ccalias%
command.customcommand.aliases.add.examples=- `%prefix%customCommand aliases add synonym` Adds "synonym" as another way to execute the selected custom cummmand.


command.customcommand.aliases.remove.syntax=customCommand aliases remove <ccAliasIndex*>
command.customcommand.aliases.remove.description=Removes the alias at the given position from the selected custom command
command.customcommand.aliases.remove.success=Removed alias (**%arg%** | position: **%position%**) from the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.aliases.remove.arguments=%help.arg.ccaliasindex%
command.customcommand.aliases.remove.examples=- `%prefix%customCommand aliases remove 1` Removes the alias with index 1 of the selected cc


command.customcommand.aliases.list.syntax=customCommand aliases list
command.customcommand.aliases.list.description=Shows the list of aliases of the selected custom command
command.customcommand.aliases.list.title=List of aliases for custom command (name: **%ccName%** | id: **%id%**):
command.customcommand.aliases.list.empty=Custom command (name: **%ccName%** | id: **%id%**) has no aliases


command.customcommand.setdescription.syntax=customCommand setDescription <ccDescription* | null>
command.customcommand.setdescription.description=Sets a description for the selected custom command
command.customcommand.setdescription.set=I've set the description of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%
command.customcommand.setdescription.unset=I've unset the description of the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setdescription.arguments=%help.arg.ccdescription%
command.customcommand.setdescription.examples=- `%prefix%customCommand setDescription Shows you a website link` Sets the selected custom command's description to "Shows you a website link"\
  \n- `%prefix%customCommand setDescription null` Unsets the selected custom command's description


command.customcommand.setchance.syntax=customCommand setChance <ccChance*>
command.customcommand.setchance.description=Sets the chance of execution for the selected custom command
command.customcommand.setchance.success=I've set the chance of the custom command (name: **%ccName%** | id: **%id%**) to:\n%arg%
command.customcommand.setchance.arguments=%help.arg.ccchance%
command.customcommand.setchance.examples=- `%prefix%customCommand setChance 200` Sets the selected custom command's chance to 200


command.customcommand.setprefixstate.syntax=customCommand setPrefixState <ccPrefixState>
command.customcommand.setprefixstate.description=Turns the prefix on or of for the selected custom command
command.customcommand.setprefixstate.enabled=I've enabled the prefix state for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setprefixstate.disabled=I've disabled the prefix state for the custom command (name: **%ccName%** | id: **%id%**)
command.customcommand.setprefixstate.arguments=%help.arg.ccchance%
command.customcommand.setprefixstate.examples=- `%prefix%customCommand setprefixstate enabled` Enables the selected custom command's prefix state\
  \n- `%prefix%customCommand setprefixstate disabled` Disables the selected custom command's prefix state


command.customcommand.response.syntax=customCommand response <setContent | embed | attachments | view | setPingable>
command.customcommand.response.description=Manages the selected custom command's response


command.customcommand.response.view.syntax=customCommand response view
command.customcommand.response.view.description=Shows you a preview of the response of the selected custom command


command.customcommand.response.setcontent.syntax=customCommand response setContent [ccContent* | null]
command.customcommand.response.setcontent.description=Sets the text content of the selected custom command
command.customcommand.response.setcontent.arguments=%help.arg.cccontent%
command.customcommand.response.setcontent.examples=- `%prefix%customCommand response setContent 🐟` Sets the custom command's text response to "🐟"\
  \n- `%prefix%customCommand response setContent null` Unsets the custom command's text response


command.customcommand.response.embed.syntax=customCommand response embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.customcommand.response.embed.description=Sets the embed content of the selected custom command


command.customcommand.response.embed.clear.syntax=customCommand response embed clear
command.customcommand.response.embed.clear.description=Clears the embed content of the selected custom command


command.customcommand.response.embed.setdescription.syntax=customCommand response embed setDescription [embedDescription* | null]
command.customcommand.response.embed.setdescription.description=Sets the embed description of the selected custom command
command.customcommand.response.embed.setdescription.arguments=%help.arg.embeddescription%
command.customcommand.response.embed.setdescription.examples=- `%prefix%customCommand response embed setDescription 🐟` Sets the custom command's text response to "🐟"\
  \n- `%prefix%customCommand response embed setDescription null` Unsets the custom command's text response


command.customcommand.response.embed.setcolor.syntax=customCommand response embed setColor [color* | null]
command.customcommand.response.embed.setcolor.description=Sets the embed color of the selected custom command
command.customcommand.response.embed.setcolor.arguments=%help.arg.color%
command.customcommand.response.embed.setcolor.examples=- `%prefix%customCommand response embed setColor #FFFFFF` Sets the custom command's embed color white\
  \n- `%prefix%customCommand response embed setColor null` Unsets the custom command's embed color


command.customcommand.response.embed.settitle.syntax=customCommand response embed setTitle [embedTitle* | null]
command.customcommand.response.embed.settitle.description=Sets the embed title of the selected custom command
command.customcommand.response.embed.settitle.arguments=%help.arg.embedtitle%
command.customcommand.response.embed.settitle.examples=- `%prefix%customCommand response embed setTitle Fish` Sets the custom command's embed title to "Fish"\
  \n- `%prefix%customCommand response embed setTitle null` Unsets the custom command's embed title


command.customcommand.response.embed.settitleurl.syntax=customCommand response embed setTitleUrl [embedTitleUrl* | null]
command.customcommand.response.embed.settitleurl.description=Sets the embed title url of the selected custom command
command.customcommand.response.embed.settitleurl.arguments=%help.arg.embedtitleurl%
command.customcommand.response.embed.settitleurl.examples=- `%prefix%customCommand response embed setTitleUrl https://melijn.com/` Sets the custom command's embed title's url to "https://melijn.com/"\
  \n- `%prefix%customCommand response embed setTitleUrl null` Unsets the custom command's embed title's url


command.customcommand.response.embed.setauthor.syntax=customCommand response embed setAuthor [embedAuthor* | null]
command.customcommand.response.embed.setauthor.description=Sets the embed author of the selected custom command
command.customcommand.response.embed.setauthor.arguments=%help.arg.embedauthor%
command.customcommand.response.embed.setauthor.examples=- `%prefix%customCommand response embed setAuthor` Shows the custom command's embed author\
  \n- `%prefix%customCommand response embed setAuthor {username}` Sets the custom command's embed author to "{username}"\
  \n- `%prefix%customCommand response embed setAuthor null` Unsets the custom command's embed author


command.customcommand.response.embed.setauthoricon.syntax=customCommand response embed setAuthorIcon [url* | attachment* | user* | null]
command.customcommand.response.embed.setauthoricon.description=Sets the embed author icon of the selected custom command
command.customcommand.response.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.customcommand.response.embed.setauthoricon.examples=- `%prefix%customCommand response embed setAuthorIcon` Shows the custom command's embed author\
  \n- `%prefix%customCommand response embed setAuthorIcon ~attachment~` Sets the custom command's embed author icon to the attachment\
  \n- `%prefix%customCommand response embed setAuthorIcon @user` Sets the custom command's embed author icon to @user's avatar\
  \n- `%prefix%customCommand response embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setAuthorIcon null` Unsets the custom command's embed author


command.customcommand.response.embed.setauthorurl.syntax=customCommand response embed setAuthorUrl [url* | null]
command.customcommand.response.embed.setauthorurl.description=Sets the embed author url of the selected custom command
command.customcommand.response.embed.setauthorurl.arguments=%help.arg.url%
command.customcommand.response.embed.setauthorurl.examples=- `%prefix%customCommand response embed setAuthorUrl` Shows the custom command's embed author url\
  \n- `%prefix%customCommand response embed setAuthorUrl https://google.com/` Sets the custom command's embed author url to "https://google.com/"\
  \n- `%prefix%customCommand response embed setAuthorUrl null` Unsets the custom command's embed author


command.customcommand.response.embed.setthumbnail.syntax=customCommand response embed setThumbnail [url* | attachment | user* | null]
command.customcommand.response.embed.setthumbnail.description=Sets the embed thumbnail of the selected custom command
command.customcommand.response.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.customcommand.response.embed.setthumbnail.examples=- `%prefix%customCommand response embed setThumbnail` Shows the custom command's embed thumbnail\
  \n- `%prefix%customCommand response embed setThumbnail ~attachment~` Sets the custom command's embed thumbnail to the attachment\
  \n- `%prefix%customCommand response embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%customCommand response embed setThumbnail null` Unsets the custom command's embed thumbnail


command.customcommand.response.embed.setimage.syntax=customCommand response embed setImage [url* | attachment | user* | null]
command.customcommand.response.embed.setimage.description=Sets the embed image of the selected custom command
command.customcommand.response.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.customcommand.response.embed.setimage.examples=- `%prefix%customCommand response embed setImage` Shows the custom command's embed image\
  \n- `%prefix%customCommand response embed setImage ~attachment~` Sets the custom command's embed image to the attachment\
  \n- `%prefix%customCommand response embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setImage @user` Sets the custom command's embed image to @user's avatar\
  \n- `%prefix%customCommand response embed setImage null` Unsets the custom command's embed image


command.customcommand.response.embed.setfooter.syntax=customCommand response embed setFooter [footerText* | null]
command.customcommand.response.embed.setfooter.description=Sets the embed footer of the selected custom command
command.customcommand.response.embed.setfooter.arguments=%help.arg.footertext%
command.customcommand.response.embed.setfooter.examples=- `%prefix%customCommand response embed setFooter` Shows the custom command's embed footer\
  \n- `%prefix%customCommand response embed setFooter epic text` Sets the custom command's embed footer "epic text"\
  \n- `%prefix%customCommand response embed setFooter null` Unsets the custom command's embed image


command.customcommand.response.embed.setfootericon.syntax=customCommand response embed setFooterIcon [url* | attachment* | user* | null]
command.customcommand.response.embed.setfootericon.description=Sets the embed footer icon of the selected custom command
command.customcommand.response.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.customcommand.response.embed.setfootericon.examples=- `%prefix%customCommand response embed setFooterIcon` Shows the custom command's embed footer icon\
  \n- `%prefix%customCommand response embed setFooterIcon ~attachment~` Sets the custom command's embed footer icon to the attachment\
  \n- `%prefix%customCommand response embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the custom command's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%customCommand response embed setFooterIcon @user` Sets the custom command's embed footer icon to @user's avatar\
  \n- `%prefix%customCommand response embed setFooterIcon null` Unsets the custom command's embed footer icon


command.customcommand.response.embed.settimestamp.syntax=customCommand response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.customcommand.response.embed.settimestamp.description=Sets the embed timestamp of the selected custom command
command.customcommand.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.customcommand.response.embed.settimestamp.examples=- `%prefix%customCommand response embed setTimestamp` Shows the custom command's embed timestamp\
  \n- `%prefix%customCommand response embed setTimestamp current` Sets the custom command's embed timestamp to the current time\
  \n- `%prefix%customCommand response embed setTimestamp current true` Sets the custom command's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%customCommand response embed setTimestamp 2020-05-21 12:00` Sets the custom command's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%customCommand response embed setTimestamp null` Unsets the custom command's embed timestamp


command.customcommand.response.embed.field.syntax=customCommand response embed field <add | remove | list | setTitle | setValue | setInline>
command.customcommand.response.embed.field.description=Manages the embed fields of the selected custom command


command.customcommand.response.embed.field.add.syntax=customCommand response embed field add <fieldTitle> > <fieldValue>
command.customcommand.response.embed.field.add.description=Adds an embed field to the selected custom command
command.customcommand.response.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%\
  \n%help.arg.user%
command.customcommand.response.embed.field.add.examples=- `%prefix%customCommand response embed field add user > ToxicMushroom` Adds a field entry to the selected custom command's embed response with "user" as title and "ToxicMushroom as value


command.customcommand.response.embed.field.remove.syntax=customCommand response embed field remove <fieldIndex>
command.customcommand.response.embed.field.remove.description=Removes an embed field of the selected custom command
command.customcommand.response.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`
command.customcommand.response.embed.field.remove.examples=- `%prefix%customCommand response embed field remove 1` Removes the selected custom command's embed response's embed field with index 1


command.customcommand.response.embed.field.list.syntax=customCommand response embed field list
command.customcommand.response.embed.field.list.description=Lists the embed fields of the selected custom command


command.customcommand.response.embed.field.settitle.syntax=customCommand response embed field setTitle <fieldIndex> <fieldTitle>
command.customcommand.response.embed.field.settitle.description=Sets the embed field title of the selected custom command
command.customcommand.response.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.fieldtitle%
command.customcommand.response.embed.field.settitle.examples=- `%prefix%customCommand response embed field setTitle 1 User` Sets the selected custom command's embed response's embed field title with index 1 to "User"


command.customcommand.response.embed.field.setvalue.syntax=customCommand response embed field setValue <fieldIndex> <fieldValue>
command.customcommand.response.embed.field.setvalue.description=Sets the embed field value of the selected custom command
command.customcommand.response.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.fieldtitle%
command.customcommand.response.embed.field.setvalue.examples=- `%prefix%customCommand response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"


command.customcommand.response.embed.field.setinline.syntax=customCommand response embed field setInline <fieldIndex> <state>
command.customcommand.response.embed.field.setinline.description=Sets the embed field inline state of the selected custom command
command.customcommand.response.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%customCommand response embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.customcommand.response.embed.field.setinline.examples=- `%prefix%customCommand response embed field setInline 1 true` Sets the selected custom command's embed response's embed field to be inlined\
  \n- `%prefix%customCommand response embed field setInline 1 false` Sets the selected custom command's embed response's embed field\nnot\nto\nbe inlined


command.customcommand.response.attachments.syntax=customCommand response attachments <add | remove | list>
command.customcommand.response.attachments.description=Manages the attachments of the selected custom command


command.customcommand.response.attachments.add.syntax=customCommand response attachments add <url*> <fileName*>
command.customcommand.response.attachments.add.description=Adds attachments to the selected custom command
command.customcommand.response.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.customcommand.response.attachments.add.examples=- `%prefix%customCommand response attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the selected custom command with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.customcommand.response.attachments.remove.syntax=customCommand response attachments remove <url*>
command.customcommand.response.attachments.remove.description=Removes attachments from the selected custom command
command.customcommand.response.attachments.remove.arguments=%help.arg.url%
command.customcommand.response.attachments.remove.examples=- `%prefix%customCommand response attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the selected custom command with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.customcommand.response.attachments.list.syntax=customCommand response attachments list
command.customcommand.response.attachments.list.description=Lists the attachments from the selected custom command


command.customcommand.response.setpingable.syntax=customCommand response setPingable [boolean*]
command.customcommand.response.setpingable.description=Sets whether the custom command response should ping when mentions are present.
command.customcommand.response.setpingable.arguments=%help.arg.boolean%
command.customcommand.response.setpingable.examples=- `%prefix%kickedMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%customCommand response setPingable true` Sets the custom command response message to ping when mentions are present.


message.content.unset=Content of **%type%** has been unset
message.content.set=Content of **%type%** has been set to:\n%arg%
message.content.show.unset=Content of **%type%** is unset
message.content.show.set=Content of **%type%** is set to:\n%content%


message.embed.description.unset=Embed description of **%type%** has been unset
message.embed.description.set=Embed description of **%type%** has been set to:\n%arg%
message.embed.description.show.unset=Embed description of **%type%** is unset
message.embed.description.show.set=Embed description of **%type%** is set to:\n%description%


message.embed.clear=Removed all embed information from the **%type%**


message.attachments.list.title=Attachments of **type**:
message.attachments.list.empty=The **%type%** has no attachments
message.attachments.add=Added attachment to **%type%**, attachment:\n(url: **%url%** | name: **%name%**)
message.attachments.remove.notanattachment=**%arg%** is not a used url, use `%prefix%cc response attachments list` to see which urls can be removed
message.attachments.remove.success=The attachment **%file%** has been removed from the **%type%**


message.embed.color.unset=Embed color of **%type%** has been unset
message.embed.color.set=Embed color of **%type%** has been set to %arg%
message.embed.color.show.unset=Embed color of **%type%** is unset
message.embed.color.show.set=Embed color of **%type%** is set to %color%


message.embed.title.unset=Embed title of **%type%** has been unset
message.embed.title.set=Embed title of **%type%** has been set to %arg%
message.embed.title.show.unset=Embed title of **%type%** is unset
message.embed.title.tolong=%arg%, is to long (**%length%**) the maximum embed title length is %max% 
message.embed.title.show.set=Embed title of **%type%** is set to %title%


message.embed.titleurl.unset=Embed title url of **%type%** has been unset
message.embed.titleurl.set=Embed title url of **%type%** has been set to %arg%
message.embed.titleurl.invalid=**%arg%** is not a valid title url
message.embed.titleurl.show.unset=Embed title url of **%type%** is unset
message.embed.titleurl.show.set=Embed title url of **%type%** is set to %titleUrl%


message.embed.authorurl.unset=Embed author url of **%type%** has been unset
message.embed.authorurl.set=Embed author url of **%type%** has been set to %arg%
message.embed.authorurl.show.unset=Embed author url of **%type%** is unset
message.embed.authorurl.show.set=Embed author url of **%type%** is set to %authorUrl%


message.embed.authoriconurl.unset=Embed author icon of **%type%** has been unset
message.embed.authoriconurl.set=Embed author icon of **%type%** has been set to %arg%
message.embed.authoriconurl.show.unset=Embed author icon of **%type%** is unset
message.embed.authoriconurl.show.set=Embed author icon of **%type%** is set to %authorIcon%


message.embed.authorname.unset=Embed author of **%type%** has been unset
message.embed.authorname.set=Embed author of **%type%** has been set to %arg%
message.embed.authorname.show.unset=Embed author of **%type%** is unset
message.embed.authorname.show.set=Embed author of **%type%** is set to %author%


message.embed.thumbnail.unset=Embed thumbnail of **%type%** has been unset
message.embed.thumbnail.set=Embed thumbnail of **%type%** has been set to %arg%
message.embed.thumbnail.show.unset=Embed thumbnail of **%type%** is unset
message.embed.thumbnail.show.set=Embed thumbnail of **%type%** is set to %thumbnail%


message.embed.image.unset=Embed image of **%type%** has been unset
message.embed.image.set=Embed image of **%type%** has been set to %arg%
message.embed.image.show.unset=Embed image of **%type%** is unset
message.embed.image.show.set=Embed image of **%type%** is set to %image%
message.embed.image.urlerror=Your input %arg% is not a valid url


message.embed.timestamp.set=Embed timestamp of **%type%** has been set to `%arg%`
message.embed.timestamp.set.updating=Embed timestamp of **%type%** has been set to `%arg%` and will update to current when the message is shown
message.embed.timestamp.unset=Embed timestamp of **%type%** has been unset
message.embed.timestamp.show.unset=Embed timestamp of **%type%** is currently unset
message.embed.timestamp.show.set=Embed timestamp of **%type%** is currently set to `%timeStamp%`
message.embed.timestamp.show.set.updating=Embed timestamp of **%type%** is currently set to `%timeStamp%` but will update to current when the message is shown


message.embed.footer.unset=Embed footer of **%type%** has been unset
message.embed.footer.set=Embed footer of **%type%** has been set to %arg%
message.embed.footer.show.unset=Embed footer of **%type%** is unset
message.embed.footer.show.set=Embed footer of **%type%** is set to %footer%


message.embed.footericon.unset=Embed footer icon of **%type%** has been unset
message.embed.footericon.set=Embed footer icon of **%type%** has been set to %arg%
message.embed.footericon.show.unset=Embed footer icon of **%type%** is unset
message.embed.footericon.show.set=Embed footer icon of **%type%** is set to %footerIcon%


message.embed.field.add=Embed field added to **%type%** with the following attributes:```LDIF\
  \ntitle: %title%\
  \nvalue: %value%\
  \ninline: %inline%```


message.embed.fieldtitle.set=Embed field at index **%index%** for **%type%** has had it's title changed to:\
  \n%title%
message.embed.fieldvalue.set=Embed field at index **%index%** for **%type%** has had it's value changed to:\
  \n%title%
message.embed.fieldinline.set=Embed field at index **%index%** for **%type%** has had it's inline property changed to **%inline%**
message.embed.field.removed=Embed field at index **%index%** has been removed for **%type%**
message.embed.field.list.empty=The **%type%**'s embed has no fields
message.embed.field.list.title=Fields of **%type%**:


message.pingable.show.true=The **%type%** will ping when mentions are present.
message.pingable.show.false=The **%type%** won't ping even when mentions are present.
message.pingable.set.true=The **%type%** will now ping when mentions are present.
message.pingable.set.false=The **%type%** won't ping anymore even when mentions are present.


listener.message.purge.log.title=%amount% messages deleted in %channel%
listener.message.purge.log.description=Format: `hh:mm:ss` **Username • userId**: message\
  \n**__Content__** %content%\
  \n\n**Deleter Id**: %messageDeleterId%\
  \n**Deleted Time**: %deletedTime%
listener.message.purge.log.footer=Purged by: %user%

listener.message.deletion.log.title=Message deleted in %channel%
listener.message.deletion.log.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nDeleter Id: %messageDeleterId%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.self.description=```LDIF\
  \nSender: %messageAuthor%\
  \nSender Id: %messageAuthorId%\
  \nContent: %messageContent%\
  \nSent Time: %sentTime%\
  \nDeleted Time: %deletedTime%```
listener.message.deletion.log.footer=Deleted by: %user%


listener.message.update.log.title=Message updated in %channel%
listener.message.update.log.description=```LDIF\
  \nUser: %user%\
  \nUser Id: %userId%\
  \nOld Content: %oldContent%\
  \nNew Content: %newContent%\
  \nSent Time: %sentTime%\
  \nEdited Time: %editedTime%```**[Message](%link%)**


listener.message.attachment.log.title=Attachment sent in %channel%
listener.message.attachment.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nAttachment: %attachmentUrl%\
  \nMoment: %moment%```**[Attachment](%attachmentUrl%) • [Message](%messageUrl%)**
listener.message.attachment.log.footer=Attached by: %user%


listener.message.reaction.log.title=Reaction added in %channel%
listener.message.reaction.emote.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmote: %emoteName%\
  \nEmote Id: %emoteId%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emote](%emoteUrl%)**
listener.message.reaction.emoji.log.description=```LDIF\
  \nUser Id: %userId%\
  \nMessage Id: %messageId%\
  \nEmoji: %emoteName%\
  \nMoment: %moment%```**[Message](%messageUrl%) • [Emoji](%emoteUrl%)**
listener.message.reaction.log.footer=Reacted by: %user%


command.setchannel.syntax=setChannel <channelType*> <textChannel* | null>
command.setchannel.description=Sets or shows a channel by it's type
command.setchannel.set=The %channelType%Channel has been set to **%channel%**
command.setchannel.unset=The %channelType%Channel has been unset
command.setchannel.show.set=The %channelType%Channel is set to **%channel%**
command.setchannel.show.unset=The %channelType%Channel is unset
command.setchannel.arguments=%help.arg.channeltype%\
  \n%help.arg.textchannel%
command.setchannel.examples=- `%prefix%setChannel JOIN #welcome` Sets the JoinChannel to #welcome\
  \n- `%prefix%setChannel JOIN null` Unsets the JoinChannel\
  \n- `%prefix%setChannel JOIN` Shows the JoinChannel value


command.history.syntax=history <all | punishmentType* | findByCaseId> <user*>
command.history.description=Shows you the history of punishments of a user
command.history.nohistory=**%user%** has no %typeList% history
command.history.arguments=%help.arg.punishmenttype%\
  \n%help.arg.user%
command.history.examples=- `%prefix%history ban @ToxicMushroom` Shows the ban history of @ToxicMushroom\
  \n- `%prefix%history all @ToxicMushroom` Shows all history of @ToxicMushroom


command.history.findbycaseid.syntax=history findByCaseId <caseId: string*>
command.history.findbycaseid.description=Shows the punishment case that is linked to a caseId
command.history.findbycaseid.arguments=%help.arg.string%, caseId: id of a case can be found with `%prefix%history` or in the punishment logs
command.history.findbycaseid.examples=- `%prefix%history findByCaseId AAGxC5eETAw` Shows the punishment case that is linked to `AAGxC5eETAw`


command.kick.syntax=kick <user*> [reason*]
command.kick.description=Kicks the target user, dms them information of the kick
command.kick.success=Kicked **%user%**, reason: `%reason%`
command.kick.failure=Failed to kick **%user%**, cause: ```%cause%```
command.kick.arguments=%help.arg.reason%\
  \n%help.arg.user%
command.kick.examples=- `%prefix%kick @ToxicMushroom You did bad thing` Kicks @ToxicMushroom with reason "You did a bad thing"


command.warn.syntax=warn <user*> [reason*]
command.warn.description=Warns the target user, dms them information of the warn
command.warn.success=Warned **%user%**, reason: `%reason%`
command.warn.arguments=%help.arg.reason%\
  \n%help.arg.user%
command.warn.examples=- `%prefix%warn @ToxicMushroom You did bad thing` Warns @ToxicMushroom with reason "You did a bad thing"


command.unban.syntax=unban <user*> [reason*]
command.unban.description=Unbans the target user, dms them information of the unban
command.unban.success=Unbanned **%user%**, reason: `%reason%`
command.unban.failure=Failed to unban **%user%**, cause: ```%cause%```
command.unban.notbanned=**%user%** is not banned
command.unban.arguments=%help.arg.user%\
  \n%help.arg.reason%
command.unban.examples=- `%prefix%unban @ToxicMushroom wrong user` Unbans @ToxicMushroom with reason "wrong user"


command.ban.syntax=ban <user*> [reason*]
command.ban.description=Bans the target user, dms them information of the ban
command.ban.cannotban=I cannot ban **%user%** because this user has an equal or higher role position relative to me
command.ban.success=Banned **%user%** for: `%reason%`
command.ban.success.updated=Banned **%user%** for: `%reason%`\
  \n*Active ban has been updated*
command.ban.failure=Banning **%user%** failed, cause: ```%cause%```
command.ban.arguments=%help.arg.reason%\
  \n%help.arg.user%
command.ban.examples=- `%prefix%ban @ToxicMushroom You did bad thing` Bans @ToxicMushroom with reason "You did bad thing"


command.tempban.syntax=tempBan <user*> <duration*> [reason*]
command.tempban.description=Temporarily bans the target user, sends them a report of the reason, times, ect.. of the bans
command.tempban.cannotban=I cannot tempban **%user%** because this user has an equal or higher role position relative to me
command.tempban.success=Temporarily banned **%user%** until %endTime% for: `%reason%`
command.tempban.success.updated=Temporarily banned **%user%** until %endTime% for: `%reason%`\
  \n*Active ban has been updated*
command.tempban.failure=Banning **%user%** failed, cause: ```%cause%```
command.tempban.arguments=%help.arg.reason%\
  \n%help.arg.user%\
  \n%help.arg.duration%
command.tempban.examples=- `%prefix%tempBan @ToxicMushroom "1w 5d 5h" You did bad thing` Bans @ToxicMushroom with reason "You did bad thing" and unbans after 293 hours\
  \n- `%prefix%tempBan @ToxicMushroom 5d You did bad thing` Bans @ToxicMushroom with reason "You did bad thing" and unbans after 5 days


message.banning=Banning...
message.banning.failed=Banning failed


message.softbanning=Soft banning...
message.softbanning.failed=Soft banning failed


message.warning=Warning..
message.warning.failed=Warning failed..


message.kicking=Kicking..
message.kicking.failed=Kicking failed..


message.muting=Muting...
message.muting.failed=Muting failed
message.creatingmuterole=I'm creating a mute role since none was set..
message.creatingmuterole.failed=Creating a mute role failed: ```%cause%```


command.unmute.syntax=unmute <user*> [reason*]
command.unmute.description=Unmutes the target user, dms them information of the unmute
command.unmute.success=Unmuted **%user%**, reason: `%reason%`
command.unmute.failure=Failed to unmute **%user%**, cause: ```%cause%```
command.unmute.nomuterole=Please configure the muterole first using `%prefix%setRole mute <role*>`
command.unmute.notmuted=**%user%** is not muted
command.unmute.arguments=%help.arg.user%\
  \n%help.arg.reason%
command.unmute.examples=- `%prefix%unmute @ToxicMushroom Wrong user` Unmutes @ToxicMushroom with reason "Wrong user"


command.mute.syntax=mute <user*> [reason*]
command.mute.description=Mutes the target user, dms them information of the mute
command.mute.cannotmute=I cannot mute **%user%** because this user has an equal or higher role position relative to me
command.mute.success=Muted **%user%** for: `%reason%`
command.mute.success.updated=Muted **%user%** for: `%reason%`\
  \n*Active mute has been updated*
command.mute.failure=Muting **%user%** failed, cause: ```%cause%```
command.mute.arguments=%help.arg.reason%\
  \n%help.arg.user%
command.mute.examples=- `%prefix%mute @ToxicMushroom You did bad thing` Mutes @ToxicMushroom with reason "You did bad thing"


command.tempmute.syntax=tempMute <user*> <duration*> [reason*]
command.tempmute.description=Temporarily mutes the target user, sends them a report of the reason, times, ect.. of the mute
command.tempmute.cannotmute=I cannot tempmute **%user%** because this user has an equal or higher role position relative to me
command.tempmute.success=Temporarily muted **%user%** until %endTime% for: `%reason%`
command.tempmute.success.updated=Temporarily muted **%user%** until %endTime% for: `%reason%`\
  \n*Active mute has been updated*
command.tempmute.failure=TempMuting **%user%** failed, cause: ```%cause%```
command.tempmute.arguments=%help.arg.reason%\
  \n%help.arg.user%\
  \n%help.arg.duration%
command.tempmute.examples=- `%prefix%tempMute @ToxicMushroom "1d 5h" You did bad thing` Mutes @ToxicMushroom with reason "You did bad thing" and unmutes after 29 hours\
  \n- `%prefix%tempMute @ToxicMushroom 1d You did bad thing` Mutes @ToxicMushroom with reason "You did bad thing" and unmutes after 24 hours


command.setlogchannel.syntax=setLogChannel <logChannelTypeNode*> [textChannel*]
command.setlogchannel.description=Sets log channels or shows them when only the logChannelTypeNode is provided
command.setlogchannel.show.set.single=The **%logChannelType%** log channel is set to **%channel%**
command.setlogchannel.show.unset.single=The **%logChannelType%** log channel is unset
command.setlogchannel.show.multiple=Settings of the **%channelCount%** log channels that match `%logChannelTypeNode%`
command.setlogchannel.set.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been set to **%channel%**
command.setlogchannel.set.single=The **%logChannelType%** log channel has been set to **%channel%**
command.setlogchannel.unset.multiple=The **%channelCount%** log channels that match `%logChannelTypeNode%` have been unset
command.setlogchannel.unset.single=The **%logChannelType%** log channel has been unset
command.setlogchannel.arguments=%help.arg.logchanneltypenode%\
  \n%help.arg.textchannel%
command.setlogchannel.examples=- `%prefix%setLogChannel all #logs` Sets all log channels to #logs\
  \n- `%prefix%setLogChannel ban #bans` Sets tempban, permban and unban log channel to #bans\
  \n- `%prefix%setLogChannel tempban #tempbans` Sets tempban log channel to #tempbans


command.setrole.syntax=setRole <roleType*> [role*]
command.setrole.description=Sets a role or shows the configured role when only the roleType is provided
command.setrole.show.set=The %roleType%Role is currently set to **%role%**
command.setrole.show.unset=The %roleType%Role is unset
command.setrole.set=The %roleType%Role has been set to **%role%**
command.setrole.unset=The %roleType%Role has been unset
command.setrole.arguments=%help.arg.roletype%\
  \n%help.arg.role%
command.setrole.examples=- `%prefix%setRole mute @muted` Sets the mute role to @muted


command.setrolecolor.syntax=setRoleColor <role*> [color*]
command.setrolecolor.description=Sets a role color or shows the current role color
command.setrolecolor.show=The **%role%** role color is currently set to **%color%**
command.setrolecolor.show.unset=The **%role%** role color is currently set to **%color%**
command.setrolecolor.set=The **%role%** role color has changed from **%oldColor%** to **%color%**
command.setrolecolor.unset=The **%role%** role color has changed from **%oldColor%** to nothing
command.setrolecolor.arguments=%help.arg.role%\
  \n%help.arg.color%
command.setrolecolor.examples=- `%prefix%setRoleColor @fish @FFFFFF` Sets the role color of @fish to #FFFFFF\
  \n- `%prefix%setRoleColor @fish null` Sets the role color of @fish to nothing\
  \n- `%prefix%setRoleColor @fish` Shows the role color of @fish


command.limitroletochannel.syntax=limitRoleToChannel <role*> <textChannel*>
command.limitroletochannel.description=Limits a role to only see one channel WARNING: this adds permission overrides to all except mentioned channels
command.limitroletochannel.confirmation=Are you sure that you want to limit **%role%** to see only **%channel%** ?\
  \nthis cannot be automatically undone. Type yes to continue, other text will cancel the action
command.limitroletochannel.finished=Successfully limited **%role%** to only see **%channel%**
command.limitroletochannel.finished.failed=Limited **%role%** to only see **%channel%**.\n**%failed%** channels failed to be hidden due to missing MANAGE_CHANNEL permission
command.limitroletochannel.cancelled=Cancelled the command
command.limitroletochannel.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.limitroletochannel.examples=- `%prefix%limitRoleToChannel @unverified #verification` Limits the unverified role to only see #verification


command.setallowspacedprefixstate.description=Sets whether the bot should allow spaces between the prefix and the command
command.setallowspacedprefixstate.syntax=setAllowSpacedPrefixState [state: boolean*]
command.setallowspacedprefixstate.show.true=AllowSpacedPrefixState is currently **enabled**
command.setallowspacedprefixstate.show.false=AllowSpacedPrefixState is currently **disabled**
command.setallowspacedprefixstate.set.true=AllowSpacedPrefixState has been set to **enabled**
command.setallowspacedprefixstate.set.false=AllowSpacedPrefixState has been set to **disabled**
command.setallowspacedprefixstate.arguments=%help.arg.boolean%, state: positive state will allow, negative will deny
command.setallowspacedprefixstate.examples=- `%prefix%setAllowSpacedPrefixState true` Allows spaces to be used between the prefix and the command\
  \n- `%prefix%setAllowSpacedPrefixState false` Denies spaces to be used between the prefix and the command\


command.setprivateallowspacedprefixstate.description=Sets whether the bot should allow spaces between the prefix and the command
command.setprivateallowspacedprefixstate.syntax=setAllowSpacedPrefixState [tristate*]
command.setprivateallowspacedprefixstate.show.true=PrivateAllowSpacedPrefixState is currently **enabled**
command.setprivateallowspacedprefixstate.show.default=PrivateAllowSpacedPrefixState is currently **default**
command.setprivateallowspacedprefixstate.show.false=PrivateAllowSpacedPrefixState is currently **disabled**
command.setprivateallowspacedprefixstate.set.true=PrivateAllowSpacedPrefixState has been set to **enabled**
command.setprivateallowspacedprefixstate.set.default=PrivateAllowSpacedPrefixState has been set to **default**
command.setprivateallowspacedprefixstate.set.false=PrivateAllowSpacedPrefixState has been set to **disabled**
command.setprivateallowspacedprefixstate.arguments=%help.arg.tristate%
command.setprivateallowspacedprefixstate.examples=- `%prefix%setAllowSpacedPrefixState true` Allows spaces to be used between the prefix and the command\
  \n- `%prefix%setAllowSpacedPrefixState default` Will use the guild setting\
  \n- `%prefix%setAllowSpacedPrefixState false` Denies spaces to be used between the prefix and the command\


command.prefixes.description=Command for managing server specific prefixes
command.prefixes.syntax=prefixes <add | remove | list | removeAt>
command.prefixes.help=You can have up to %prefixAmount% prefixes


command.prefixes.add.syntax=prefixes add <prefix*>
command.prefixes.add.description=Adds a prefix for executing commands
command.prefixes.add.response1=Added %prefix% as prefix
command.prefixes.add.limit=You've hit the **%limit%** prefixes limit
command.prefixes.add.arguments=%help.arg.prefix%
command.prefixes.add.examples=- `%prefix%prefixes add alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.prefixes.remove.syntax=prefixes remove <prefix*>
command.prefixes.remove.description=Removes a prefix for executing commands
command.prefixes.remove.response1=Removed %prefix% as prefix
command.prefixes.remove.arguments=%help.arg.prefix%
command.prefixes.remove.examples=- `%prefix%prefixes remove alexa` Removes the prefix "alexa"


command.prefixes.removeat.syntax=prefixes removeAt <index: number*>
command.prefixes.removeat.description=Removes the prefixes at the specified index from this server
command.prefixes.removeat.removed=Removed %prefix% from the prefixes in this server
command.prefixes.removeat.arguments=%help.arg.number%, index: 0 until total amount of prefixes, index can be viewed with `%prefix%prefixes list`
command.prefixes.removeat.examples=- `%prefix%prefixes removeAt 0` Removes the prefix at index 0


command.prefixes.list.syntax=prefixes list
command.prefixes.list.description=Shows a list of prefixes
command.prefixes.list.defprefix=default prefix (will not work after you add another prefix)\n%prefix%
command.prefixes.list.response1.title=List of prefixes


command.privateprefixes.syntax=privatePrefixes <add | remove | list | removeAt>
command.privateprefixes.description=Manages user specific prefixes


command.privateprefixes.add.syntax=privatePrefixes add <prefix*>
command.privateprefixes.add.description=Adds a private prefix
command.privateprefixes.add.response1=Added %prefix% to your private prefixes
command.privateprefixes.add.limit=You've hit the **%limit%** private prefixes limit
command.privateprefixes.add.arguments=%help.arg.prefix%
command.privateprefixes.add.examples=- `%prefix%privatePrefixes add alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.privateprefixes.remove.syntax=privatePrefixes remove <prefix*>
command.privateprefixes.remove.description=Removes a private prefix
command.privateprefixes.remove.response1=Removed %prefix% from your private prefixes
command.privateprefixes.remove.arguments=%help.arg.prefix%
command.privateprefixes.remove.examples=- `%prefix%privatePrefixes remove alexa` Adds the prefix "alexa", alexa play despacito (sry for ded meme)


command.privateprefixes.removeat.syntax=privatePrefixes removeAt <index: number*>
command.privateprefixes.removeat.description=Removes the prefix at the specified index from your prefixes
command.privateprefixes.removeat.empty=You don't have any private prefixes
command.privateprefixes.removeat.removed=Removed %prefix% from your prefixes
command.privateprefixes.removeat.arguments=%help.arg.number%, index: 0 until total amount of prefixes, index can be viewed with `%prefix%privatePrefixes list`
command.privateprefixes.removeat.examples=- `%prefix%prefixes removeAt 0` Removes the prefix at index 0 from your prefixes


command.privateprefixes.list.syntax=privatePrefixes list
command.privateprefixes.list.description=Shows a list of all private prefixes
command.privateprefixes.list.response1.title=List of private prefixes


command.aliases.syntax=aliases <add | remove | removeAt | clear | clearAt | list>
command.aliases.description=Manages the server aliases for commands


command.aliases.add.syntax=aliases add <command*> <alias: string*>
command.aliases.add.description=Adds an alias for the specified command
command.aliases.add.limit.cmd=Hit the limit for this command of **%limit%** aliases
command.aliases.add.limit.total=Hit the global limit of **%limit%** aliases
command.aliases.add.added=Added the **%alias%** as alias for `%cmd%`
command.aliases.add.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.aliases.add.examples=- `%prefix%aliases add "kick" "yeet"` Now you can yeet people :)


command.aliases.remove.syntax=aliases remove <command*> <alias: string*>
command.aliases.remove.description=Removes an alias from the specified command
command.aliases.remove.removed=Removed the **%alias%** alias from `%cmd%`
command.aliases.remove.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.aliases.remove.examples=- `%prefix%aliases remove "kick" "yeet"` Now you can't yeet people :(


command.aliases.removeat.syntax=aliases removeAt <command*> <aliasIndex: number*>
command.aliases.removeat.description=Removes an alias from the specified command
command.aliases.removeat.removed=Removed the **%alias%** alias from `%cmd%`
command.aliases.removeat.arguments=%help.arg.command%\
  \n%help.arg.number%, aliasIndex: must be a valid index, Hint: use `%prefix%aliases list`
command.aliases.removeat.examples=- `%prefix%aliases remove "kick" 1` Now you can't use the first alias of kick anymore


command.aliases.clear.syntax=aliases clear <command*>
command.aliases.clear.description=Removes all aliases from the specified command
command.aliases.clear.cleared=Cleared **%amount%** aliases from `%cmd%`
command.aliases.clear.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.aliases.clear.examples=- `%prefix%aliases remove "kick" "yeet"` Now you can't yeet people :(


command.aliases.clearat.syntax=aliases clearAt <commandIndex*>
command.aliases.clearat.description=Removes all aliases from the specified command
command.aliases.clearat.removed=Cleared **%amount%** aliases from `%cmd%`
command.aliases.clearat.arguments=%help.arg.command%\
  \n%help.arg.number%, commandIndex: must be a valid index, Hint: use `%prefix%aliases list`
command.aliases.clearat.examples=- `%prefix%aliases clearAt 1` Now you can't use any of the aliases of the first command


command.aliases.list.syntax=aliases list
command.aliases.list.description=Shows you all server aliases
command.aliases.list.empty=This server doesn't have any custom aliases
command.aliases.list.title=List of aliases:



command.privatealiases.syntax=privateAliases <add | remove | removeAt | clear | clearAt | list>
command.privatealiases.description=Manages your private aliases for commands


command.privatealiases.add.syntax=privateAliases add <command*> <alias: string*>
command.privatealiases.add.description=Adds an alias for the specified command
command.privatealiases.add.limit.cmd=Hit the limit for this command of **%limit%** aliases
command.privatealiases.add.limit.total=Hit the global limit of **%limit%** aliases
command.privatealiases.add.added=Added the **%alias%** as alias for `%cmd%`
command.privatealiases.add.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.privatealiases.add.examples=- `%prefix%privateAliases add "kick" "yeet"` Now you can yeet people :)


command.privatealiases.remove.syntax=privateAliases remove <command*> <alias: string*>
command.privatealiases.remove.description=Removes an alias from the specified command
command.privatealiases.remove.removed=Removed the **%alias%** alias from `%cmd%`
command.privatealiases.remove.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.privatealiases.remove.examples=- `%prefix%privateAliases remove "kick" "yeet"` Now you can't yeet people :(


command.privatealiases.removeat.syntax=privateAliases removeAt <command*> <aliasIndex: number*>
command.privatealiases.removeat.description=Removes an alias from the specified command
command.privatealiases.removeat.removed=Removed the **%alias%** alias from `%cmd%`
command.privatealiases.removeat.arguments=%help.arg.command%\
  \n%help.arg.number%, aliasIndex: must be a valid index, Hint: use `%prefix%aliases list`
command.privatealiases.removeat.examples=- `%prefix%privateAliases remove "kick" 1` Now you can't use the first alias of kick anymore


command.privatealiases.clear.syntax=privateAliases clear <command*>
command.privatealiases.clear.description=Removes all aliases from the specified command
command.privatealiases.clear.removed=Cleared **%amount%** aliases from `%cmd%`
command.privatealiases.clear.arguments=%help.arg.command%\
  \n%help.arg.string%, alias must be between 1 and 64 characters
command.privatealiases.clear.examples=- `%prefix%privateAliases remove "kick" "yeet"` Now you can't yeet people :(


command.privatealiases.clearat.syntax=privateAliases clearAt <commandIndex*>
command.privatealiases.clearat.description=Removes all aliases from the specified command
command.privatealiases.clearat.removed=Cleared **%amount%** aliases from `%cmd%`
command.privatealiases.clearat.arguments=%help.arg.command%\
  \n%help.arg.number%, commandIndex: must be a valid index, Hint: use `%prefix%aliases list`
command.privatealiases.clearat.examples=- `%prefix%privateAliases clearAt 1` Now you can't use any of the aliases of the first command


command.privatealiases.list.syntax=privateAliases list
command.privatealiases.list.description=Shows you all your aliases
command.privatealiases.list.empty=You don't have any private aliases
command.privatealiases.list.title=List of private aliases:


command.setcooldown.description=Command for managing command cooldowns
command.setcooldown.syntax=setCooldown <global | channel | info>


command.setcooldown.global.syntax=setCooldown global <commandNode*> [milliseconds* | null]
command.setcooldown.global.description=Sets the cooldown of commands
command.setcooldown.global.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms**
command.setcooldown.global.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms**
command.setcooldown.global.arguments=%help.arg.commandnode%\
  \n%help.arg.milliseconds%
command.setcooldown.global.examples=- `%prefix%setCooldown global all 1000` Adds a 1 second cooldown for all commands\
  \n- `%prefix%setCooldown global cat 5000` Adds a 5 second cooldown for the usage of the cat command\
  \n- `%prefix%setCooldown global MUSIC 5000` Adds a 5 second cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC null` Removes the cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC 0` Removes the cooldown for all music commands\
  \n- `%prefix%setCooldown global MUSIC` Shows the cooldown for all music commands with a cooldown


command.setcooldown.channel.syntax=setCooldown channel <textChannel*> <commandNode*> [milliseconds* | null]
command.setcooldown.channel.description=Sets the cooldown of commands for specific channels, NOTE: overrides global command cooldowns
command.setcooldown.channel.response1=Set the cooldown for **%commandCount%** command matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.channel.response1.multiple=Set the cooldown for **%commandCount%** commands matching `%commandNode%` to **%cooldown%ms** in **%channel%**
command.setcooldown.channel.arguments=%help.arg.textchannel%\
  \n%help.arg.commandnode%\
  \n%help.arg.milliseconds%
command.setcooldown.channel.examples=- `%prefix%setCooldown channel #commands all 1000` Adds a 1 second cooldown for all commands in #commands\
  \n- `%prefix%setCooldown channel #commands cat 5000` Adds a 5 second cooldown for the usage of the cat command in #commands\
  \n- `%prefix%setCooldown channel #music MUSIC 5000` Adds a 5 second cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC null` Removes the cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC 0` Removes the cooldown for all music commands in #music\
  \n- `%prefix%setCooldown channel #music MUSIC` Shows the cooldown for all music commands with a cooldown in #music


command.setcooldown.info.syntax=setCooldown info [textChannel*]
command.setcooldown.info.description=Shows cooldown info of commands
command.setcooldown.info.response1.title=List of cooldowns in **%channel%**
command.setcooldown.info.response2.title=List of global cooldowns
command.setcooldown.info.arguments=%help.arg.textchannel%
command.setcooldown.info.examples=- `%prefix%setCooldown info` Shows cooldown info of all commands with cooldown\
  \n- `%prefix%setCooldown info #commands` Shows cooldown info of all commands with cooldown override in #commands


command.setcommandstate.description=Command for managing command states
command.setcommandstate.syntax=setCommandState <global | channel | info>


command.setcommandstate.global.syntax=setCommandState global <commandNode*> [commandState*]
command.setcommandstate.global.description=Sets the state of commands
command.setcommandstate.global.response1=Set **%commandCount%** command which matches `%commandNode%` to **%state%**
command.setcommandstate.global.response1.multiple=Set **%commandCount%** commands which match `%commandNode%` to **%state%**
command.setcommandstate.global.arguments=%help.arg.commandnode%\
  \n%help.arg.commandstate%
command.setcommandstate.global.examples=- `%prefix%setCommandState global all disabled` Sets the command state of all commands to diabled\
  \n- `%prefix%setCommandState global MUSIC enabled`  Sets the command state of all music commands to enabled\
  \n- `%prefix%setCommandState global MUSIC` Shows the command state of all music commands


command.setcommandstate.channel.syntax=setCommandState channel <channel*> <commandNode*> [channelCommandState* | null]
command.setcommandstate.channel.description=Sets the state of commands for specific channels, NOTE: overrides global command states
command.setcommandstate.channel.response1=Set **%commandCount%** command in **%channel%** which matches `%commandNode%` to **%state%**
command.setcommandstate.channel.response1.multiple=Set **%commandCount%** commands in **%channel%** which match `%commandNode%` to **%state%**
command.setcommandstate.channel.arguments=%help.arg.textchannel%\
  \n%help.arg.commandnode%\
  \n%help.arg.channelcommandstate%
command.setcommandstate.channel.examples=- `%prefix%setCommandState channel #commands all disabled` Sets the command state of all commands to diabled  in #commands\
  \n- `%prefix%setCommandState channel #commands cat default` Sets the command state the cat command to default in #commands \
  \n- `%prefix%setCommandState channel #music MUSIC enabled`  Sets the command state of all music commands to enabled in #music\
  \n- `%prefix%setCommandState channel #music MUSIC` Shows the command state of all music commands in #music


command.setcommandstate.info.syntax=setCommandState info [textChannel*]
command.setcommandstate.info.description=Shows state info of commands
command.setcommandstate.info.globaldisabled.response1=Disabled commands
command.setcommandstate.info.channelstate.response1=Command states in **%channel%**
command.setcommandstate.info.arguments=%help.arg.textchannel%
command.setcommandstate.info.examples=- `%prefix%setCommandState info` Shows state info of all commands with state\
  \n- `%prefix%setCommandState info #commands` Shows setCommandState info of all commands with setCommandState override in #commands


command.time.syntax=time [user* | timezone*]
command.time.description=Information about server, bot and user time
command.time.arguments=%help.arg.user%\
  \n%help.arg.timezone%
command.time.examples=- `%prefix%time` shows your timezone info\
  \n- `%prefix%time @ToxicMushroom` shows ToxicMushroom's timezone info\
  \n- `%prefix%time CET` shows central european time info\


command.raw.syntax=raw <text*>
command.raw.description=Sends you the raw text of the input
command.raw.arguments=%help.arg.text%
command.raw.examples=- `%prefix%raw hi` bot will reply with ```hi```\
  \n- `%prefix%raw :joy:` bot will reply with ```😅```\
  \n- `%prefix%raw @ToxicMushroom` bot will reply with ```<@231459866630291459>```


command.t2e.syntax=t2e <text*>
command.t2e.description=Converts text to spaced emojis
command.t2e.arguments=%help.arg.text%
command.t2e.examples=- `%prefix%t2e hi` bot will reply with ```🇭 🇮```\
  \n- `%prefix%t2e 12 and 3` bot will reply with ```1️⃣ 2️⃣  🇦 🇳 🇩  3️⃣```


command.t2e.nospace.syntax=t2e noSpace <text*>
command.t2e.nospace.description=Converts text to emojis
command.t2e.nospace.arguments=%help.arg.text%
command.t2e.nospace.examples=- `%prefix%t2e hi` bot will reply with ```🇭🇮```\
  \n- `%prefix%t2e 12 and 3` bot will reply with ```1️⃣2️⃣ 🇦🇳🇩 3️⃣```


command.ping.description=Shows network latency between bot and discord server
command.ping.syntax=ping [pong] [dunste]
command.ping.response1.part1=Gateway: %gatewayPing%ms
command.ping.response1.part2=\nRest: %restPing%ms\nSendMessage: %sendMessagePing%ms
command.ping.response1.part3=\nEditMessage: %editMessagePing%ms


command.ping.pong.response1=What are you doing in my swamp!
command.ping.pong.dunste.response1=🐓 Karlijn 🐓


command.beg.syntax=beg
command.beg.description=Beg for a small amount of mel, max once every hour
command.beg.nothing=Nobody gave you any mel, better lucky next time
command.beg.got=You received **%beg%** mel from a stranger
command.beg.oncooldown=Begging is on cooldown please wait **%duration%**
command.beg.examples=- `%prefix%beg` Receive a small amount of mel


command.rep.syntax=rep [user*]
command.rep.description=Give people reputation points
command.rep.selfrep=Sorry but you can't give yourself reputation points
command.rep.showrep=You have **%rep%** reputation points
command.rep.gaverep=You gave **%user%** an extra reputation point
command.rep.oncooldown=Giving rep is on cooldown please wait **%duration%**
command.rep.arguments=%help.arg.user%
command.rep.examples=- `%prefix%rep` Shows your reputation\
  \n- `%prefix%rep ToxicMushroom` Gives and extra reputation point to ToxicMushroom


command.balance.syntax=balance [user*]
command.balance.description=Shows a user's balance
command.balance.show.self=You have **%balance%** mel
command.balance.show.other=**%user%** has **%balance%** mel
command.balance.arguments=%help.arg.user%
command.balance.examples=- `%prefix%balance` Shows your balance\
  \n- `%prefix%balance ToxicMushroom` Show the balance of ToxicMushroom


command.flip.syntax=flip <amount: number* | all> <heads | tails>
command.flip.description=Flips a coin with chance to double the flipped amount
command.flip.bettobig=You tried to bet **%bet%** mel but you only have **%cash%** mel
command.flip.heads=heads
command.flip.tails=tails
command.flip.won=Landed on **%landed%**. Won **%amount%** mel, your new balance is **%cash%** mel
command.flip.lost=Landed on **%landed%**. Lost **%amount%** mel, your new balance is **%cash%** mel
command.flip.arguments=%help.arg.number%
command.flip.examples=- `%prefix%flip 50 heads` Flips a coin to win or lose 50 mel\
  \n- `%prefix%flip all tails` Flips a coin to win or lose all your mel


command.flipx.syntax=flipx <times: number*> <amount: number*> <heads | tails>
command.flipx.description=Flips a coin multiple times
command.flipx.bettobig=You tried to bet **%bet%** mel but you only have **%cash%** mel
command.flipx.won=Landed **%wins%x %winningSide%** and **%losses%x %losingSide%**. Won **%diff%** mel, your new balance is **%cash%** mel
command.flipx.lost=Landed **%wins%x %winningSide%** and **%losses%x %losingSide%**. Lost **%diff%** mel, your new balance is **%cash%** mel
command.flipx.even=Landed **%wins%x %winningSide%** and **%losses%x %losingSide%**. Your balance stayed the same
command.flipx.arguments=%help.arg.number%
command.flipx.examples=- `%prefix%flip 10 50 heads` Flips a coin 10 times 50 mel (bet is 500 mel)


command.daily.syntax=daily
command.daily.description=Gives 100 mel
command.daily.oncooldown=Daily is on cooldown please wait **%duration%**
command.daily.got=You received your daily **%daily%** mel, your new balance is **%cash%**


command.pay.syntax=pay <user*> <amount: number* | all>
command.pay.description=You can pay other users money
command.pay.paytobig=You tried to pay **%amount%** mel but you only have **%cash%** mel
command.pay.payed=You gave %user% **%amount%** mel. You have **%balance%** mel left
command.pay.payself=You can't give yourself money
command.pay.arguments=%help.arg.user%\
  \n%help.arg.number%
command.pay.examples=- `%prefix%pay @ToxicMushroom 50` Gives ToxicMushroom 50 mel from your balance\
  \n- `%prefix%pay @ToxicMushroom all` Gives ToxicMushroom all your mel


word.spinning=spinning
word.won=won
word.lost=lost


command.rockpaperscissors.syntax=rockPaperScissors <member*> [bet: number*]
command.rockpaperscissors.description=Play RockPaperScissors against other users for fun or for mel
command.rockpaperscissors.user1.notenoughbalance=You don't have enough mel for this bet. You only have **%bal%** mel
command.rockpaperscissors.user2.notenoughbalance=%user2% doesn't have enough mel for this bet. They only have **%bal%** mel
command.rockpaperscissors.challenged=%user2%, your have been challenged for rock paper scissors! Type `yes` to accept.
command.rockpaperscissors.dmmenu.title=RockPaperScissors
command.rockpaperscissors.dmmenu.description=Click the move you want to make or respond with `rock`, `paper` or `scissors`
command.rockpaperscissors.started.bet=Your game has begun, winner gets **%bet%** mel.\
  \nClick the reaction on the menu in your dms or respond with rock, paper or scissors to beat your opponent.
command.rockpaperscissors.started=Your game has begun.\
  \nClick the reaction on the menu in your dms or respond with rock, paper or scissors to beat your opponent.
command.rockpaperscissors.request.denied=%user1% your request for Rock Paper Scissors with %user2% has been denied.
command.rockpaperscissors.request.expired=%user1%, your request for Rock Paper Scissors with %user2% has timed out.
command.rockpaperscissors.user1.ingame=You are already in a game!
command.rockpaperscissors.user2.ingame=%user% is already in a game!


message.rps.user.tie=You tied with **%user%** and got your **%bet%** mel back
message.rps.user.won=You won against **%user%** and gained **%bet%** mel
message.rps.user.lost=You lost against **%user%** and lost **%bet%** mel :(



command.tictactoe.syntax=ticTacToe <user*> [bet: number*]
command.tictactoe.description=Play tic-tac-toe against other users for fun or for mel
command.tictactoe.user1.notenoughbalance=You don't have enough mel for this bet. You only have **%bal%** mel
command.tictactoe.user2.notenoughbalance=%user2% doesn't have enough mel for this bet. They only have **%bal%** mel
command.tictactoe.challenged=%user2%, your have been challenged for tic tac toe! Type `yes` to accept.
command.tictactoe.dmmenu.description=Respond with `x,y` to place a marker at that location\
  \n%gameField%
command.tictactoe.started.bet=Your game has begun, winner gets **%bet%** mel.\
  \nFollow the instructions in your dms to beat your opponent.
command.tictactoe.started=Your game has begun.\
  \nFollow the instructions in your dms to beat your opponent.
command.tictactoe.request.denied=%user1% your request for Tic Tac Toe with %user2% has been denied.
command.tictactoe.request.expired=%user1%, your request for Tic Tac Toe with %user2% has timed out.
command.tictactoe.user1.ingame=You are already in a game!
command.tictactoe.user2.ingame=%user% is already in a game!
command.tictactoe.arguments=%help.arg.user%\
  \n%help.arg.number%
command.tictactoe.example=- `%prefix%ticTacToe @ToxicMushroom 100` Asks toxicmushroom if he wants to play tictactoe for 100 mel


command.slots.syntax=slots <bet: number*>
command.slots.description=turn the handle on the slot machine to win amazing prices
command.slots.profit=**Profit:** %profit%
command.slots.newbalance=**New balance:** %bal%
command.slots.loss=**Loss:** %loss%
command.slots.arguments=%help.arg.number%


command.poker.syntax=poker <bet: number*>
command.poker.description=draw 5 cards, lock the ones you wanna keep and draw again to see your result
command.poker.mel=Mel
command.poker.newbalance=You have **%amount%** mel
command.poker.won=You won **%amount%** mel
command.poker.losttitle=You Lost
command.poker.helpfooter=You have 2 minutes to lock and draw, else the draw will be made for you
command.poker.actionsvalue=**%prefix%draw** to see if you won\
  \n**Lock** use the reactions to lock your cards
command.poker.finalhandtitle=Final Hand
command.poker.title1=Your hand | %user%
command.poker.actions=Actions
command.poker.lost=You lost **%amount%** mel


command.leaderboard.syntax=leaderBoard [page: number*]
command.leaderboard.description=Shows the requested users with their money
command.leaderboard.empty=There are no users on page **%page%**
command.leaderboard.arguments=%help.arg.number%


command.topvoters.syntax=topVoters [page: number*]
command.topvoters.description=Shows the requested users with their votes
command.topvoters.empty=There are no users on this page
command.topvoters.arguments=%help.arg.number%


command.setlanguage.syntax=setLanguage [list | language* | null]
command.setlanguage.description=Main command to configure my language for the server, NOTE: can be overriden by private language
command.setlanguage.show.set=The language is currently set to **%language%**
command.setlanguage.show.unset=The language is currently set to none
command.setlanguage.set=The language has successfully been set to **%language%**
command.setlanguage.unset=The language has successfully been unset
command.setlanguage.arguments=%help.arg.language%
command.setlanguage.examples=- `%prefix%setLanguage NL` The bot will now reply with dutch translations\
  \n- `%prefix%setLanguage null` The bot will now reply with english


command.setlanguage.list.syntax=setLanguage list
command.setlanguage.list.description=Shows a list of supported languages\nYou can help translate the bot here: %url%
command.setlanguage.list.title=List of supported languages


command.setprivatelanguage.syntax=setPrivateLanguage [list | language* | null]
command.setprivatelanguage.description=Command to manage private languages
command.setprivatelanguage.show.unset=Your private language is unset
command.setprivatelanguage.show.set=Your private language is set to **%language%**
command.setprivatelanguage.set=Your private language been set to **%language%**
command.setprivatelanguage.unset=Your private language has been unset
command.setprivatelanguage.arguments=%help.arg.language%
command.setprivatelanguage.examples=- `%prefix%setPrivateLanguage NL` The bot will now reply with dutch translations for you\
  \n- `%prefix%setPrivateLanguage null` The bot will now reply with english for you


command.joinmessage.syntax=joinMessage <setContent | embed | attachments | view | setPingable>
command.joinmessage.description=Manages the JoinMessage
command.joinmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.joinmessage.setcontent.syntax=joinMessage setContent [text* | null]
command.joinmessage.setcontent.description=Sets the text content of the JoinMessage
command.joinmessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.joinmessage.setcontent.examples=- `%prefix%joinmessage setContent null` Unsets the join message's content\
  \n- `%prefix%joinmessage setContent welcome {user}` Sets the join message's content to "welcome {user}"


command.joinmessage.embed.syntax=joinMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.joinmessage.embed.description=Sets the embed content of the JoinMessage


command.joinmessage.embed.clear.syntax=joinMessage embed clear
command.joinmessage.embed.clear.description=Clears the embed content of the JoinMessage


command.joinmessage.embed.setdescription.syntax=joinMessage embed setDescription [text* | null]
command.joinmessage.embed.setdescription.description=Sets the embed description of the JoinMessage
command.joinmessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.joinmessage.embed.setdescription.examples=- `%prefix%joinMessage embed setDescription null` Unsets the join message's embed description\
  \n- `%prefix%joinMessage embed setDescription welcome {user}` Sets the join message's embed description to "welcome {user}"


command.joinmessage.embed.setcolor.syntax=joinMessage embed setColor [color* | null]
command.joinmessage.embed.setcolor.description=Sets the embed color of the JoinMessage
command.joinmessage.embed.setcolor.arguments=%help.arg.color%
command.joinmessage.embed.setcolor.examples=- `%prefix%joinMessage embed setColor #FFFFFF` Sets the join message's embed color to white\
  \n- `%prefix%joinMessage embed setColor null` Unsets the join message's embed color


command.joinmessage.embed.settitle.syntax=joinMessage embed setTitle [text* | null]
command.joinmessage.embed.settitle.description=Sets the embed title of the JoinMessage
command.joinmessage.embed.settitle.arguments=%help.arg.text%
command.joinmessage.embed.settitle.examples=- `%prefix%joinMessage embed setTitle welcome {user}` Sets the join message's embed title to "welcome {user}"\
  \n- `%prefix%joinMessage embed setTitle null` Unsets the join message's embed title


command.joinmessage.embed.settitleurl.syntax=joinMessage embed setTitleUrl [url* | null]
command.joinmessage.embed.settitleurl.description=Sets the embed title url of the JoinMessage
command.joinmessage.embed.settitleurl.arguments=%help.arg.url%
command.joinmessage.embed.settitleurl.examples=- `%prefix%joinMessage embed setTitleUrl https://melijn.com` Sets the join message's embed title url to "https://melijn.com"\
  \n- `%prefix%joinMessage embed setTitleUrl null` Unsets the join message's embed title url


command.joinmessage.embed.setauthor.syntax=joinMessage embed setAuthor [embedAuthor* | null]
command.joinmessage.embed.setauthor.description=Sets the embed author of the JoinMessage
command.joinmessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.joinmessage.embed.setauthor.examples=- `%prefix%joinMessage embed setAuthor` Shows the join message's embed author\
  \n- `%prefix%joinMessage embed setAuthor {username}` Sets the join message's embed author to "{username}"\
  \n- `%prefix%joinMessage embed setAuthor null` Unsets the join message's embed author


command.joinmessage.embed.setauthoricon.syntax=joinMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.joinmessage.embed.setauthoricon.description=Sets the embed author icon of the JoinMessage
command.joinmessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.joinmessage.embed.setauthoricon.examples=- `%prefix%joinMessage embed setAuthorIcon` Shows the join message's embed author\
  \n- `%prefix%joinMessage embed setAuthorIcon ~attachment~` Sets the join message's embed author icon to the attachment\
  \n- `%prefix%joinMessage embed setAuthorIcon @user` Sets the join message's embed author icon to @user's avatar\
  \n- `%prefix%joinMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setAuthorIcon null` Unsets the join message's embed author


command.joinmessage.embed.setauthorurl.syntax=joinMessage embed setAuthorUrl [url* | null]
command.joinmessage.embed.setauthorurl.description=Sets the embed author url of the JoinMessage
command.joinmessage.embed.setauthorurl.arguments=%help.arg.url%
command.joinmessage.embed.setauthorurl.examples=- `%prefix%joinMessage embed setAuthorUrl` Shows the join message's embed author url\
  \n- `%prefix%joinMessage embed setAuthorUrl https://google.com/` Sets the join message's embed author url to "https://google.com/"\
  \n- `%prefix%joinMessage embed setAuthorUrl null` Unsets the join message's embed author


command.joinmessage.embed.setthumbnail.syntax=joinMessage embed setThumbnail [url* | attachment | user* | null]
command.joinmessage.embed.setthumbnail.description=Sets the embed thumbnail of the JoinMessage
command.joinmessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.joinmessage.embed.setthumbnail.examples=- `%prefix%joinMessage embed setThumbnail` Shows the join message's embed thumbnail\
  \n- `%prefix%joinMessage embed setThumbnail ~attachment~` Sets the join message's embed thumbnail to the attachment\
  \n- `%prefix%joinMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%joinMessage embed setThumbnail null` Unsets the join message's embed thumbnail


command.joinmessage.embed.setimage.syntax=joinMessage embed setImage [url*]
command.joinmessage.embed.setimage.description=Sets the embed image of the JoinMessage
command.joinmessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.joinmessage.embed.setimage.examples=- `%prefix%joinMessage embed setImage` Shows the join message's embed image\
  \n- `%prefix%joinMessage embed setImage ~attachment~` Sets the join message's embed image to the attachment\
  \n- `%prefix%joinMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setImage @user` Sets the join message's embed image to @user's avatar\
  \n- `%prefix%joinMessage embed setImage null` Unsets the join message's embed image


command.joinmessage.embed.setfooter.syntax=joinMessage embed setFooter [text*]
command.joinmessage.embed.setfooter.description=Sets the embed footer of the JoinMessage
command.joinmessage.embed.setfooter.arguments=%help.arg.text%
command.joinmessage.embed.setfooter.examples=- `%prefix%joinMessage embed setFooter` Shows the join message's embed footer\
  \n- `%prefix%joinMessage embed setFooter epic text` Sets the join message's embed footer to "epic text"\
  \n- `%prefix%joinMessage embed setFooter null` Unsets the join message's embed image


command.joinmessage.embed.setfootericon.syntax=joinMessage embed setFooterIcon [url* | attachment* | user* | null]
command.joinmessage.embed.setfootericon.description=Sets the embed footer icon of the JoinMessage
command.joinmessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.joinmessage.embed.setfootericon.examples=- `%prefix%joinMessage embed setFooterIcon` Shows the join message's embed footer icon\
  \n- `%prefix%joinMessage embed setFooterIcon ~attachment~` Sets the join message's embed footer icon to the attachment\
  \n- `%prefix%joinMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the join message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%joinMessage embed setFooterIcon @user` Sets the join message's embed footer icon to @user's avatar\
  \n- `%prefix%joinMessage embed setFooterIcon null` Unsets the join message's embed footer icon


command.joinmessage.response.embed.settimestamp.syntax=joinMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.joinmessage.response.embed.settimestamp.description=Sets the embed timestamp of the JoinMessage
command.joinmessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.joinmessage.response.embed.settimestamp.examples=- `%prefix%joinMessage response embed setTimestamp` Shows the join message's embed timestamp\
  \n- `%prefix%joinMessage response embed setTimestamp current` Sets the join message's embed timestamp to the current time\
  \n- `%prefix%joinMessage response embed setTimestamp current true` Sets the join message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%joinMessage response embed setTimestamp 2020-05-21 12:00` Sets the join message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%joinMessage response embed setTimestamp null` Unsets the join message's embed timestamp


command.joinmessage.embed.field.syntax=joinMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.joinmessage.embed.field.description=Manages the embed fields of the JoinMessage


command.joinmessage.embed.field.add.syntax=joinMessage embed field add <fieldTitle*> > <fieldValue*>
command.joinmessage.embed.field.add.description=Adds an embed field to the JoinMessage
command.joinmessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.joinmessage.embed.field.add.examples=- `%prefix%joinMessage embed field add user > ToxicMushroom` Adds a field entry to the join message's embed with "user" as title and "ToxicMushroom as value


command.joinmessage.embed.field.remove.syntax=joinMessage embed field remove <fieldIndex*>
command.joinmessage.embed.field.remove.description=Removes an embed field of the JoinMessage
command.joinmessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`
command.joinmessage.embed.field.remove.examples=- `%prefix%joinMessage embed field remove 1` Removes the join message's embed field with index 1



command.joinmessage.embed.field.list.syntax=joinMessage embed field list
command.joinmessage.embed.field.list.description=Lists the embed fields of the JoinMessage


command.joinmessage.embed.field.settitle.syntax=joinMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.joinmessage.embed.field.settitle.description=Sets the embed field title of the JoinMessage
command.joinmessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`\
  \n%help.arg.fieldtitle%
command.joinmessage.embed.field.settitle.examples=- `%prefix%joinMessage embed field setTitle 1 User` Sets the join message's embed field title with index 1 to "User"



command.joinmessage.embed.field.setvalue.syntax=joinMessage embed field setValue <fieldIndex*> <fieldValue*>
command.joinmessage.embed.field.setvalue.description=Sets the embed field value of the JoinMessage
command.joinmessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.joinmessage.embed.field.setvalue.examples=- `%prefix%joinMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.joinmessage.embed.field.setinline.syntax=joinMessage embed field setInline <fieldIndex> <state>
command.joinmessage.embed.field.setinline.description=Sets the embed field inline state of the JoinMessage
command.joinmessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%joinMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.joinmessage.embed.field.setinline.examples=- `%prefix%joinMessage embed field setInline 1 true` Sets the selected join message's embed field at index 1 to be inlined\
  \n- `%prefix%joinMessage embed field setInline 1 false` Sets the selected join message's embed field at index 1\nnot\nto\nbe inlined



command.joinmessage.attachments.syntax=joinMessage attachments <add | remove | list>
command.joinmessage.attachments.description=Manages the attachments of the JoinMessage


command.joinmessage.attachments.add.syntax=joinMessage attachments add <url*> <fileName*>
command.joinmessage.attachments.add.description=Adds attachments to the JoinMessage
command.joinmessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.joinmessage.attachments.add.examples=- `%prefix%joinMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the join message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.joinmessage.attachments.remove.syntax=joinMessage attachments remove <url*>
command.joinmessage.attachments.remove.description=Removes attachments from the JoinMessage
command.joinmessage.attachments.remove.arguments=%help.arg.url%
command.joinmessage.attachments.remove.examples=- `%prefix%joinMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the join message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.joinmessage.attachments.list.syntax=joinMessage attachments list
command.joinmessage.attachments.list.description=Lists the attachments from the JoinMessage


command.joinmessage.view.syntax=joinMessage view
command.joinmessage.view.description=Shows a preview of the join message


command.joinmessage.setpingable.syntax=joinMessage setPingable [boolean*]
command.joinmessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.joinmessage.setpingable.arguments=%help.arg.boolean%
command.joinmessage.setpingable.examples=- `%prefix%joinMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%joinMessage setPingable true` Sets the join message to ping when mentions are present.


command.bannedmessage.syntax=bannedMessage <setContent | embed | attachments | view | setPingable>
command.bannedmessage.description=Manages the BannedMessage
command.bannedmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.bannedmessage.setcontent.syntax=bannedMessage setContent [text* | null]
command.bannedmessage.setcontent.description=Sets the text content of the BannedMessage
command.bannedmessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.bannedmessage.setcontent.examples=- `%prefix%bannedmessage setContent null` Unsets the banned message's content\
  \n- `%prefix%bannedmessage setContent welcome {user}` Sets the banned message's content to "welcome {user}"


command.bannedmessage.embed.syntax=bannedMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.bannedmessage.embed.description=Sets the embed content of the BannedMessage


command.bannedmessage.embed.clear.syntax=bannedMessage embed clear
command.bannedmessage.embed.clear.description=Clears the embed content of the BannedMessage


command.bannedmessage.embed.setdescription.syntax=bannedMessage embed setDescription [text* | null]
command.bannedmessage.embed.setdescription.description=Sets the embed description of the BannedMessage
command.bannedmessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.bannedmessage.embed.setdescription.examples=- `%prefix%bannedMessage embed setDescription null` Unsets the banned message's embed description\
  \n- `%prefix%bannedMessage embed setDescription welcome {user}` Sets the banned message's embed description to "welcome {user}"


command.bannedmessage.embed.setcolor.syntax=bannedMessage embed setColor [color* | null]
command.bannedmessage.embed.setcolor.description=Sets the embed color of the BannedMessage
command.bannedmessage.embed.setcolor.arguments=%help.arg.color%
command.bannedmessage.embed.setcolor.examples=- `%prefix%bannedMessage embed setColor #FFFFFF` Sets the banned message's embed color to white\
  \n- `%prefix%bannedMessage embed setColor null` Unsets the banned message's embed color


command.bannedmessage.embed.settitle.syntax=bannedMessage embed setTitle [text* | null]
command.bannedmessage.embed.settitle.description=Sets the embed title of the BannedMessage
command.bannedmessage.embed.settitle.arguments=%help.arg.text%
command.bannedmessage.embed.settitle.examples=- `%prefix%bannedMessage embed setTitle welcome {user}` Sets the banned message's embed title to "welcome {user}"\
  \n- `%prefix%bannedMessage embed setTitle null` Unsets the banned message's embed title


command.bannedmessage.embed.settitleurl.syntax=bannedMessage embed setTitleUrl [url* | null]
command.bannedmessage.embed.settitleurl.description=Sets the embed title url of the BannedMessage
command.bannedmessage.embed.settitleurl.arguments=%help.arg.url%
command.bannedmessage.embed.settitleurl.examples=- `%prefix%bannedMessage embed setTitleUrl https://melijn.com` Sets the banned message's embed title url to "https://melijn.com"\
  \n- `%prefix%bannedMessage embed setTitleUrl null` Unsets the banned message's embed title url


command.bannedmessage.embed.setauthor.syntax=bannedMessage embed setAuthor [embedAuthor* | null]
command.bannedmessage.embed.setauthor.description=Sets the embed author of the BannedMessage
command.bannedmessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.bannedmessage.embed.setauthor.examples=- `%prefix%bannedMessage embed setAuthor` Shows the banned message's embed author\
  \n- `%prefix%bannedMessage embed setAuthor {username}` Sets the banned message's embed author to "{username}"\
  \n- `%prefix%bannedMessage embed setAuthor null` Unsets the banned message's embed author


command.bannedmessage.embed.setauthoricon.syntax=bannedMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.bannedmessage.embed.setauthoricon.description=Sets the embed author icon of the BannedMessage
command.bannedmessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.bannedmessage.embed.setauthoricon.examples=- `%prefix%bannedMessage embed setAuthorIcon` Shows the banned message's embed author\
  \n- `%prefix%bannedMessage embed setAuthorIcon ~attachment~` Sets the banned message's embed author icon to the attachment\
  \n- `%prefix%bannedMessage embed setAuthorIcon @user` Sets the banned message's embed author icon to @user's avatar\
  \n- `%prefix%bannedMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the banned message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%bannedMessage embed setAuthorIcon null` Unsets the banned message's embed author


command.bannedmessage.embed.setauthorurl.syntax=bannedMessage embed setAuthorUrl [url* | null]
command.bannedmessage.embed.setauthorurl.description=Sets the embed author url of the BannedMessage
command.bannedmessage.embed.setauthorurl.arguments=%help.arg.url%
command.bannedmessage.embed.setauthorurl.examples=- `%prefix%bannedMessage embed setAuthorUrl` Shows the banned message's embed author url\
  \n- `%prefix%bannedMessage embed setAuthorUrl https://google.com/` Sets the banned message's embed author url to "https://google.com/"\
  \n- `%prefix%bannedMessage embed setAuthorUrl null` Unsets the banned message's embed author


command.bannedmessage.embed.setthumbnail.syntax=bannedMessage embed setThumbnail [url* | attachment | user* | null]
command.bannedmessage.embed.setthumbnail.description=Sets the embed thumbnail of the BannedMessage
command.bannedmessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.bannedmessage.embed.setthumbnail.examples=- `%prefix%bannedMessage embed setThumbnail` Shows the banned message's embed thumbnail\
  \n- `%prefix%bannedMessage embed setThumbnail ~attachment~` Sets the banned message's embed thumbnail to the attachment\
  \n- `%prefix%bannedMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the banned message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%bannedMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%bannedMessage embed setThumbnail null` Unsets the banned message's embed thumbnail


command.bannedmessage.embed.setimage.syntax=bannedMessage embed setImage [url*]
command.bannedmessage.embed.setimage.description=Sets the embed image of the BannedMessage
command.bannedmessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.bannedmessage.embed.setimage.examples=- `%prefix%bannedMessage embed setImage` Shows the banned message's embed image\
  \n- `%prefix%bannedMessage embed setImage ~attachment~` Sets the banned message's embed image to the attachment\
  \n- `%prefix%bannedMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the banned message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%bannedMessage embed setImage @user` Sets the banned message's embed image to @user's avatar\
  \n- `%prefix%bannedMessage embed setImage null` Unsets the banned message's embed image


command.bannedmessage.embed.setfooter.syntax=bannedMessage embed setFooter [text*]
command.bannedmessage.embed.setfooter.description=Sets the embed footer of the BannedMessage
command.bannedmessage.embed.setfooter.arguments=%help.arg.text%
command.bannedmessage.embed.setfooter.examples=- `%prefix%bannedMessage embed setFooter` Shows the banned message's embed footer\
  \n- `%prefix%bannedMessage embed setFooter epic text` Sets the banned message's embed footer to "epic text"\
  \n- `%prefix%bannedMessage embed setFooter null` Unsets the banned message's embed image


command.bannedmessage.embed.setfootericon.syntax=bannedMessage embed setFooterIcon [url* | attachment* | user* | null]
command.bannedmessage.embed.setfootericon.description=Sets the embed footer icon of the BannedMessage
command.bannedmessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.bannedmessage.embed.setfootericon.examples=- `%prefix%bannedMessage embed setFooterIcon` Shows the banned message's embed footer icon\
  \n- `%prefix%bannedMessage embed setFooterIcon ~attachment~` Sets the banned message's embed footer icon to the attachment\
  \n- `%prefix%bannedMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the banned message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%bannedMessage embed setFooterIcon @user` Sets the banned message's embed footer icon to @user's avatar\
  \n- `%prefix%bannedMessage embed setFooterIcon null` Unsets the banned message's embed footer icon


command.bannedmessage.response.embed.settimestamp.syntax=bannedMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.bannedmessage.response.embed.settimestamp.description=Sets the embed timestamp of the BannedMessage
command.bannedmessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.bannedmessage.response.embed.settimestamp.examples=- `%prefix%bannedMessage response embed setTimestamp` Shows the banned message's embed timestamp\
  \n- `%prefix%bannedMessage response embed setTimestamp current` Sets the banned message's embed timestamp to the current time\
  \n- `%prefix%bannedMessage response embed setTimestamp current true` Sets the banned message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%bannedMessage response embed setTimestamp 2020-05-21 12:00` Sets the banned message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%bannedMessage response embed setTimestamp null` Unsets the banned message's embed timestamp


command.bannedmessage.embed.field.syntax=bannedMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.bannedmessage.embed.field.description=Manages the embed fields of the BannedMessage


command.bannedmessage.embed.field.add.syntax=bannedMessage embed field add <fieldTitle*> > <fieldValue*>
command.bannedmessage.embed.field.add.description=Adds an embed field to the BannedMessage
command.bannedmessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.bannedmessage.embed.field.add.examples=- `%prefix%bannedMessage embed field add user > ToxicMushroom` Adds a field entry to the banned message's embed with "user" as title and "ToxicMushroom as value


command.bannedmessage.embed.field.remove.syntax=bannedMessage embed field remove <fieldIndex*>
command.bannedmessage.embed.field.remove.description=Removes an embed field of the BannedMessage
command.bannedmessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%bannedMessage embed field list`
command.bannedmessage.embed.field.remove.examples=- `%prefix%bannedMessage embed field remove 1` Removes the banned message's embed field with index 1


command.bannedmessage.embed.field.list.syntax=bannedMessage embed field list
command.bannedmessage.embed.field.list.description=Lists the embed fields of the BannedMessage


command.bannedmessage.embed.field.settitle.syntax=bannedMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.bannedmessage.embed.field.settitle.description=Sets the embed field title of the BannedMessage
command.bannedmessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%bannedMessage embed field list`\
  \n%help.arg.fieldtitle%
command.bannedmessage.embed.field.settitle.examples=- `%prefix%bannedMessage embed field setTitle 1 User` Sets the banned message's embed field title with index 1 to "User"



command.bannedmessage.embed.field.setvalue.syntax=bannedMessage embed field setValue <fieldIndex*> <fieldValue*>
command.bannedmessage.embed.field.setvalue.description=Sets the embed field value of the BannedMessage
command.bannedmessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%bannedMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.bannedmessage.embed.field.setvalue.examples=- `%prefix%bannedMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"


command.bannedmessage.embed.field.setinline.syntax=bannedMessage embed field setInline <fieldIndex> <state>
command.bannedmessage.embed.field.setinline.description=Sets the embed field inline state of the BannedMessage
command.bannedmessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%bannedMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.bannedmessage.embed.field.setinline.examples=- `%prefix%bannedMessage embed field setInline 1 true` Sets the selected banned message's embed field at index 1 to be inlined\
  \n- `%prefix%bannedMessage embed field setInline 1 false` Sets the selected banned message's embed field at index 1\nnot\nto\nbe inlined


command.bannedmessage.attachments.syntax=bannedMessage attachments <add | remove | list>
command.bannedmessage.attachments.description=Manages the attachments of the BannedMessage


command.bannedmessage.attachments.add.syntax=bannedMessage attachments add <url*> <fileName*>
command.bannedmessage.attachments.add.description=Adds attachments to the BannedMessage
command.bannedmessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.bannedmessage.attachments.add.examples=- `%prefix%bannedMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the banned message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.bannedmessage.attachments.remove.syntax=bannedMessage attachments remove <url*>
command.bannedmessage.attachments.remove.description=Removes attachments from the BannedMessage
command.bannedmessage.attachments.remove.arguments=%help.arg.url%
command.bannedmessage.attachments.remove.examples=- `%prefix%bannedMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the banned message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.bannedmessage.attachments.list.syntax=bannedMessage attachments list
command.bannedmessage.attachments.list.description=Lists the attachments from the BannedMessage


command.bannedmessage.view.syntax=bannedMessage view
command.bannedmessage.view.description=Shows a preview of the banned message


command.bannedmessage.setpingable.syntax=bannedMessage setPingable [boolean*]
command.bannedmessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.bannedmessage.setpingable.arguments=%help.arg.boolean%
command.bannedmessage.setpingable.examples=- `%prefix%bannedMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%bannedMessage setPingable true` Sets the banned message to ping when mentions are present.


command.kickedmessage.syntax=kickedMessage <setContent | embed | attachments | view | setPingable>
command.kickedmessage.description=Manages the KickedMessage
command.kickedmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.kickedmessage.setcontent.syntax=kickedMessage setContent [text* | null]
command.kickedmessage.setcontent.description=Sets the text content of the KickedMessage
command.kickedmessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.kickedmessage.setcontent.examples=- `%prefix%kickedmessage setContent null` Unsets the kicked message's content\
  \n- `%prefix%kickedmessage setContent welcome {user}` Sets the kicked message's content to "welcome {user}"


command.kickedmessage.embed.syntax=kickedMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.kickedmessage.embed.description=Sets the embed content of the KickedMessage


command.kickedmessage.embed.clear.syntax=kickedMessage embed clear
command.kickedmessage.embed.clear.description=Clears the embed content of the KickedMessage


command.kickedmessage.embed.setdescription.syntax=kickedMessage embed setDescription [text* | null]
command.kickedmessage.embed.setdescription.description=Sets the embed description of the KickedMessage
command.kickedmessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.kickedmessage.embed.setdescription.examples=- `%prefix%kickedMessage embed setDescription null` Unsets the kicked message's embed description\
  \n- `%prefix%kickedMessage embed setDescription welcome {user}` Sets the kicked message's embed description to "welcome {user}"


command.kickedmessage.embed.setcolor.syntax=kickedMessage embed setColor [color* | null]
command.kickedmessage.embed.setcolor.description=Sets the embed color of the KickedMessage
command.kickedmessage.embed.setcolor.arguments=%help.arg.color%
command.kickedmessage.embed.setcolor.examples=- `%prefix%kickedMessage embed setColor #FFFFFF` Sets the kicked message's embed color to white\
  \n- `%prefix%kickedMessage embed setColor null` Unsets the kicked message's embed color


command.kickedmessage.embed.settitle.syntax=kickedMessage embed setTitle [text* | null]
command.kickedmessage.embed.settitle.description=Sets the embed title of the KickedMessage
command.kickedmessage.embed.settitle.arguments=%help.arg.text%
command.kickedmessage.embed.settitle.examples=- `%prefix%kickedMessage embed setTitle welcome {user}` Sets the kicked message's embed title to "welcome {user}"\
  \n- `%prefix%kickedMessage embed setTitle null` Unsets the kicked message's embed title


command.kickedmessage.embed.settitleurl.syntax=kickedMessage embed setTitleUrl [url* | null]
command.kickedmessage.embed.settitleurl.description=Sets the embed title url of the KickedMessage
command.kickedmessage.embed.settitleurl.arguments=%help.arg.url%
command.kickedmessage.embed.settitleurl.examples=- `%prefix%kickedMessage embed setTitleUrl https://melijn.com` Sets the kicked message's embed title url to "https://melijn.com"\
  \n- `%prefix%kickedMessage embed setTitleUrl null` Unsets the kicked message's embed title url


command.kickedmessage.embed.setauthor.syntax=kickedMessage embed setAuthor [embedAuthor* | null]
command.kickedmessage.embed.setauthor.description=Sets the embed author of the KickedMessage
command.kickedmessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.kickedmessage.embed.setauthor.examples=- `%prefix%kickedMessage embed setAuthor` Shows the kicked message's embed author\
  \n- `%prefix%kickedMessage embed setAuthor {username}` Sets the kicked message's embed author to "{username}"\
  \n- `%prefix%kickedMessage embed setAuthor null` Unsets the kicked message's embed author


command.kickedmessage.embed.setauthoricon.syntax=kickedMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.kickedmessage.embed.setauthoricon.description=Sets the embed author icon of the KickedMessage
command.kickedmessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.kickedmessage.embed.setauthoricon.examples=- `%prefix%kickedMessage embed setAuthorIcon` Shows the kicked message's embed author\
  \n- `%prefix%kickedMessage embed setAuthorIcon ~attachment~` Sets the kicked message's embed author icon to the attachment\
  \n- `%prefix%kickedMessage embed setAuthorIcon @user` Sets the kicked message's embed author icon to @user's avatar\
  \n- `%prefix%kickedMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the kicked message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%kickedMessage embed setAuthorIcon null` Unsets the kicked message's embed author


command.kickedmessage.embed.setauthorurl.syntax=kickedMessage embed setAuthorUrl [url* | null]
command.kickedmessage.embed.setauthorurl.description=Sets the embed author url of the KickedMessage
command.kickedmessage.embed.setauthorurl.arguments=%help.arg.url%
command.kickedmessage.embed.setauthorurl.examples=- `%prefix%kickedMessage embed setAuthorUrl` Shows the kicked message's embed author url\
  \n- `%prefix%kickedMessage embed setAuthorUrl https://google.com/` Sets the kicked message's embed author url to "https://google.com/"\
  \n- `%prefix%kickedMessage embed setAuthorUrl null` Unsets the kicked message's embed author


command.kickedmessage.embed.setthumbnail.syntax=kickedMessage embed setThumbnail [url* | attachment | user* | null]
command.kickedmessage.embed.setthumbnail.description=Sets the embed thumbnail of the KickedMessage
command.kickedmessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.kickedmessage.embed.setthumbnail.examples=- `%prefix%kickedMessage embed setThumbnail` Shows the kicked message's embed thumbnail\
  \n- `%prefix%kickedMessage embed setThumbnail ~attachment~` Sets the kicked message's embed thumbnail to the attachment\
  \n- `%prefix%kickedMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the kicked message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%kickedMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%kickedMessage embed setThumbnail null` Unsets the kicked message's embed thumbnail


command.kickedmessage.embed.setimage.syntax=kickedMessage embed setImage [url*]
command.kickedmessage.embed.setimage.description=Sets the embed image of the KickedMessage
command.kickedmessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.kickedmessage.embed.setimage.examples=- `%prefix%kickedMessage embed setImage` Shows the kicked message's embed image\
  \n- `%prefix%kickedMessage embed setImage ~attachment~` Sets the kicked message's embed image to the attachment\
  \n- `%prefix%kickedMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the kicked message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%kickedMessage embed setImage @user` Sets the kicked message's embed image to @user's avatar\
  \n- `%prefix%kickedMessage embed setImage null` Unsets the kicked message's embed image


command.kickedmessage.embed.setfooter.syntax=kickedMessage embed setFooter [text*]
command.kickedmessage.embed.setfooter.description=Sets the embed footer of the KickedMessage
command.kickedmessage.embed.setfooter.arguments=%help.arg.text%
command.kickedmessage.embed.setfooter.examples=- `%prefix%kickedMessage embed setFooter` Shows the kicked message's embed footer\
  \n- `%prefix%kickedMessage embed setFooter epic text` Sets the kicked message's embed footer to "epic text"\
  \n- `%prefix%kickedMessage embed setFooter null` Unsets the kicked message's embed image


command.kickedmessage.embed.setfootericon.syntax=kickedMessage embed setFooterIcon [url* | attachment* | user* | null]
command.kickedmessage.embed.setfootericon.description=Sets the embed footer icon of the KickedMessage
command.kickedmessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.kickedmessage.embed.setfootericon.examples=- `%prefix%kickedMessage embed setFooterIcon` Shows the kicked message's embed footer icon\
  \n- `%prefix%kickedMessage embed setFooterIcon ~attachment~` Sets the kicked message's embed footer icon to the attachment\
  \n- `%prefix%kickedMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the kicked message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%kickedMessage embed setFooterIcon @user` Sets the kicked message's embed footer icon to @user's avatar\
  \n- `%prefix%kickedMessage embed setFooterIcon null` Unsets the kicked message's embed footer icon


command.kickedmessage.response.embed.settimestamp.syntax=kickedMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.kickedmessage.response.embed.settimestamp.description=Sets the embed timestamp of the KickedMessage
command.kickedmessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.kickedmessage.response.embed.settimestamp.examples=- `%prefix%kickedMessage response embed setTimestamp` Shows the kicked message's embed timestamp\
  \n- `%prefix%kickedMessage response embed setTimestamp current` Sets the kicked message's embed timestamp to the current time\
  \n- `%prefix%kickedMessage response embed setTimestamp current true` Sets the kicked message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%kickedMessage response embed setTimestamp 2020-05-21 12:00` Sets the kicked message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%kickedMessage response embed setTimestamp null` Unsets the kicked message's embed timestamp


command.kickedmessage.embed.field.syntax=kickedMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.kickedmessage.embed.field.description=Manages the embed fields of the KickedMessage


command.kickedmessage.embed.field.add.syntax=kickedMessage embed field add <fieldTitle*> > <fieldValue*>
command.kickedmessage.embed.field.add.description=Adds an embed field to the KickedMessage
command.kickedmessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.kickedmessage.embed.field.add.examples=- `%prefix%kickedMessage embed field add user > ToxicMushroom` Adds a field entry to the kicked message's embed with "user" as title and "ToxicMushroom as value


command.kickedmessage.embed.field.remove.syntax=kickedMessage embed field remove <fieldIndex*>
command.kickedmessage.embed.field.remove.description=Removes an embed field of the KickedMessage
command.kickedmessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%kickedMessage embed field list`
command.kickedmessage.embed.field.remove.examples=- `%prefix%kickedMessage embed field remove 1` Removes the kicked message's embed field with index 1


command.kickedmessage.embed.field.list.syntax=kickedMessage embed field list
command.kickedmessage.embed.field.list.description=Lists the embed fields of the KickedMessage


command.kickedmessage.embed.field.settitle.syntax=kickedMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.kickedmessage.embed.field.settitle.description=Sets the embed field title of the KickedMessage
command.kickedmessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%kickedMessage embed field list`\
  \n%help.arg.fieldtitle%
command.kickedmessage.embed.field.settitle.examples=- `%prefix%kickedMessage embed field setTitle 1 User` Sets the kicked message's embed field title with index 1 to "User"


command.kickedmessage.embed.field.setvalue.syntax=kickedMessage embed field setValue <fieldIndex*> <fieldValue*>
command.kickedmessage.embed.field.setvalue.description=Sets the embed field value of the KickedMessage
command.kickedmessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%kickedMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.kickedmessage.embed.field.setvalue.examples=- `%prefix%kickedMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"


command.kickedmessage.embed.field.setinline.syntax=kickedMessage embed field setInline <fieldIndex> <state>
command.kickedmessage.embed.field.setinline.description=Sets the embed field inline state of the KickedMessage
command.kickedmessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%kickedMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.kickedmessage.embed.field.setinline.examples=- `%prefix%kickedMessage embed field setInline 1 true` Sets the selected kicked message's embed field at index 1 to be inlined\
  \n- `%prefix%kickedMessage embed field setInline 1 false` Sets the selected kicked message's embed field at index 1\nnot\nto\nbe inlined


command.kickedmessage.attachments.syntax=kickedMessage attachments <add | remove | list>
command.kickedmessage.attachments.description=Manages the attachments of the KickedMessage


command.kickedmessage.attachments.add.syntax=kickedMessage attachments add <url*> <fileName*>
command.kickedmessage.attachments.add.description=Adds attachments to the KickedMessage
command.kickedmessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.kickedmessage.attachments.add.examples=- `%prefix%kickedMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the kicked message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.kickedmessage.attachments.remove.syntax=kickedMessage attachments remove <url*>
command.kickedmessage.attachments.remove.description=Removes attachments from the KickedMessage
command.kickedmessage.attachments.remove.arguments=%help.arg.url%
command.kickedmessage.attachments.remove.examples=- `%prefix%kickedMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the kicked message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.kickedmessage.attachments.list.syntax=kickedMessage attachments list
command.kickedmessage.attachments.list.description=Lists the attachments from the KickedMessage


command.kickedmessage.view.syntax=kickedMessage view
command.kickedmessage.view.description=Shows a preview of the kicked message


command.kickedmessage.setpingable.syntax=kickedMessage setPingable [boolean*]
command.kickedmessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.kickedmessage.setpingable.arguments=%help.arg.boolean%
command.kickedmessage.setpingable.examples=- `%prefix%kickedMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%kickedMessage setPingable true` Sets the kicked message to ping when mentions are present.


command.boostmessage.syntax=boostMessage <setContent | embed | attachments | view | setPingable>
command.boostmessage.description=Manages the BoostMessage
command.boostmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.boostmessage.setcontent.syntax=boostMessage setContent [text* | null]
command.boostmessage.setcontent.description=Sets the text content of the BoostMessage
command.boostmessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.boostmessage.setcontent.examples=- `%prefix%boostmessage setContent null` Unsets the boost message's content\
  \n- `%prefix%boostmessage setContent welcome {user}` Sets the boost message's content to "welcome {user}"


command.boostmessage.embed.syntax=boostMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.boostmessage.embed.description=Sets the embed content of the BoostMessage


command.boostmessage.embed.clear.syntax=boostMessage embed clear
command.boostmessage.embed.clear.description=Clears the embed content of the BoostMessage


command.boostmessage.embed.setdescription.syntax=boostMessage embed setDescription [text* | null]
command.boostmessage.embed.setdescription.description=Sets the embed description of the BoostMessage
command.boostmessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.boostmessage.embed.setdescription.examples=- `%prefix%boostMessage embed setDescription null` Unsets the boost message's embed description\
  \n- `%prefix%boostMessage embed setDescription welcome {user}` Sets the boost message's embed description to "welcome {user}"


command.boostmessage.embed.setcolor.syntax=boostMessage embed setColor [color* | null]
command.boostmessage.embed.setcolor.description=Sets the embed color of the BoostMessage
command.boostmessage.embed.setcolor.arguments=%help.arg.color%
command.boostmessage.embed.setcolor.examples=- `%prefix%boostMessage embed setColor #FFFFFF` Sets the boost message's embed color to white\
  \n- `%prefix%boostMessage embed setColor null` Unsets the boost message's embed color


command.boostmessage.embed.settitle.syntax=boostMessage embed setTitle [text* | null]
command.boostmessage.embed.settitle.description=Sets the embed title of the BoostMessage
command.boostmessage.embed.settitle.arguments=%help.arg.text%
command.boostmessage.embed.settitle.examples=- `%prefix%boostMessage embed setTitle welcome {user}` Sets the boost message's embed title to "welcome {user}"\
  \n- `%prefix%boostMessage embed setTitle null` Unsets the boost message's embed title


command.boostmessage.embed.settitleurl.syntax=boostMessage embed setTitleUrl [url* | null]
command.boostmessage.embed.settitleurl.description=Sets the embed title url of the BoostMessage
command.boostmessage.embed.settitleurl.arguments=%help.arg.url%
command.boostmessage.embed.settitleurl.examples=- `%prefix%boostMessage embed setTitleUrl https://melijn.com` Sets the boost message's embed title url to "https://melijn.com"\
  \n- `%prefix%boostMessage embed setTitleUrl null` Unsets the boost message's embed title url


command.boostmessage.embed.setauthor.syntax=boostMessage embed setAuthor [embedAuthor* | null]
command.boostmessage.embed.setauthor.description=Sets the embed author of the BoostMessage
command.boostmessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.boostmessage.embed.setauthor.examples=- `%prefix%boostMessage embed setAuthor` Shows the boost message's embed author\
  \n- `%prefix%boostMessage embed setAuthor {username}` Sets the boost message's embed author to "{username}"\
  \n- `%prefix%boostMessage embed setAuthor null` Unsets the boost message's embed author


command.boostmessage.embed.setauthoricon.syntax=boostMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.boostmessage.embed.setauthoricon.description=Sets the embed author icon of the BoostMessage
command.boostmessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.boostmessage.embed.setauthoricon.examples=- `%prefix%boostMessage embed setAuthorIcon` Shows the boost message's embed author\
  \n- `%prefix%boostMessage embed setAuthorIcon ~attachment~` Sets the boost message's embed author icon to the attachment\
  \n- `%prefix%boostMessage embed setAuthorIcon @user` Sets the boost message's embed author icon to @user's avatar\
  \n- `%prefix%boostMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the boost message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%boostMessage embed setAuthorIcon null` Unsets the boost message's embed author


command.boostmessage.embed.setauthorurl.syntax=boostMessage embed setAuthorUrl [url* | null]
command.boostmessage.embed.setauthorurl.description=Sets the embed author url of the BoostMessage
command.boostmessage.embed.setauthorurl.arguments=%help.arg.url%
command.boostmessage.embed.setauthorurl.examples=- `%prefix%boostMessage embed setAuthorUrl` Shows the boost message's embed author url\
  \n- `%prefix%boostMessage embed setAuthorUrl https://google.com/` Sets the boost message's embed author url to "https://google.com/"\
  \n- `%prefix%boostMessage embed setAuthorUrl null` Unsets the boost message's embed author


command.boostmessage.embed.setthumbnail.syntax=boostMessage embed setThumbnail [url* | attachment | user* | null]
command.boostmessage.embed.setthumbnail.description=Sets the embed thumbnail of the BoostMessage
command.boostmessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.boostmessage.embed.setthumbnail.examples=- `%prefix%boostMessage embed setThumbnail` Shows the boost message's embed thumbnail\
  \n- `%prefix%boostMessage embed setThumbnail ~attachment~` Sets the boost message's embed thumbnail to the attachment\
  \n- `%prefix%boostMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the boost message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%boostMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%boostMessage embed setThumbnail null` Unsets the boost message's embed thumbnail


command.boostmessage.embed.setimage.syntax=boostMessage embed setImage [url*]
command.boostmessage.embed.setimage.description=Sets the embed image of the BoostMessage
command.boostmessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.boostmessage.embed.setimage.examples=- `%prefix%boostMessage embed setImage` Shows the boost message's embed image\
  \n- `%prefix%boostMessage embed setImage ~attachment~` Sets the boost message's embed image to the attachment\
  \n- `%prefix%boostMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the boost message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%boostMessage embed setImage @user` Sets the boost message's embed image to @user's avatar\
  \n- `%prefix%boostMessage embed setImage null` Unsets the boost message's embed image


command.boostmessage.embed.setfooter.syntax=boostMessage embed setFooter [text*]
command.boostmessage.embed.setfooter.description=Sets the embed footer of the BoostMessage
command.boostmessage.embed.setfooter.arguments=%help.arg.text%
command.boostmessage.embed.setfooter.examples=- `%prefix%boostMessage embed setFooter` Shows the boost message's embed footer\
  \n- `%prefix%boostMessage embed setFooter epic text` Sets the boost message's embed footer to "epic text"\
  \n- `%prefix%boostMessage embed setFooter null` Unsets the boost message's embed image


command.boostmessage.embed.setfootericon.syntax=boostMessage embed setFooterIcon [url* | attachment* | user* | null]
command.boostmessage.embed.setfootericon.description=Sets the embed footer icon of the BoostMessage
command.boostmessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.boostmessage.embed.setfootericon.examples=- `%prefix%boostMessage embed setFooterIcon` Shows the boost message's embed footer icon\
  \n- `%prefix%boostMessage embed setFooterIcon ~attachment~` Sets the boost message's embed footer icon to the attachment\
  \n- `%prefix%boostMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the boost message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%boostMessage embed setFooterIcon @user` Sets the boost message's embed footer icon to @user's avatar\
  \n- `%prefix%boostMessage embed setFooterIcon null` Unsets the boost message's embed footer icon


command.boostmessage.response.embed.settimestamp.syntax=boostMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.boostmessage.response.embed.settimestamp.description=Sets the embed timestamp of the BoostMessage
command.boostmessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.boostmessage.response.embed.settimestamp.examples=- `%prefix%boostMessage response embed setTimestamp` Shows the boost message's embed timestamp\
  \n- `%prefix%boostMessage response embed setTimestamp current` Sets the boost message's embed timestamp to the current time\
  \n- `%prefix%boostMessage response embed setTimestamp current true` Sets the boost message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%boostMessage response embed setTimestamp 2020-05-21 12:00` Sets the boost message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%boostMessage response embed setTimestamp null` Unsets the boost message's embed timestamp


command.boostmessage.embed.field.syntax=boostMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.boostmessage.embed.field.description=Manages the embed fields of the BoostMessage


command.boostmessage.embed.field.add.syntax=boostMessage embed field add <fieldTitle*> > <fieldValue*>
command.boostmessage.embed.field.add.description=Adds an embed field to the BoostMessage
command.boostmessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.boostmessage.embed.field.add.examples=- `%prefix%boostMessage embed field add user > ToxicMushroom` Adds a field entry to the boost message's embed with "user" as title and "ToxicMushroom as value


command.boostmessage.embed.field.remove.syntax=boostMessage embed field remove <fieldIndex*>
command.boostmessage.embed.field.remove.description=Removes an embed field of the BoostMessage
command.boostmessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%boostMessage embed field list`
command.boostmessage.embed.field.remove.examples=- `%prefix%boostMessage embed field remove 1` Removes the boost message's embed field with index 1


command.boostmessage.embed.field.list.syntax=boostMessage embed field list
command.boostmessage.embed.field.list.description=Lists the embed fields of the BoostMessage


command.boostmessage.embed.field.settitle.syntax=boostMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.boostmessage.embed.field.settitle.description=Sets the embed field title of the BoostMessage
command.boostmessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%boostMessage embed field list`\
  \n%help.arg.fieldtitle%
command.boostmessage.embed.field.settitle.examples=- `%prefix%boostMessage embed field setTitle 1 User` Sets the boost message's embed field title with index 1 to "User"



command.boostmessage.embed.field.setvalue.syntax=boostMessage embed field setValue <fieldIndex*> <fieldValue*>
command.boostmessage.embed.field.setvalue.description=Sets the embed field value of the BoostMessage
command.boostmessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%boostMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.boostmessage.embed.field.setvalue.examples=- `%prefix%boostMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"


command.boostmessage.embed.field.setinline.syntax=boostMessage embed field setInline <fieldIndex> <state>
command.boostmessage.embed.field.setinline.description=Sets the embed field inline state of the BoostMessage
command.boostmessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%boostMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.boostmessage.embed.field.setinline.examples=- `%prefix%boostMessage embed field setInline 1 true` Sets the selected boost message's embed field at index 1 to be inlined\
  \n- `%prefix%boostMessage embed field setInline 1 false` Sets the selected boost message's embed field at index 1\nnot\nto\nbe inlined


command.boostmessage.attachments.syntax=boostMessage attachments <add | remove | list>
command.boostmessage.attachments.description=Manages the attachments of the BoostMessage


command.boostmessage.attachments.add.syntax=boostMessage attachments add <url*> <fileName*>
command.boostmessage.attachments.add.description=Adds attachments to the BoostMessage
command.boostmessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.boostmessage.attachments.add.examples=- `%prefix%boostMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the boost message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.boostmessage.attachments.remove.syntax=boostMessage attachments remove <url*>
command.boostmessage.attachments.remove.description=Removes attachments from the BoostMessage
command.boostmessage.attachments.remove.arguments=%help.arg.url%
command.boostmessage.attachments.remove.examples=- `%prefix%boostMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the boost message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.boostmessage.attachments.list.syntax=boostMessage attachments list
command.boostmessage.attachments.list.description=Lists the attachments from the BoostMessage


command.boostmessage.view.syntax=boostMessage view
command.boostmessage.view.description=Shows a preview of the boost message


command.boostmessage.setpingable.syntax=boostMessage setPingable [boolean*]
command.boostmessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.boostmessage.setpingable.arguments=%help.arg.boolean%
command.boostmessage.setpingable.examples=- `%prefix%boostMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%boostMessage setPingable true` Sets the boost message to ping when mentions are present.


command.vote.syntax=vote
command.vote.description=Shows you the voteUrl
command.vote.success=You can vote here: **%url%**


command.voteinfo.syntax=voteInfo [user*]
command.voteinfo.description=Shows you the vote info of a user
command.voteinfo.readyin=ready in %duration%s
command.voteinfo.embed.title=Vote Info of %user%
command.voteinfo.embed.description=**Votes** %votes%\
  \n**Streak** %streak%\
  \n**Next Vote Topgg** %topgg%\
  \n**Next Vote DiscordBotList** %dbl%\
  \n**Next Vote BotsForDiscord** %bfd%\
  \n**Next Vote DiscordBoats** %dboats%\
  \n**Last Vote Time** %lastTime%
command.voteinfo.arguments=%help.arg.user%
command.voteinfo.examples=- `%prefix%voteInfo` Shows your voting information\
  \n- `%prefix%voteInfo @ToxicMushroom` Shows ToxicMushroom's voting information


command.leavemessage.syntax=leaveMessage <setContent | embed | attachments | view | setPingable>
command.leavemessage.description=Manages the LeaveMessage
command.leavemessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.leavemessage.setcontent.syntax=leaveMessage setContent [text* | null]
command.leavemessage.setcontent.description=Sets the text content of the LeaveMessage
command.leavemessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.leavemessage.setcontent.examples=- `%prefix%leaveMessage setContent null` Unsets the leave message's content\
  \n- `%prefix%leaveMessage setContent welcome {user}` Sets the leave message's content to "welcome {user}"


command.leavemessage.embed.syntax=leaveMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.leavemessage.embed.description=Sets the embed content of the LeaveMessage


command.leavemessage.embed.clear.syntax=leaveMessage embed clear
command.leavemessage.embed.clear.description=Clears the embed content of the LeaveMessage


command.leavemessage.embed.setdescription.syntax=leaveMessage embed setDescription [text* | null]
command.leavemessage.embed.setdescription.description=Sets the embed description of the LeaveMessage
command.leavemessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.leavemessage.embed.setdescription.examples=- `%prefix%leaveMessage embed setDescription null` Unsets the leave message's embed description\
  \n- `%prefix%leaveMessage embed setDescription welcome {user}` Sets the leave message's embed description to "welcome {user}"


command.leavemessage.embed.setcolor.syntax=leaveMessage embed setColor [color* | null]
command.leavemessage.embed.setcolor.description=Sets the embed color of the LeaveMessage
command.leavemessage.embed.setcolor.arguments=%help.arg.color%
command.leavemessage.embed.setcolor.examples=- `%prefix%leaveMessage embed setColor #FFFFFF` Sets the leave message's embed color to white\
  \n- `%prefix%leaveMessage embed setColor null` Unsets the leave message's embed color


command.leavemessage.embed.settitle.syntax=leaveMessage embed setTitle [text* | null]
command.leavemessage.embed.settitle.description=Sets the embed title of the LeaveMessage
command.leavemessage.embed.settitle.arguments=%help.arg.text%
command.leavemessage.embed.settitle.examples=- `%prefix%leaveMessage embed setTitle welcome {user}` Sets the leave message's embed title to "welcome {user}"\
  \n- `%prefix%leaveMessage embed setTitle null` Unsets the leave message's embed title


command.leavemessage.embed.settitleurl.syntax=leaveMessage embed setTitleUrl [url* | null]
command.leavemessage.embed.settitleurl.description=Sets the embed title url of the LeaveMessage
command.leavemessage.embed.settitleurl.arguments=%help.arg.url%
command.leavemessage.embed.settitleurl.examples=- `%prefix%leaveMessage embed setTitleUrl https://melijn.com` Sets the leave message's embed title url to "https://melijn.com"\
  \n- `%prefix%leaveMessage embed setTitleUrl null` Unsets the leave message's embed title url


command.leavemessage.embed.setauthor.syntax=leaveMessage embed setAuthor [embedAuthor* | null]
command.leavemessage.embed.setauthor.description=Sets the embed author of the LeaveMessage
command.leavemessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.leavemessage.embed.setauthor.examples=- `%prefix%leaveMessage embed setAuthor` Shows the leave message's embed author\
  \n- `%prefix%leaveMessage embed setAuthor {username}` Sets the leave message's embed author to "{username}"\
  \n- `%prefix%leaveMessage embed setAuthor null` Unsets the leave message's embed author


command.leavemessage.embed.setauthoricon.syntax=leaveMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.leavemessage.embed.setauthoricon.description=Sets the embed author icon of the LeaveMessage
command.leavemessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.leavemessage.embed.setauthoricon.examples=- `%prefix%leaveMessage embed setAuthorIcon` Shows the leave message's embed author\
  \n- `%prefix%leaveMessage embed setAuthorIcon ~attachment~` Sets the leave message's embed author icon to the attachment\
  \n- `%prefix%leaveMessage embed setAuthorIcon @user` Sets the leave message's embed author icon to @user's avatar\
  \n- `%prefix%leaveMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setAuthorIcon null` Unsets the leave message's embed author


command.leavemessage.embed.setauthorurl.syntax=leaveMessage embed setAuthorUrl [url* | null]
command.leavemessage.embed.setauthorurl.description=Sets the embed author url of the LeaveMessage
command.leavemessage.embed.setauthorurl.arguments=%help.arg.url%
command.leavemessage.embed.setauthorurl.examples=- `%prefix%leaveMessage embed setAuthorUrl` Shows the leave message's embed author url\
  \n- `%prefix%leaveMessage embed setAuthorUrl https://google.com/` Sets the leave message's embed author url to "https://google.com/"\
  \n- `%prefix%leaveMessage embed setAuthorUrl null` Unsets the leave message's embed author


command.leavemessage.embed.setthumbnail.syntax=leaveMessage embed setThumbnail [url* | attachment | user* | null]
command.leavemessage.embed.setthumbnail.description=Sets the embed thumbnail of the LeaveMessage
command.leavemessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.leavemessage.embed.setthumbnail.examples=- `%prefix%leaveMessage embed setThumbnail` Shows the leave message's embed thumbnail\
  \n- `%prefix%leaveMessage embed setThumbnail ~attachment~` Sets the leave message's embed thumbnail to the attachment\
  \n- `%prefix%leaveMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%leaveMessage embed setThumbnail null` Unsets the leave message's embed thumbnail


command.leavemessage.embed.setimage.syntax=leaveMessage embed setImage [url*]
command.leavemessage.embed.setimage.description=Sets the embed image of the LeaveMessage
command.leavemessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.leavemessage.embed.setimage.examples=- `%prefix%leaveMessage embed setImage` Shows the leave message's embed image\
  \n- `%prefix%leaveMessage embed setImage ~attachment~` Sets the leave message's embed image to the attachment\
  \n- `%prefix%leaveMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setImage @user` Sets the leave message's embed image to @user's avatar\
  \n- `%prefix%leaveMessage embed setImage null` Unsets the leave message's embed image


command.leavemessage.embed.setfooter.syntax=leaveMessage embed setFooter [text*]
command.leavemessage.embed.setfooter.description=Sets the embed footer of the LeaveMessage
command.leavemessage.embed.setfooter.arguments=%help.arg.text%
command.leavemessage.embed.setfooter.examples=- `%prefix%leaveMessage embed setFooter` Shows the leave message's embed footer\
  \n- `%prefix%leaveMessage embed setFooter epic text` Sets the leave message's embed footer to "epic text"\
  \n- `%prefix%leaveMessage embed setFooter null` Unsets the leave message's embed image


command.leavemessage.embed.setfootericon.syntax=leaveMessage embed setFooterIcon [url* | attachment* | user* | null]
command.leavemessage.embed.setfootericon.description=Sets the embed footer icon of the LeaveMessage
command.leavemessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.leavemessage.embed.setfootericon.examples=- `%prefix%leaveMessage embed setFooterIcon` Shows the leave message's embed footer icon\
  \n- `%prefix%leaveMessage embed setFooterIcon ~attachment~` Sets the leave message's embed footer icon to the attachment\
  \n- `%prefix%leaveMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the leave message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%leaveMessage embed setFooterIcon @user` Sets the leave message's embed footer icon to @user's avatar\
  \n- `%prefix%leaveMessage embed setFooterIcon null` Unsets the leave message's embed footer icon


command.leavemessage.response.embed.settimestamp.syntax=leaveMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.leavemessage.response.embed.settimestamp.description=Sets the embed timestamp of the LeaveMessage
command.leavemessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.leavemessage.response.embed.settimestamp.examples=- `%prefix%leaveMessage response embed setTimestamp` Shows the leave message's embed timestamp\
  \n- `%prefix%leaveMessage response embed setTimestamp current` Sets the leave message's embed timestamp to the current time\
  \n- `%prefix%leaveMessage response embed setTimestamp current true` Sets the leave message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%leaveMessage response embed setTimestamp 2020-05-21 12:00` Sets the leave message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%leaveMessage response embed setTimestamp null` Unsets the leave message's embed timestamp


command.leavemessage.embed.field.syntax=leaveMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.leavemessage.embed.field.description=Manages the embed fields of the LeaveMessage


command.leavemessage.embed.field.add.syntax=leaveMessage embed field add <fieldTitle*> > <fieldValue*>
command.leavemessage.embed.field.add.description=Adds an embed field to the LeaveMessage
command.leavemessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.leavemessage.embed.field.add.examples=- `%prefix%leaveMessage embed field add user > ToxicMushroom` Adds a field entry to the leave message's embed with "user" as title and "ToxicMushroom as value


command.leavemessage.embed.field.remove.syntax=leaveMessage embed field remove <fieldIndex*>
command.leavemessage.embed.field.remove.description=Removes an embed field of the LeaveMessage
command.leavemessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`
command.leavemessage.embed.field.remove.examples=- `%prefix%leaveMessage embed field remove 1` Removes the leave message's embed field with index 1



command.leavemessage.embed.field.list.syntax=leaveMessage embed field list
command.leavemessage.embed.field.list.description=Lists the embed fields of the LeaveMessage


command.leavemessage.embed.field.settitle.syntax=leaveMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.leavemessage.embed.field.settitle.description=Sets the embed field title of the LeaveMessage
command.leavemessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`\
  \n%help.arg.fieldtitle%
command.leavemessage.embed.field.settitle.examples=- `%prefix%leaveMessage embed field setTitle 1 User` Sets the leave message's embed field title with index 1 to "User"



command.leavemessage.embed.field.setvalue.syntax=leaveMessage embed field setValue <fieldIndex*> <fieldValue*>
command.leavemessage.embed.field.setvalue.description=Sets the embed field value of the LeaveMessage
command.leavemessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.leavemessage.embed.field.setvalue.examples=- `%prefix%leaveMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.leavemessage.embed.field.setinline.syntax=leaveMessage embed field setInline <fieldIndex> <state>
command.leavemessage.embed.field.setinline.description=Sets the embed field inline state of the LeaveMessage
command.leavemessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%leaveMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.leavemessage.embed.field.setinline.examples=- `%prefix%leaveMessage embed field setInline 1 true` Sets the selected leave message's embed field at index 1 to be inlined\
  \n- `%prefix%leaveMessage embed field setInline 1 false` Sets the selected leave message's embed field at index 1\nnot\nto\nbe inlined



command.leavemessage.attachments.syntax=leaveMessage attachments <add | remove | list>
command.leavemessage.attachments.description=Manages the attachments of the LeaveMessage


command.leavemessage.attachments.add.syntax=leaveMessage attachments add <url*> <fileName*>
command.leavemessage.attachments.add.description=Adds attachments to the LeaveMessage
command.leavemessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.leavemessage.attachments.add.examples=- `%prefix%leaveMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the leave message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.leavemessage.attachments.remove.syntax=leaveMessage attachments remove <url*>
command.leavemessage.attachments.remove.description=Removes attachments from the LeaveMessage
command.leavemessage.attachments.remove.arguments=%help.arg.url%
command.leavemessage.attachments.remove.examples=- `%prefix%leaveMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the leave message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.leavemessage.attachments.list.syntax=leaveMessage attachments list
command.leavemessage.attachments.list.description=Lists the attachments from the LeaveMessage


command.leavemessage.view.syntax=leaveMessage view
command.leavemessage.view.description=Shows a preview of the leave message


command.leavemessage.setpingable.syntax=leaveMessage setPingable [boolean*]
command.leavemessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.leavemessage.setpingable.arguments=%help.arg.boolean%
command.leavemessage.setpingable.examples=- `%prefix%leaveMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%leaveMessage setPingable true` Sets the leave message to ping when mentions are present.


command.birthdaymessage.syntax=birthdayMessage <setContent | embed | attachments | view | setPingable>
command.birthdaymessage.description=Manages the BirthdayMessage
command.birthdaymessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.birthdaymessage.setcontent.syntax=birthdayMessage setContent [text* | null]
command.birthdaymessage.setcontent.description=Sets the text content of the BirthdayMessage
command.birthdaymessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.birthdaymessage.setcontent.examples=- `%prefix%birthdayMessage setContent null` Unsets the birthday message's content\
  \n- `%prefix%birthdayMessage setContent welcome {user}` Sets the birthday message's content to "welcome {user}"


command.birthdaymessage.embed.syntax=birthdayMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.birthdaymessage.embed.description=Sets the embed content of the BirthdayMessage


command.birthdaymessage.embed.clear.syntax=birthdayMessage embed clear
command.birthdaymessage.embed.clear.description=Clears the embed content of the BirthdayMessage


command.birthdaymessage.embed.setdescription.syntax=birthdayMessage embed setDescription [text* | null]
command.birthdaymessage.embed.setdescription.description=Sets the embed description of the BirthdayMessage
command.birthdaymessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.birthdaymessage.embed.setdescription.examples=- `%prefix%birthdayMessage embed setDescription null` Unsets the birthday message's embed description\
  \n- `%prefix%birthdayMessage embed setDescription welcome {user}` Sets the birthday message's embed description to "welcome {user}"


command.birthdaymessage.embed.setcolor.syntax=birthdayMessage embed setColor [color* | null]
command.birthdaymessage.embed.setcolor.description=Sets the embed color of the BirthdayMessage
command.birthdaymessage.embed.setcolor.arguments=%help.arg.color%
command.birthdaymessage.embed.setcolor.examples=- `%prefix%birthdayMessage embed setColor #FFFFFF` Sets the birthday message's embed color to white\
  \n- `%prefix%birthdayMessage embed setColor null` Unsets the birthday message's embed color


command.birthdaymessage.embed.settitle.syntax=birthdayMessage embed setTitle [text* | null]
command.birthdaymessage.embed.settitle.description=Sets the embed title of the BirthdayMessage
command.birthdaymessage.embed.settitle.arguments=%help.arg.text%
command.birthdaymessage.embed.settitle.examples=- `%prefix%birthdayMessage embed setTitle welcome {user}` Sets the birthday message's embed title to "welcome {user}"\
  \n- `%prefix%birthdayMessage embed setTitle null` Unsets the birthday message's embed title


command.birthdaymessage.embed.settitleurl.syntax=birthdayMessage embed setTitleUrl [url* | null]
command.birthdaymessage.embed.settitleurl.description=Sets the embed title url of the BirthdayMessage
command.birthdaymessage.embed.settitleurl.arguments=%help.arg.url%
command.birthdaymessage.embed.settitleurl.examples=- `%prefix%birthdayMessage embed setTitleUrl https://melijn.com` Sets the birthday message's embed title url to "https://melijn.com"\
  \n- `%prefix%birthdayMessage embed setTitleUrl null` Unsets the birthday message's embed title url


command.birthdaymessage.embed.setauthor.syntax=birthdayMessage embed setAuthor [embedAuthor* | null]
command.birthdaymessage.embed.setauthor.description=Sets the embed author of the BirthdayMessage
command.birthdaymessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.birthdaymessage.embed.setauthor.examples=- `%prefix%birthdayMessage embed setAuthor` Shows the birthday message's embed author\
  \n- `%prefix%birthdayMessage embed setAuthor {username}` Sets the birthday message's embed author to "{username}"\
  \n- `%prefix%birthdayMessage embed setAuthor null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setauthoricon.syntax=birthdayMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.birthdaymessage.embed.setauthoricon.description=Sets the embed author icon of the BirthdayMessage
command.birthdaymessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.birthdaymessage.embed.setauthoricon.examples=- `%prefix%birthdayMessage embed setAuthorIcon` Shows the birthday message's embed author\
  \n- `%prefix%birthdayMessage embed setAuthorIcon ~attachment~` Sets the birthday message's embed author icon to the attachment\
  \n- `%prefix%birthdayMessage embed setAuthorIcon @user` Sets the birthday message's embed author icon to @user's avatar\
  \n- `%prefix%birthdayMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setAuthorIcon null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setauthorurl.syntax=birthdayMessage embed setAuthorUrl [url* | null]
command.birthdaymessage.embed.setauthorurl.description=Sets the embed author url of the BirthdayMessage
command.birthdaymessage.embed.setauthorurl.arguments=%help.arg.url%
command.birthdaymessage.embed.setauthorurl.examples=- `%prefix%birthdayMessage embed setAuthorUrl` Shows the birthday message's embed author url\
  \n- `%prefix%birthdayMessage embed setAuthorUrl https://google.com/` Sets the birthday message's embed author url to "https://google.com/"\
  \n- `%prefix%birthdayMessage embed setAuthorUrl null` Unsets the birthday message's embed author


command.birthdaymessage.embed.setthumbnail.syntax=birthdayMessage embed setThumbnail [url* | attachment | user* | null]
command.birthdaymessage.embed.setthumbnail.description=Sets the embed thumbnail of the BirthdayMessage
command.birthdaymessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.birthdaymessage.embed.setthumbnail.examples=- `%prefix%birthdayMessage embed setThumbnail` Shows the birthday message's embed thumbnail\
  \n- `%prefix%birthdayMessage embed setThumbnail ~attachment~` Sets the birthday message's embed thumbnail to the attachment\
  \n- `%prefix%birthdayMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setThumbnail @user` Sets the thumbnail of the birthday embed to the avatar if @user's\
  \n- `%prefix%birthdayMessage embed setThumbnail null` Unsets the embed thumbnail of the birthday message


command.birthdaymessage.embed.setimage.syntax=birthdayMessage embed setImage [url*]
command.birthdaymessage.embed.setimage.description=Sets the embed image of the BirthdayMessage
command.birthdaymessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.birthdaymessage.embed.setimage.examples=- `%prefix%birthdayMessage embed setImage` Shows the birthday message's embed image\
  \n- `%prefix%birthdayMessage embed setImage ~attachment~` Sets the birthday message's embed image to the attachment\
  \n- `%prefix%birthdayMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setImage @user` Sets the birthday message's embed image to @user's avatar\
  \n- `%prefix%birthdayMessage embed setImage null` Unsets the birthday message's embed image


command.birthdaymessage.embed.setfooter.syntax=birthdayMessage embed setFooter [text*]
command.birthdaymessage.embed.setfooter.description=Sets the embed footer of the BirthdayMessage
command.birthdaymessage.embed.setfooter.arguments=%help.arg.text%
command.birthdaymessage.embed.setfooter.examples=- `%prefix%birthdayMessage embed setFooter` Shows the birthday message's embed footer\
  \n- `%prefix%birthdayMessage embed setFooter epic text` Sets the birthday message's embed footer to "epic text"\
  \n- `%prefix%birthdayMessage embed setFooter null` Unsets the birthday message's embed image


command.birthdaymessage.embed.setfootericon.syntax=birthdayMessage embed setFooterIcon [url* | attachment* | user* | null]
command.birthdaymessage.embed.setfootericon.description=Sets the embed footer icon of the BirthdayMessage
command.birthdaymessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.birthdaymessage.embed.setfootericon.examples=- `%prefix%birthdayMessage embed setFooterIcon` Shows the birthday message's embed footer icon\
  \n- `%prefix%birthdayMessage embed setFooterIcon ~attachment~` Sets the birthday message's embed footer icon to the attachment\
  \n- `%prefix%birthdayMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the birthday message's embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%birthdayMessage embed setFooterIcon @user` Sets the birthday message's embed footer icon to @user's avatar\
  \n- `%prefix%birthdayMessage embed setFooterIcon null` Unsets the birthday message's embed footer icon


command.birthdaymessage.response.embed.settimestamp.syntax=birthdayMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.birthdaymessage.response.embed.settimestamp.description=Sets the embed timestamp of the selected custom command
command.birthdaymessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.birthdaymessage.response.embed.settimestamp.examples=- `%prefix%birthdayMessage response embed setTimestamp` Shows the birthday message's embed timestamp\
  \n- `%prefix%birthdayMessage response embed setTimestamp current` Sets the birthday message's embed timestamp to the current time\
  \n- `%prefix%birthdayMessage response embed setTimestamp current true` Sets the birthday message's embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%birthdayMessage response embed setTimestamp 2020-05-21 12:00` Sets the birthday message's embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%birthdayMessage response embed setTimestamp null` Unsets the birthday message's embed timestamp


command.birthdaymessage.embed.field.syntax=birthdayMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.birthdaymessage.embed.field.description=Manages the embed fields of the BirthdayMessage


command.birthdaymessage.embed.field.add.syntax=birthdayMessage embed field add <fieldTitle*> > <fieldValue*>
command.birthdaymessage.embed.field.add.description=Adds an embed field to the BirthdayMessage
command.birthdaymessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.birthdaymessage.embed.field.add.examples=- `%prefix%birthdayMessage embed field add user > ToxicMushroom` Adds a field entry to the birthday message's embed with "user" as title and "ToxicMushroom as value


command.birthdaymessage.embed.field.remove.syntax=birthdayMessage embed field remove <fieldIndex*>
command.birthdaymessage.embed.field.remove.description=Removes an embed field of the BirthdayMessage
command.birthdaymessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`
command.birthdaymessage.embed.field.remove.examples=- `%prefix%birthdayMessage embed field remove 1` Removes the birthday message's embed field with index 1



command.birthdaymessage.embed.field.list.syntax=birthdayMessage embed field list
command.birthdaymessage.embed.field.list.description=Lists the embed fields of the BirthdayMessage


command.birthdaymessage.embed.field.settitle.syntax=birthdayMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.birthdaymessage.embed.field.settitle.description=Sets the embed field title of the BirthdayMessage
command.birthdaymessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`\
  \n%help.arg.fieldtitle%
command.birthdaymessage.embed.field.settitle.examples=- `%prefix%birthdayMessage embed field setTitle 1 User` Sets the birthday message's embed field title with index 1 to "User"



command.birthdaymessage.embed.field.setvalue.syntax=birthdayMessage embed field setValue <fieldIndex*> <fieldValue*>
command.birthdaymessage.embed.field.setvalue.description=Sets the embed field value of the BirthdayMessage
command.birthdaymessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.birthdaymessage.embed.field.setvalue.examples=- `%prefix%birthdayMessage response embed field setValue 1 ToxicMushroom` Sets the selected birthday message's embed response's embed field value with index 1 to "ToxicMushroom"



command.birthdaymessage.embed.field.setinline.syntax=birthdayMessage embed field setInline <fieldIndex> <state>
command.birthdaymessage.embed.field.setinline.description=Sets the embed field inline state of the BirthdayMessage
command.birthdaymessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%birthdayMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.birthdaymessage.embed.field.setinline.examples=- `%prefix%birthdayMessage embed field setInline 1 true` Sets the selected birthday message's embed field at index 1 to be inlined\
  \n- `%prefix%cbirthdayMessage embed field setInline 1 false` Sets the selected birthday message's embed field at index 1\nnot\nto\nbe inlined



command.birthdaymessage.attachments.syntax=birthdayMessage attachments <add | remove | list>
command.birthdaymessage.attachments.description=Manages the attachments of the BirthdayMessage


command.birthdaymessage.attachments.add.syntax=birthdayMessage attachments add <url*> <fileName*>
command.birthdaymessage.attachments.add.description=Adds attachments to the BirthdayMessage
command.birthdaymessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.birthdaymessage.attachments.add.examples=- `%prefix%birthdayMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the birthday message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.birthdaymessage.attachments.remove.syntax=birthdayMessage attachments remove <url*>
command.birthdaymessage.attachments.remove.description=Removes attachments from the BirthdayMessage
command.birthdaymessage.attachments.remove.arguments=%help.arg.url%
command.birthdaymessage.attachments.remove.examples=- `%prefix%birthdayMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the birthday message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.birthdaymessage.attachments.list.syntax=birthdayMessage attachments list
command.birthdaymessage.attachments.list.description=Lists the attachments from the BirthdayMessage


command.birthdaymessage.view.syntax=birthdayMessage view
command.birthdaymessage.view.description=Shows a preview of the birthday message


command.birthdaymessage.setpingable.syntax=birthdayMessage setPingable [boolean*]
command.birthdaymessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.birthdaymessage.setpingable.arguments=%help.arg.boolean%
command.birthdaymessage.setpingable.examples=- `%prefix%birthdayMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%birthdayMessage setPingable true` Sets the birthday message to ping when mentions are present.


command.preverificationjoinmessage.syntax=preVerificationJoinMessage <setContent | embed | attachments | view | setPingable>
command.preverificationjoinmessage.description=Manages the PreVerificationJoinMessage
command.preverificationjoinmessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.preverificationjoinmessage.setcontent.syntax=preVerificationJoinMessage setContent [text* | null]
command.preverificationjoinmessage.setcontent.description=Sets the text content of the PreVerificationJoinMessage
command.preverificationjoinmessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.preverificationjoinmessage.setcontent.examples=- `%prefix%preverificationjoinmessage setContent null` Unsets the pre-verification-join-message content\
  \n- `%prefix%preverificationjoinmessage setContent welcome {user}` Sets the pre-verification-join-message content to "welcome {user}"


command.preverificationjoinmessage.embed.syntax=preVerificationJoinMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.preverificationjoinmessage.embed.description=Sets the embed content of the PreVerificationJoinMessage


command.preverificationjoinmessage.embed.clear.syntax=preVerificationJoinMessage embed clear
command.preverificationjoinmessage.embed.clear.description=Clears the embed content of the PreVerificationJoinMessage


command.preverificationjoinmessage.embed.setdescription.syntax=preVerificationJoinMessage embed setDescription [text* | null]
command.preverificationjoinmessage.embed.setdescription.description=Sets the embed description of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.preverificationjoinmessage.embed.setdescription.examples=- `%prefix%preVerificationJoinMessage embed setDescription null` Unsets the pre-verification-join-message embed description\
  \n- `%prefix%preVerificationJoinMessage embed setDescription welcome {user}` Sets the pre-verification-join-message embed description to "welcome {user}"


command.preverificationjoinmessage.embed.setcolor.syntax=preVerificationJoinMessage embed setColor [color* | null]
command.preverificationjoinmessage.embed.setcolor.description=Sets the embed color of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setcolor.arguments=%help.arg.color%
command.preverificationjoinmessage.embed.setcolor.examples=- `%prefix%preVerificationJoinMessage embed setColor #FFFFFF` Sets the pre-verification-join-message embed color to white\
  \n- `%prefix%preVerificationJoinMessage embed setColor null` Unsets the pre-verification-join-message embed color


command.preverificationjoinmessage.embed.settitle.syntax=preVerificationJoinMessage embed setTitle [text* | null]
command.preverificationjoinmessage.embed.settitle.description=Sets the embed title of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.settitle.arguments=%help.arg.text%
command.preverificationjoinmessage.embed.settitle.examples=- `%prefix%preVerificationJoinMessage embed setTitle welcome {user}` Sets the pre-verification-join-message embed title to "welcome {user}"\
  \n- `%prefix%preVerificationJoinMessage embed setTitle null` Unsets the pre-verification-join-message embed title


command.preverificationjoinmessage.embed.settitleurl.syntax=preVerificationJoinMessage embed setTitleUrl [url* | null]
command.preverificationjoinmessage.embed.settitleurl.description=Sets the embed title url of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.settitleurl.arguments=%help.arg.url%
command.preverificationjoinmessage.embed.settitleurl.examples=- `%prefix%preVerificationJoinMessage embed setTitleUrl https://melijn.com` Sets the pre-verification-join-message embed title url to "https://melijn.com"\
  \n- `%prefix%preVerificationJoinMessage embed setTitleUrl null` Unsets the pre-verification-join-message embed title url


command.preverificationjoinmessage.embed.setauthor.syntax=preVerificationJoinMessage embed setAuthor [embedAuthor* | null]
command.preverificationjoinmessage.embed.setauthor.description=Sets the embed author of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.preverificationjoinmessage.embed.setauthor.examples=- `%prefix%preVerificationJoinMessage embed setAuthor` Shows the pre-verification-join-message embed author\
  \n- `%prefix%preVerificationJoinMessage embed setAuthor {username}` Sets the pre-verification-join-message embed author to "{username}"\
  \n- `%prefix%preVerificationJoinMessage embed setAuthor null` Unsets the pre-verification-join-message embed author


command.preverificationjoinmessage.embed.setauthoricon.syntax=preVerificationJoinMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.preverificationjoinmessage.embed.setauthoricon.description=Sets the embed author icon of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationjoinmessage.embed.setauthoricon.examples=- `%prefix%preVerificationJoinMessage embed setAuthorIcon` Shows the pre-verification-join-message embed author\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorIcon ~attachment~` Sets the pre-verification-join-message embed author icon to the attachment\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorIcon @user` Sets the pre-verification-join-message embed author icon to @user's avatar\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-join-message embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorIcon null` Unsets the pre-verification-join-message embed author


command.preverificationjoinmessage.embed.setauthorurl.syntax=preVerificationJoinMessage embed setAuthorUrl [url* | null]
command.preverificationjoinmessage.embed.setauthorurl.description=Sets the embed author url of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setauthorurl.arguments=%help.arg.url%
command.preverificationjoinmessage.embed.setauthorurl.examples=- `%prefix%preVerificationJoinMessage embed setAuthorUrl` Shows the pre-verification-join-message embed author url\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorUrl https://google.com/` Sets the pre-verification-join-message embed author url to "https://google.com/"\
  \n- `%prefix%preVerificationJoinMessage embed setAuthorUrl null` Unsets the pre-verification-join-message embed author


command.preverificationjoinmessage.embed.setthumbnail.syntax=preVerificationJoinMessage embed setThumbnail [url* | attachment | user* | null]
command.preverificationjoinmessage.embed.setthumbnail.description=Sets the embed thumbnail of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationjoinmessage.embed.setthumbnail.examples=- `%prefix%preVerificationJoinMessage embed setThumbnail` Shows the pre-verification-join-message embed thumbnail\
  \n- `%prefix%preVerificationJoinMessage embed setThumbnail ~attachment~` Sets the pre-verification-join-message embed thumbnail to the attachment\
  \n- `%prefix%preVerificationJoinMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-join-message embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationJoinMessage embed setThumbnail @user` Sets the pre-verification-join-message embed thumbnail to @user's avatar\
  \n- `%prefix%preVerificationJoinMessage embed setThumbnail null` Unsets the pre-verification-join-message embed thumbnail


command.preverificationjoinmessage.embed.setimage.syntax=preVerificationJoinMessage embed setImage [url*]
command.preverificationjoinmessage.embed.setimage.description=Sets the embed image of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationjoinmessage.embed.setimage.examples=- `%prefix%preVerificationJoinMessage embed setImage` Shows the pre-verification-join-message embed image\
  \n- `%prefix%preVerificationJoinMessage embed setImage ~attachment~` Sets the pre-verification-join-message embed image to the attachment\
  \n- `%prefix%preVerificationJoinMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-join-message embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationJoinMessage embed setImage @user` Sets the pre-verification-join-message embed image to @user's avatar\
  \n- `%prefix%preVerificationJoinMessage embed setImage null` Unsets the pre-verification-join-message embed image


command.preverificationjoinmessage.embed.setfooter.syntax=preVerificationJoinMessage embed setFooter [text*]
command.preverificationjoinmessage.embed.setfooter.description=Sets the embed footer of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setfooter.arguments=%help.arg.text%
command.preverificationjoinmessage.embed.setfooter.examples=- `%prefix%preVerificationJoinMessage embed setFooter` Shows the pre-verification-join-message embed footer\
  \n- `%prefix%preVerificationJoinMessage embed setFooter epic text` Sets the pre-verification-join-message embed footer to "epic text"\
  \n- `%prefix%preVerificationJoinMessage embed setFooter null` Unsets the pre-verification-join-message embed image


command.preverificationjoinmessage.embed.setfootericon.syntax=preVerificationJoinMessage embed setFooterIcon [url* | attachment* | user* | null]
command.preverificationjoinmessage.embed.setfootericon.description=Sets the embed footer icon of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationjoinmessage.embed.setfootericon.examples=- `%prefix%preVerificationJoinMessage embed setFooterIcon` Shows the pre-verification-join-message embed footer icon\
  \n- `%prefix%preVerificationJoinMessage embed setFooterIcon ~attachment~` Sets the pre-verification-join-message embed footer icon to the attachment\
  \n- `%prefix%preVerificationJoinMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-join-message embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationJoinMessage embed setFooterIcon @user` Sets the pre-verification-join-message embed footer icon to @user's avatar\
  \n- `%prefix%preVerificationJoinMessage embed setFooterIcon null` Unsets the pre-verification-join-message embed footer icon


command.preverificationjoinmessage.response.embed.settimestamp.syntax=preVerificationJoinMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.preverificationjoinmessage.response.embed.settimestamp.description=Sets the embed timestamp of the PreVerificationJoinMessage
command.preverificationjoinmessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.preverificationjoinmessage.response.embed.settimestamp.examples=- `%prefix%preVerificationJoinMessage response embed setTimestamp` Shows the pre-verification-join-message embed timestamp\
  \n- `%prefix%preVerificationJoinMessage response embed setTimestamp current` Sets the pre-verification-join-message embed timestamp to the current time\
  \n- `%prefix%preVerificationJoinMessage response embed setTimestamp current true` Sets the pre-verification-join-message embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%preVerificationJoinMessage response embed setTimestamp 2020-05-21 12:00` Sets the pre-verification-join-message embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%preVerificationJoinMessage response embed setTimestamp null` Unsets the pre-verification-join-message embed timestamp


command.preverificationjoinmessage.embed.field.syntax=preVerificationJoinMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.preverificationjoinmessage.embed.field.description=Manages the embed fields of the PreVerificationJoinMessage


command.preverificationjoinmessage.embed.field.add.syntax=preVerificationJoinMessage embed field add <fieldTitle*> > <fieldValue*>
command.preverificationjoinmessage.embed.field.add.description=Adds an embed field to the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.preverificationjoinmessage.embed.field.add.examples=- `%prefix%preVerificationJoinMessage embed field add user > ToxicMushroom` Adds a field entry to the pre-verification-join-message embed with "user" as title and "ToxicMushroom as value


command.preverificationjoinmessage.embed.field.remove.syntax=preVerificationJoinMessage embed field remove <fieldIndex*>
command.preverificationjoinmessage.embed.field.remove.description=Removes an embed field of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationJoinMessage embed field list`
command.preverificationjoinmessage.embed.field.remove.examples=- `%prefix%preVerificationJoinMessage embed field remove 1` Removes the pre-verification-join-message embed field with index 1



command.preverificationjoinmessage.embed.field.list.syntax=preVerificationJoinMessage embed field list
command.preverificationjoinmessage.embed.field.list.description=Lists the embed fields of the PreVerificationJoinMessage


command.preverificationjoinmessage.embed.field.settitle.syntax=preVerificationJoinMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.preverificationjoinmessage.embed.field.settitle.description=Sets the embed field title of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationJoinMessage embed field list`\
  \n%help.arg.fieldtitle%
command.preverificationjoinmessage.embed.field.settitle.examples=- `%prefix%preVerificationJoinMessage embed field setTitle 1 User` Sets the pre-verification-join-message embed field title with index 1 to "User"



command.preverificationjoinmessage.embed.field.setvalue.syntax=preVerificationJoinMessage embed field setValue <fieldIndex*> <fieldValue*>
command.preverificationjoinmessage.embed.field.setvalue.description=Sets the embed field value of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationJoinMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.preverificationjoinmessage.embed.field.setvalue.examples=- `%prefix%preVerificationJoinMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.preverificationjoinmessage.embed.field.setinline.syntax=preVerificationJoinMessage embed field setInline <fieldIndex> <state>
command.preverificationjoinmessage.embed.field.setinline.description=Sets the embed field inline state of the PreVerificationJoinMessage
command.preverificationjoinmessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationJoinMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.preverificationjoinmessage.embed.field.setinline.examples=- `%prefix%preVerificationJoinMessage embed field setInline 1 true` Sets the selected pre-verification-join-message embed field at index 1 to be inlined\
  \n- `%prefix%preVerificationJoinMessage embed field setInline 1 false` Sets the selected pre-verification-join-message embed field at index 1\nnot\nto\nbe inlined



command.preverificationjoinmessage.attachments.syntax=preVerificationJoinMessage attachments <add | remove | list>
command.preverificationjoinmessage.attachments.description=Manages the attachments of the PreVerificationJoinMessage


command.preverificationjoinmessage.attachments.add.syntax=preVerificationJoinMessage attachments add <url*> <fileName*>
command.preverificationjoinmessage.attachments.add.description=Adds attachments to the PreVerificationJoinMessage
command.preverificationjoinmessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.preverificationjoinmessage.attachments.add.examples=- `%prefix%preVerificationJoinMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.preverificationjoinmessage.attachments.remove.syntax=preVerificationJoinMessage attachments remove <url*>
command.preverificationjoinmessage.attachments.remove.description=Removes attachments from the PreVerificationJoinMessage
command.preverificationjoinmessage.attachments.remove.arguments=%help.arg.url%
command.preverificationjoinmessage.attachments.remove.examples=- `%prefix%preVerificationJoinMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.preverificationjoinmessage.attachments.list.syntax=preVerificationJoinMessage attachments list
command.preverificationjoinmessage.attachments.list.description=Lists the attachments from the PreVerificationJoinMessage


command.preverificationjoinmessage.view.syntax=preVerificationJoinMessage view
command.preverificationjoinmessage.view.description=Shows a preview of the pre verification message


command.preverificationjoinmessage.setpingable.syntax=preVerificationJoinMessage setPingable [boolean*]
command.preverificationjoinmessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.preverificationjoinmessage.setpingable.arguments=%help.arg.boolean%
command.preverificationjoinmessage.setpingable.examples=- `%prefix%preVerificationJoinMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%preVerificationJoinMessage setPingable true` Sets the pre verification join message to ping when mentions are present.


command.preverificationleavemessage.syntax=preVerificationLeaveMessage <setContent | embed | attachments | view | setPingable>
command.preverificationleavemessage.description=Manages the PreVerificationLeaveMessage
command.preverificationleavemessage.help=Support variables like {user}, more info with `%prefix%help variable list`


command.preverificationleavemessage.setcontent.syntax=preVerificationLeaveMessage setContent [text* | null]
command.preverificationleavemessage.setcontent.description=Sets the text content of the PreVerificationLeaveMessage
command.preverificationleavemessage.setcontent.arguments=%help.arg.text%, can be up to 2000 characters
command.preverificationleavemessage.setcontent.examples=- `%prefix%preverificationleavemessage setContent null` Unsets the pre-verification-leave-message content\
  \n- `%prefix%preverificationleavemessage setContent welcome {user}` Sets the pre-verification-leave-message content to "welcome {user}"


command.preverificationleavemessage.embed.syntax=preVerificationLeaveMessage embed <clear | setDescription | setColor | setTitle | setTitleUrl | setAuthor | setAuthorIcon | setAuthorUrl | setThumbnail | setImage | field | setFooter | setFooterIcon>
command.preverificationleavemessage.embed.description=Sets the embed content of the PreVerificationLeaveMessage


command.preverificationleavemessage.embed.clear.syntax=preVerificationLeaveMessage embed clear
command.preverificationleavemessage.embed.clear.description=Clears the embed content of the PreVerificationLeaveMessage


command.preverificationleavemessage.embed.setdescription.syntax=preVerificationLeaveMessage embed setDescription [text* | null]
command.preverificationleavemessage.embed.setdescription.description=Sets the embed description of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setdescription.arguments=%help.arg.text%, can be up to 2000 characters
command.preverificationleavemessage.embed.setdescription.examples=- `%prefix%preVerificationLeaveMessage embed setDescription null` Unsets the pre-verification-leave-message embed description\
  \n- `%prefix%preVerificationLeaveMessage embed setDescription welcome {user}` Sets the pre-verification-leave-message embed description to "welcome {user}"


command.preverificationleavemessage.embed.setcolor.syntax=preVerificationLeaveMessage embed setColor [color* | null]
command.preverificationleavemessage.embed.setcolor.description=Sets the embed color of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setcolor.arguments=%help.arg.color%
command.preverificationleavemessage.embed.setcolor.examples=- `%prefix%preVerificationLeaveMessage embed setColor #FFFFFF` Sets the pre-verification-leave-message embed color to white\
  \n- `%prefix%preVerificationLeaveMessage embed setColor null` Unsets the pre-verification-leave-message embed color


command.preverificationleavemessage.embed.settitle.syntax=preVerificationLeaveMessage embed setTitle [text* | null]
command.preverificationleavemessage.embed.settitle.description=Sets the embed title of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.settitle.arguments=%help.arg.text%
command.preverificationleavemessage.embed.settitle.examples=- `%prefix%preVerificationLeaveMessage embed setTitle welcome {user}` Sets the pre-verification-leave-message embed title to "welcome {user}"\
  \n- `%prefix%preVerificationLeaveMessage embed setTitle null` Unsets the pre-verification-leave-message embed title


command.preverificationleavemessage.embed.settitleurl.syntax=preVerificationLeaveMessage embed setTitleUrl [url* | null]
command.preverificationleavemessage.embed.settitleurl.description=Sets the embed title url of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.settitleurl.arguments=%help.arg.url%
command.preverificationleavemessage.embed.settitleurl.examples=- `%prefix%preVerificationLeaveMessage embed setTitleUrl https://melijn.com` Sets the pre-verification-leave-message embed title url to "https://melijn.com"\
  \n- `%prefix%preVerificationLeaveMessage embed setTitleUrl null` Unsets the pre-verification-leave-message embed title url


command.preverificationleavemessage.embed.setauthor.syntax=preVerificationLeaveMessage embed setAuthor [embedAuthor* | null]
command.preverificationleavemessage.embed.setauthor.description=Sets the embed author of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setauthor.arguments=%help.arg.embedauthor%
command.preverificationleavemessage.embed.setauthor.examples=- `%prefix%preVerificationLeaveMessage embed setAuthor` Shows the pre-verification-leave-message embed author\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthor {username}` Sets the pre-verification-leave-message embed author to "{username}"\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthor null` Unsets the pre-verification-leave-message embed author


command.preverificationleavemessage.embed.setauthoricon.syntax=preVerificationLeaveMessage embed setAuthorIcon [url* | attachment* | user* | null]
command.preverificationleavemessage.embed.setauthoricon.description=Sets the embed author icon of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setauthoricon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationleavemessage.embed.setauthoricon.examples=- `%prefix%preVerificationLeaveMessage embed setAuthorIcon` Shows the pre-verification-leave-message embed author\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorIcon ~attachment~` Sets the pre-verification-leave-message embed author icon to the attachment\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorIcon @user` Sets the pre-verification-leave-message embed author icon to @user's avatar\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-leave-message embed author icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorIcon null` Unsets the pre-verification-leave-message embed author


command.preverificationleavemessage.embed.setauthorurl.syntax=preVerificationLeaveMessage embed setAuthorUrl [url* | null]
command.preverificationleavemessage.embed.setauthorurl.description=Sets the embed author url of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setauthorurl.arguments=%help.arg.url%
command.preverificationleavemessage.embed.setauthorurl.examples=- `%prefix%preVerificationLeaveMessage embed setAuthorUrl` Shows the pre-verification-leave-message embed author url\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorUrl https://google.com/` Sets the pre-verification-leave-message embed author url to "https://google.com/"\
  \n- `%prefix%preVerificationLeaveMessage embed setAuthorUrl null` Unsets the pre-verification-leave-message embed author


command.preverificationleavemessage.embed.setthumbnail.syntax=preVerificationLeaveMessage embed setThumbnail [url* | attachment | user* | null]
command.preverificationleavemessage.embed.setthumbnail.description=Sets the embed thumbnail of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setthumbnail.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationleavemessage.embed.setthumbnail.examples=- `%prefix%preVerificationLeaveMessage embed setThumbnail` Shows the pre-verification-leave-message embed thumbnail\
  \n- `%prefix%preVerificationLeaveMessage embed setThumbnail ~attachment~` Sets the pre-verification-leave-message embed thumbnail to the attachment\
  \n- `%prefix%preVerificationLeaveMessage embed setThumbnail https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-leave-message embed thumbnail to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationLeaveMessage embed setThumbnail @user` Sets the custom command's embed thumbnail to @user's avatar\
  \n- `%prefix%preVerificationLeaveMessage embed setThumbnail null` Unsets the pre-verification-leave-message embed thumbnail


command.preverificationleavemessage.embed.setimage.syntax=preVerificationLeaveMessage embed setImage [url*]
command.preverificationleavemessage.embed.setimage.description=Sets the embed image of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setimage.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationleavemessage.embed.setimage.examples=- `%prefix%preVerificationLeaveMessage embed setImage` Shows the pre-verification-leave-message embed image\
  \n- `%prefix%preVerificationLeaveMessage embed setImage ~attachment~` Sets the pre-verification-leave-message embed image to the attachment\
  \n- `%prefix%preVerificationLeaveMessage embed setImage https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-leave-message embed image to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationLeaveMessage embed setImage @user` Sets the pre-verification-leave-message embed image to @user's avatar\
  \n- `%prefix%preVerificationLeaveMessage embed setImage null` Unsets the pre-verification-leave-message embed image


command.preverificationleavemessage.embed.setfooter.syntax=preVerificationLeaveMessage embed setFooter [text*]
command.preverificationleavemessage.embed.setfooter.description=Sets the embed footer of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setfooter.arguments=%help.arg.text%
command.preverificationleavemessage.embed.setfooter.examples=- `%prefix%preVerificationLeaveMessage embed setFooter` Shows the pre-verification-leave-message embed footer\
  \n- `%prefix%preVerificationLeaveMessage embed setFooter epic text` Sets the pre-verification-leave-message embed footer to "epic text"\
  \n- `%prefix%preVerificationLeaveMessage embed setFooter null` Unsets the pre-verification-leave-message embed image


command.preverificationleavemessage.embed.setfootericon.syntax=preVerificationLeaveMessage embed setFooterIcon [url* | attachment* | user* | null]
command.preverificationleavemessage.embed.setfootericon.description=Sets the embed footer icon of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.setfootericon.arguments=%help.arg.url%\
  \n%help.arg.attachment%\
  \n%help.arg.user%
command.preverificationleavemessage.embed.setfootericon.examples=- `%prefix%preVerificationLeaveMessage embed setFooterIcon` Shows the pre-verification-leave-message embed footer icon\
  \n- `%prefix%preVerificationLeaveMessage embed setFooterIcon ~attachment~` Sets the pre-verification-leave-message embed footer icon to the attachment\
  \n- `%prefix%preVerificationLeaveMessage embed setFooterIcon https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg` Sets the pre-verification-leave-message embed footer icon to "https://purr.objects-us-east-1.dream.io/i/ml5ow.jpg"\
  \n- `%prefix%preVerificationLeaveMessage embed setFooterIcon @user` Sets the pre-verification-leave-message embed footer icon to @user's avatar\
  \n- `%prefix%preVerificationLeaveMessage embed setFooterIcon null` Unsets the pre-verification-leave-message embed footer icon


command.preverificationleavemessage.response.embed.settimestamp.syntax=preVerificationLeaveMessage response embed setTimestamp [datetime* | current | null] [autoUpdate: boolean*]
command.preverificationleavemessage.response.embed.settimestamp.description=Sets the embed timestamp of the PreVerificationLeaveMessage
command.preverificationleavemessage.response.embed.settimestamp.arguments=%help.arg.datetime%\
  \n%help.arg.boolean%, positive: timestamp will update to current when the message is shown, negative: will show timestamp as set
command.preverificationleavemessage.response.embed.settimestamp.examples=- `%prefix%preVerificationLeaveMessage response embed setTimestamp` Shows the pre-verification-leave-message embed timestamp\
  \n- `%prefix%preVerificationLeaveMessage response embed setTimestamp current` Sets the pre-verification-leave-message embed timestamp to the current time\
  \n- `%prefix%preVerificationLeaveMessage response embed setTimestamp current true` Sets the pre-verification-leave-message embed timestamp to the current time but will be auto updated when sent\
  \n- `%prefix%preVerificationLeaveMessage response embed setTimestamp 2020-05-21 12:00` Sets the pre-verification-leave-message embed timestamp to the 21th of may 2020 at 12:00\
  \n- `%prefix%preVerificationLeaveMessage response embed setTimestamp null` Unsets the pre-verification-leave-message embed timestamp



command.preverificationleavemessage.embed.field.syntax=preVerificationLeaveMessage embed field <add | remove | list | setTitle | setValue | setInline>
command.preverificationleavemessage.embed.field.description=Manages the embed fields of the PreVerificationLeaveMessage


command.preverificationleavemessage.embed.field.add.syntax=preVerificationLeaveMessage embed field add <fieldTitle*> > <fieldValue*>
command.preverificationleavemessage.embed.field.add.description=Adds an embed field to the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.field.add.arguments=%help.arg.fieldtitle%\
  \n%help.arg.fieldvalue%
command.preverificationleavemessage.embed.field.add.examples=- `%prefix%preVerificationLeaveMessage embed field add user > ToxicMushroom` Adds a field entry to the pre-verification-leave-message embed with "user" as title and "ToxicMushroom as value


command.preverificationleavemessage.embed.field.remove.syntax=preVerificationLeaveMessage embed field remove <fieldIndex*>
command.preverificationleavemessage.embed.field.remove.description=Removes an embed field of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.field.remove.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationLeaveMessage embed field list`
command.preverificationleavemessage.embed.field.remove.examples=- `%prefix%preVerificationLeaveMessage embed field remove 1` Removes the pre-verification-leave-message embed field with index 1



command.preverificationleavemessage.embed.field.list.syntax=preVerificationLeaveMessage embed field list
command.preverificationleavemessage.embed.field.list.description=Lists the embed fields of the PreVerificationLeaveMessage


command.preverificationleavemessage.embed.field.settitle.syntax=preVerificationLeaveMessage embed field setTitle <fieldIndex*> <fieldTitle*>
command.preverificationleavemessage.embed.field.settitle.description=Sets the embed field title of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.field.settitle.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationLeaveMessage embed field list`\
  \n%help.arg.fieldtitle%
command.preverificationleavemessage.embed.field.settitle.examples=- `%prefix%preVerificationLeaveMessage embed field setTitle 1 User` Sets the pre-verification-leave-message embed field title with index 1 to "User"



command.preverificationleavemessage.embed.field.setvalue.syntax=preVerificationLeaveMessage embed field setValue <fieldIndex*> <fieldValue*>
command.preverificationleavemessage.embed.field.setvalue.description=Sets the embed field value of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.field.setvalue.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationLeaveMessage response embed field list`\
  \n%help.arg.fieldtitle%
command.preverificationleavemessage.embed.field.setvalue.examples=- `%prefix%preVerificationLeaveMessage response embed field setValue 1 ToxicMushroom` Sets the selected custom command's embed response's embed field value with index 1 to "ToxicMushroom"



command.preverificationleavemessage.embed.field.setinline.syntax=preVerificationLeaveMessage embed field setInline <fieldIndex> <state>
command.preverificationleavemessage.embed.field.setinline.description=Sets the embed field inline state of the PreVerificationLeaveMessage
command.preverificationleavemessage.embed.field.setinline.arguments=%help.arg.fieldindex%; the fieldIndex can be viewed with `%prefix%preVerificationLeaveMessage embed field list`\
  \n%help.arg.state%; positive means the field will be inline; negative means the field will not be inline
command.preverificationleavemessage.embed.field.setinline.examples=- `%prefix%preVerificationLeaveMessage embed field setInline 1 true` Sets the selected pre-verification-leave-message embed field at index 1 to be inlined\
  \n- `%prefix%preVerificationLeaveMessage embed field setInline 1 false` Sets the selected pre-verification-leave-message embed field at index 1\nnot\nto\nbe inlined



command.preverificationleavemessage.attachments.syntax=preVerificationLeaveMessage attachments <add | remove | list>
command.preverificationleavemessage.attachments.description=Manages the attachments of the PreVerificationLeaveMessage


command.preverificationleavemessage.attachments.add.syntax=preVerificationLeaveMessage attachments add <url*> <fileName*>
command.preverificationleavemessage.attachments.add.description=Adds attachments to the PreVerificationLeaveMessage
command.preverificationleavemessage.attachments.add.arguments=%help.arg.url%\
  \n%help.arg.filename%
command.preverificationleavemessage.attachments.add.examples=- `%prefix%preVerificationLeaveMessage attachments add https://purr.objects-us-east-1.dream.io/i/KVXck.jpg cat.jpg` Adds an attachment to the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg" and filename "cat.jpg"


command.preverificationleavemessage.attachments.remove.syntax=preVerificationLeaveMessage attachments remove <url*>
command.preverificationleavemessage.attachments.remove.description=Removes attachments from the PreVerificationLeaveMessage
command.preverificationleavemessage.attachments.remove.arguments=%help.arg.url%
command.preverificationleavemessage.attachments.remove.examples=- `%prefix%preVerificationLeaveMessage attachments remove https://purr.objects-us-east-1.dream.io/i/KVXck.jpg` Removes the attachment from the pre verification message with url "https://purr.objects-us-east-1.dream.io/i/KVXck.jpg"


command.preverificationleavemessage.attachments.list.syntax=preVerificationLeaveMessage attachments list
command.preverificationleavemessage.attachments.list.description=Lists the attachments from the PreVerificationLeaveMessage


command.preverificationleavemessage.view.syntax=preVerificationLeaveMessage view
command.preverificationleavemessage.view.description=Shows a preview of the pre verification message


command.preverificationleavemessage.setpingable.syntax=preVerificationLeaveMessage setPingable [boolean*]
command.preverificationleavemessage.setpingable.description=Sets whether the message should ping when mentions are present.
command.preverificationleavemessage.setpingable.arguments=%help.arg.boolean%
command.preverificationleavemessage.setpingable.examples=- `%prefix%preVerificationLeaveMessage setPingable` Shows if the message will ping or not (default: false)\
  \n- `%prefix%preVerificationLeaveMessage setPingable true` Sets the pre verification leave message to ping when mentions are present.


command.setembedstate.syntax=setEmbedState [state*]
command.setembedstate.description=Sets the embed state of all bot messages
command.setembedstate.currentstateresponse=Embeds are currently **%disabledState%**
command.setembedstate.set.success=Embeds have successfully been **%disabledState%**
command.setembedstate.arguments=%help.arg.state%
command.setembedstate.examples=- `%prefix%setEmbedState enabled` Enables embeds for the bot\
  \n- `%prefix%setEmbedState disabled` Disables embeds for the bot


command.stats.syntax=stats
command.stats.description=Shows the bot, vps and jvm stats
command.stats.response.field1.title=Bot Stats
command.stats.response.field2.title=Server Stats
command.stats.response.field3.title=JVM Stats
command.stats.response.field1.value=**Shards:** %shardCount%\
  \n**Cached Users:** %userCount%\
  \n**Servers:** %serverCount%\
  \n**Listening/VoiceChannels:** %cVCCount%\
  \n**Threads:** %botThreadCount%\
  \n**Uptime:** %botUptime%\
  \n**Queued Tracks:** %queuedTracks%\
  \n**Music Players:** %musicPlayers%
command.stats.response.field2.value=**Cores:** %coreCount%\
  \n**RAM Usage:** %ramUsage%\
  \n**System Uptime:** %systemUptime%
command.stats.response.field3.value=**CPU Usage:** %jvmCPUUsage%\
  \n**Ram Usage:** %ramUsage%\
  \n**Threads:** %threadCount%


command.help.syntax=help [list | variable | argument | command*]
command.help.description=Shows info about commands
command.help.embed.title=Help Menu
command.help.embed.description=__**Prefix:**__ `%serverPrefix%`\
  \n__**Commands:**__ `%prefix%help list` or on the **[website](https://melijn.com/commands)**\
  \n__**Invite:**__ **[link](https://melijn.com/invite)**\
  \n\n**Command Help:** `%prefix%help <command*>` -> `%prefix%help play`
command.help.cmd.title=Help of **%cmdName%**
command.help.cmd.syntax=Syntax
command.help.cmd.aliases=Aliases
command.help.cmd.description=Description
command.help.cmd.help=Help
command.help.cmd.arguments=Arguments
command.help.cmd.examples=Examples
command.help.cmd.category=Category
command.help.arguments=%help.arg.command%
command.help.examples=- `%prefix%help setEmbedState` Shows help for the SetEmbedState command\
  \n- `%prefix%help joinMessage embed setTitle` Shows help for the setTitle subcommand of the embed subcommand of the JoinMessage command


command.help.argument.syntax=help argument <list | argument: text*>
command.help.argument.description=Shows help about an argument
command.help.argument.embed.title=Help of argument: %argName%
command.help.argument.embed.examples=Examples
command.help.argument.missing=It seems that the argument you requested has no help, if you think this is missing then contact support
command.help.argument.arguments=%help.arg.text%, argument: this text represents the argument, use `%prefix%help argument list` for a list of possibilities
command.help.argument.examples=- `%prefix%help argument user` Shows help about the user argument


command.help.argument.list.syntax=help argument list
command.help.argument.list.description=Shows a list of possible arguments
command.help.argument.list.title=List of arguments


command.help.variable.syntax=help variable <list | text*>
command.help.variable.description=Shows help about a variable
command.help.variable.embed.title=Help of variable: %varName%
command.help.variable.missing=It seems that the variable you requested has no help, if you think this is missing then contact support
command.help.variable.arguments=%help.arg.text%, this text represents the variable, use `%prefix%help variable list` for a list of possibilities
command.help.variable.examples=- `%prefix%help variable username` Shows help about the username variable


command.help.variable.list.syntax=help variable list
command.help.variable.list.description=Shows a list of possible variables
command.help.variable.list.title=List of variables


command.help.list.syntax=help list [commandCategory*]
command.help.list.description=Shows the list of commands
command.help.list.title=Command List
command.help.list.field1.title=ℹ Utility
command.help.list.field2.title=🛠 Administration
command.help.list.field3.title=🔨 Moderation
command.help.list.field4.title=🎶 Music
command.help.list.field5.title=🎨 Image
command.help.list.field6.title=🐱 Animal
command.help.list.field7.title=⛩️ Anime
command.help.list.field8.title=💸 Economy
command.help.list.field9.title=🎲 Games
command.help.list.field10.title=🔞 NSFW
command.help.list.footer=Command count: %cmdCount%
command.help.list.arguments=%help.arg.commandcategory%
command.help.list.examples=- `%prefix%help list` list of all commands\
  \n- `%prefix%help list music` list of all commands in the music category


command.avatar.syntax=avatar [user*]
command.avatar.description=Shows the avatar of a user
command.avatar.title=Avatar of %user%
command.avatar.links=Links:
command.avatar.arguments=%help.arg.user%
command.avatar.examples=- `%prefix%avatar` Shows your avatar\
  \n- `%prefix%avatar @ToxicMushroom` Shows the avatar of ToxicMushroom


command.serverinfo.syntax=serverInfo [serverId*]
command.serverinfo.description=Shows info about the server
command.serverinfo.response1.field1.title=General Information
command.serverinfo.response1.field1.value=**Name:** %serverName%\
  \n**ID:** %serverId%\
  \n**Region:** %region%\
  \n**VIP Region:** %isVip%\
  \n**Supports Melijn:** %supportsMelijn%\
  \n**Owner:** %owner%\
  \n**Creation Time:** %creationDate%\
  \n**Verification Level:** %verificationLevel%\
  \n**Multi Factor Authentication Level:** %mfa%
command.serverinfo.response1.field2.title=Statistic Information
command.serverinfo.response1.field2.value=**Members:** %memberCount%\
  \n**Users:** %userCount% (%userPercent%% of users)\
  \n**Bots:** %botCount% (%botPercent%% of Users)\
  \n**Boosts:** %boostCount%\
  \n**Boost Tier:** %boostTier%\
  \n**Roles:** %roleCount%\
  \n**Text Channels:** %textChannelCount%\
  \n**Voice Channels:** %voiceChannelCount%\
  \n**Categories:** %categoryCount%
command.serverinfo.response1.field3.title=Images
command.serverinfo.response1.field3.value.part1=[Icon](%iconUrl%)\n
command.serverinfo.response1.field3.value.part2=[Banner](%bannerUrl%)\n
command.serverinfo.response1.field3.value.part3=[Splash](%splashUrl%)\n
command.serverinfo.response1.field3.value.part4=[Vanity](%vanityUrl%)\n


command.color.syntax=color <color*>
command.color.description=Show information about the color
command.color.eb.hex.title=Hex info
command.color.eb.rgb.title=RGB info
command.color.eb.dec.title=Decimal info
command.color.arguments=%help.arg.color%
command.color.examples=- `%prefix%color #4d34d2` Shows color info of the color #4d34d2


command.userinfo.syntax=userInfo [user*]
command.userinfo.description=Shows info about a user, even more if the user is also a member
command.userinfo.response1.field1.title=User Info
command.userinfo.response1.field1.value=**Name:** %name%\
  \n**Discriminator:** %discrim%\
  \n**ID:** %userId%\
  \n**Bot:** %isBot%\
  \n**Supports Melijn:** %supportsMelijn%\
  \n**Avatar:** [link](%avatarUrl%)\
  \n**Creation Time:** %creationTime%
command.userinfo.response1.field2.title=Member Info
command.userinfo.response1.field2.value=**Roles:** %roleCount%\
  \n**Nickname:** %nickname%\
  \n**Server Owner:** %isOwner%\
  \n**Join Time:** %joinTime%\
  \n**Boost Time:** %boostTime%\
  \n**Voice Status:** %voiceStatus%\
  \n**Can Melijn Interact:** %canMelijnInteract%
command.userinfo.arguments=%help.arg.user%
command.userinfo.examples=- `%prefix%userInfo` Shows user info of yourself\
  \n- `%prefix%userInfo @ToxicMushroom` Shows user info of ToxicMushroom


command.idinfo.syntax=idInfo <id: number*>
command.idinfo.description=Shows when the id was created
command.idinfo.arguments=%help.arg.number%
command.idinfo.examples=- `%prefix%idInfo 231459866630291459` Shows the create date time for this id 


command.tokeninfo.syntax=tokenInfo <token*>
command.tokeninfo.description=Shows info about your token
command.tokeninfo.arguments=%help.arg.token%
command.tokeninfo.examples=- `%prefix%tokeninfo NTM4NzkyMjYxOTgzNTM1MTE2.XEyrZQ.bT6pNR9VUtQEwhQoWtsZLEKRxfY`


command.iam.syntax=iam <role*>
command.iam.description=Gives you the role if available
command.iam.success=You now have the %role% role
command.iam.failed=Failed to give you the %role% role, cause: ```%cause%```
command.iam.notselfroleable=**%role%** is not self-assignable with `%prefix%iam`
command.iam.nocomplexroles=**%role%** is in a complex group that is unsupported by the `%prefix%iam` command, these groups can only be used in reaction menus
command.iam.notfound=**%role%** is not self-assignable
command.iam.help=Use `%prefix%roles available` to see what roles can be assigned with the iam command
command.iam.arguments=%help.arg.role%
command.iam.examples=- `%prefix%iam @male` Gives you the male role when this is available ofcourse


command.iamnot.syntax=iamNot <role*>
command.iamnot.description=Removes the role from you if available
command.iamnot.success=You no longer have the %role% role
command.iamnot.failed=Failed to give you the %role% role, cause: ```%cause%```
command.iamnot.notselfroleable=**%role%** is not self-removable with `%prefix%iamNot`
command.iamnot.nocomplexroles=**%role%** is in a complex group that is unsupported by the `%prefix%iamNot` command, these groups can only be used in reaction menus
command.iamnot.notfound=**%role%** is not self-removable
command.iamnot.help=Use `%prefix%roles available` to see what roles can be removed with the iamNot command
command.iamnot.arguments=%help.arg.role%
command.iamnot.examples=- `%prefix%iamNot @male` Removes the male role from you


command.roleinfo.syntax=roleInfo [role*]
command.roleinfo.description=Shows info about a role
command.roleinfo.response1.field1.title=Role Info
command.roleinfo.response1.field1.value=**Name** %roleName%\
  \n**ID** %roleId%\
  \n**Creation Time** %creationTime%\
  \n**Position** %position%\
  \n**Members** %members%\
  \n**Mentionable** %isMentionable%\
  \n**Hoisted** %isHoisted%\
  \n**Managed** %isManaged%\
  \n**Color** %color%\
  \n**Can Melijn Interact** %canMelijnInteract%
command.roleinfo.arguments=%help.arg.role%
command.roleinfo.examples=- `%prefix%roleInfo @Admin` Shows role info of Admin


command.channelinfo.syntax=channelInfo <textChannel* | voiceChannel*>
command.channelinfo.description=Shows info about a channel
command.channelinfo.arguments=%help.arg.textchannel%\
  \n%help.arg.voicechannel%
command.channelinfo.examples=- `%prefix%channelInfo #general` Shows info of general\
  \n- `%prefix%channelInfo voice-1` Shows info of voice-1



command.roles.syntax=roles [serverId*]
command.roles.description=Shows the list of roles of a server
command.roles.response1.title=**Roles List** of %serverName%


command.shards.syntax=shards
command.shards.description=Shows a table of information about each shard
command.shards.noshardmanager=The bot is not sharding


command.unicode.syntax=unicode <text*>
command.unicode.description=Returns the unicode of each character of the input
command.unicode.arguments=%help.arg.text%, max length is 100 characters
command.unicode.examples=- `%prefix%unicode 😂` returns "`\\uD83D\\uDE02`   :joy:   FACE WITH TEARS OF JOY"


command.calculate.syntax=calculate <math*>
command.calculate.description=Takes away the pain of solving math
command.calculate.arguments=%help.arg.math%
command.calculate.help=https://github.com/mariuszgromada/MathParser.org-mXparser#number-format


command.emote.syntax=emote <emote*>
command.emote.description=Shows info about the emote
command.emote.notanemote=**%arg%** is not an emote
command.emote.response1.part1=**ID** %id%\
\n**Name** %name%
command.emote.response1.part2=\n**Animated** %isAnimated%\
\n**URL** %url%
command.emote.response1.extra=\n**Creation Time** %creationTime%
command.emote.arguments=%help.arg.emote%, bot needs to be able to access the emote
command.emote.examples=- `%prefix%emote :pog:` Shows info of the pog emote


command.poll.syntax=poll
command.poll.description=Command to manage polls
command.poll.addtimed.syntax=poll addTimed <duration*> [textchannel*] <question: string*>  <answer1: string*> <answer2: string*> [answer..: string*]
command.poll.add.syntax=poll add [textchannel*] <question: string*>  <answer1: string*> <answer2: string*> [answer..: string*]
command.poll.tomanyarguments=The max amount of answers is **%max%**


command.info.syntax=info
command.info.description=Show info about the bot
command.info.field1.title=About
command.info.field1.value=Melijn is an opensource discord bot written in kotlin with <3 by **%ownerTag%**. Melijn is made to support a big user base and aimed at providing moderation, administration, customization, utilities, music and more. If you have problems or suggestion then don't hesitate to report them in our support server below :)\
  \n​\n**[Support Server](%invite%)** • **[Bot Invite](%botInvite%)** • **[Website](%website%)**\n​
command.info.field2.title=Info
command.info.field2.value=**Coded in** Kotlin and Java\
  \n**Commands** %commandCount%\n​
command.info.field3.title=Versions
command.info.field3.value=**Java Version** %javaVersion%\
  \n**Kotlin Version** %kotlinVersion%


command.setmusic247.syntax=setMusic247 <state: boolean*>
command.setmusic247.description=Configures the bot to never leave the voice channel or not
command.setmusic247.show.enabled=The 24/7 mode is currently **enabled**
command.setmusic247.show.disabled=The 24/7 mode is currently **disabled**
command.setmusic247.set.enabled=The 24/7 mode has been **enabled**
command.setmusic247.set.disabled=The 24/7 mode has been **disabled**
command.setmusic247.arguments=%help.arg.boolean%, state: positive states enable the mode, negative states disable the mode
command.setmusic247.examples=- `%prefix%setMusic247 enabled` Enables the 24/7 mode\
  \n- `%prefix%setMusic247 disabled` Disables the 24/7 mode\
  \n- `%prefix%setMusic247` Shows the state of the 24/7 mode


command.permission.syntax=permission <user | role | channel>
command.permission.description=Manages who is able to use certain commands
command.permission.help=channel role perms override role perms\nuser perms override both role and channel role perms\nchannel user perms override all


command.permission.user.syntax=permission user <set | view | copy | clear>
command.permission.user.description=Manages the user permissions


command.permission.user.set.syntax=permission user set <user*> <permissionNode*> <permState*>
command.permission.user.set.description=Sets the user permissions
command.permission.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%**
command.permission.user.set.arguments=%help.arg.user%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%
command.permission.user.set.examples=- `%prefix%permission user set @ToxicMushroom setstreamurl true` Allows ToxicMushroom to use setStreamUrl


command.permission.user.view.syntax=permission user view <user*> [permissionNode*]
command.permission.user.view.description=Sets the user permissions
command.permission.user.view.response1.title=Permissions of **%user%** that match `%permissionNode%`


command.permission.user.copy.syntax=permission user copy <user | role | channel>
command.permission.user.copy.description=Command for copying user permissions to another entity


command.permission.user.copy.user.syntax=permission user copy user <user*> <user*>
command.permission.user.copy.user.description=Copies user permissions to another user
command.permission.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** to **%user2%**
command.permission.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** to **%user2%**
command.permission.user.copy.user.arguments=%help.arg.user%
command.permission.user.copy.user.examples=- `%prefix%permission user copy user @ToxicMushroom @YingHamster` Copies all of ToxicMushroom's permissions to YingHamster and overwrites duplicates


command.permission.user.copy.role.syntax=permission user copy role <user*> <role*>
command.permission.user.copy.role.description=Copies user permissions to a role
command.permission.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** to `%role%`
command.permission.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** to `%role%`
command.permission.user.copy.role.arguments=%help.arg.user%\
  \n%help.arg.role%
command.permission.user.copy.role.examples=- `%prefix%permission user copy role @ToxicMushroom @Admin` Copies all of ToxicMushroom's permissions to Admin role and overwrites duplicates


command.permission.user.copy.channel.syntax=permission user copy channel <user | role>
command.permission.user.copy.channel.description=Copies user permissions to an entity bound to a channel


command.permission.user.copy.channel.user.syntax=permission user copy channel user <user*> <textChannel*> <user*>
command.permission.user.copy.channel.user.description=Copies user permissions to a user bound to a channel
command.permission.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.user.copy.channel.user.arguments=%help.arg.user%\
  \n%help.arg.textchannel%
command.permission.user.copy.channel.user.examples=- `%prefix%permission user copy channel user @ToxicMushroom #bots @YingHamster` Copies all of ToxicMushroom's permissions to @YingHamster bound to #bots and overwrites duplicates



command.permission.user.copy.channel.role.syntax=permission user copy channel role <user*> <textChannel*> <role*>
command.permission.user.copy.channel.role.description=Copies user permissions to a role bound to a channel
command.permission.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.user.copy.channel.role.arguments=%help.arg.user%\
  \n%help.arg.textchannel%\
  \n%help.arg.role%
command.permission.user.copy.channel.role.examples=- `%prefix%permission user copy channel role @ToxicMushroom #bots @Admin` Copies all of ToxicMushroom's permissions to Admin role bound to #bots and overwrites duplicates


command.permission.user.clear.syntax=permission user clear <user*>
command.permission.user.clear.description=Copies the user's permissions
command.permission.user.clear.response1=Permissions for **%user%** have been cleared
command.permission.user.clear.arguments=%help.arg.user%
command.permission.user.clear.examples=- `%prefix%permission user clear @ToxicMushroom` Clears ToxicMushroom's permissions+


command.permission.role.syntax=permission role <set | view | copy | clear>
command.permission.role.description=Manages role permissions


command.permission.role.set.syntax=permission role set <role*> <permissionNode*> <permState*>
command.permission.role.set.description=Sets the permission permState of roles
command.permission.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%`
command.permission.role.set.arguments=%help.arg.role%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%
command.permission.role.set.examples=- `%prefix%permission role set @Admin deniedFilters.* true` Allows users with the admin role to use all of deniedFilters' sub commands


command.permission.role.view.syntax=permission role view <role*> [permissionNode*]
command.permission.role.view.description=Shows the role's permission states
command.permission.role.view.response1.title=Permissions of `%role%` that match `%permissionNode%`
command.permission.role.view.arguments=%help.arg.role%\
  \n%help.arg.permissionnode%
command.permission.role.view.examples=- `%prefix%permission role view @Admin` Shows all permission states of the admin role\
  \n- `%prefix%permission role view @Admin deniedFilters.*` Shows the permission states that match deniedFilters.* of the admin role


command.permission.role.copy.syntax=permission role copy <user | role | channel>
command.permission.role.copy.description=Copies permissions from a role to another entity


command.permission.role.copy.user.syntax=permission role copy user <role*> <user*>
command.permission.role.copy.user.description=Copies permissions from a role to a user
command.permission.role.copy.user.response1=Copied **%permissionCount%** permission from **%role%** to **%user%**
command.permission.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%role%** to **%user%**
command.permission.role.copy.user.arguments=%help.arg.role%\
  \n%help.arg.user%
command.permission.role.copy.user.examples=- `%prefix%permission role copy user @Admin @ToxicMushroom` Copies all permissions of the admin role to @ToxicMushroom and overrides existing ones


command.permission.role.copy.role.syntax=permission role copy role <role*> <role*>
command.permission.role.copy.role.description=Copies permissions from a role to another role
command.permission.role.copy.role.response1=Copied **%permissionCount%** permission from **%role1%** to **%role2%**
command.permission.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%role1%** to **%role2%**
command.permission.role.copy.role.arguments=%help.arg.role%
command.permission.role.copy.role.examples=- `%prefix%permission role copy role @Moderator @Admin` Copies all permissions of the moderator role to the admin role and overrides existing ones


command.permission.role.copy.channel.syntax=permission role copy channel <role | role>
command.permission.role.copy.channel.description=Copies permissions from a role to another role bound to a channel


command.permission.role.copy.channel.user.syntax=permission role copy channel user <role*> <textChannel*> <user*>
command.permission.role.copy.channel.user.description=Copies permissions from a role to a user bound to a channel
command.permission.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` to **%user%** in **%channel%**
command.permission.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` to **%user%** in **%channel%**
command.permission.role.copy.channel.user.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.permission.role.copy.channel.user.examples=- `%prefix%permission role copy channel user @Moderator #bots @ToxicMushroom` Copies all permissions of the moderator role to @ToxicMushroom bound to #bots and overrides existing ones


command.permission.role.copy.channel.role.syntax=permission role copy channel role <role*> <textChannel*> <role*>
command.permission.role.copy.channel.role.description=Copies permissions from a role to a role bound to a channel
command.permission.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` to `%role2%` in **%channel%**
command.permission.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` to `%role2%` in **%channel%**
command.permission.role.copy.channel.role.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.permission.role.copy.channel.role.examples=- `%prefix%permission role copy channel role @Moderator #bots @Admin` Copies all permissions of the moderator role to the admin role bound to #bots and overrides existing ones


command.permission.role.clear.syntax=permission role clear <role*>
command.permission.role.clear.description=Clears all permissions of a role
command.permission.role.clear.response1=Permissions for `%role%` have been cleared


command.permission.channel.syntax=permission channel <role | user>
command.permission.channel.description=Manages the permissions of an entity bound to a channel


command.permission.channel.role.syntax=permission channel role <set | view | copy | clear>
command.permission.channel.role.description=Manages the permissions of a role bound to a channel


command.permission.channel.role.set.syntax=permission channel role set <textChannel*> <role*> <permissionNode*> <permState*>
command.permission.channel.role.set.description=Sets the role bound to a channel's permissions
command.permission.channel.role.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for `%role%` in **%channel%**
command.permission.channel.role.set.arguments=%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%
command.permission.channel.role.set.examples=- `%prefix%permission channel role set #bots @Moderator deniedFilters.* true` Allows users with the moderator role to use all the subcommands of deniedFilters in #bots


command.permission.channel.role.view.syntax=permission channel role view <textChannel*> <role*> [permissionNode*]
command.permission.channel.role.view.description=Shows permission info of a role bound to a channel
command.permission.channel.role.view.response1.title=Permissions of `%role%` in **%channel%** that match `%permissionNode%`
command.permission.channel.role.view.arguments=%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%
command.permission.channel.role.view.examples=- `%prefix%permission role view #bots @Admin` Shows all permission states of the admin role in #bots\
  \n- `%prefix%permission role view #bots @Admin deniedFilters.*` Shows the permission states that match deniedFilters.* of the admin role in #bots


command.permission.channel.role.copy.syntax=permission channel role copy <user | role | channel>
command.permission.channel.role.copy.description=Copies a role bound to a channel's permissions to an entity


command.permission.channel.role.copy.user.syntax=permission channel role copy user <textChannel*> <role*> <user*>
command.permission.channel.role.copy.user.description=Copies the permissions of a role bound to a channel to a user
command.permission.channel.role.copy.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel%** to **%user%**
command.permission.channel.role.copy.user.arguments=%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.user%
command.permission.channel.role.copy.user.examples=- `%prefix%permission channel role copy user #bots @Admin @ToxicMushroom` Copies the permissions of the admin role bound to #bots to @ToxicMushroom


command.permission.channel.role.copy.role.syntax=permission role copy role <textChannel*> <role*> <role*>
command.permission.channel.role.copy.role.description=Copies the permissions of a role bound to a channel to a role
command.permission.channel.role.copy.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel%** to `%role2%`
command.permission.channel.role.copy.role.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.permission.channel.role.copy.role.examples=- `%prefix%permission channel role copy role #bots @Admin @Moderator` Copies the permissions of the admin role bound to #bots to the moderator role


command.permission.channel.role.copy.channel.syntax=permission channel role copy channel <role | role>
command.permission.channel.role.copy.channel.description=Copies permissions of a role bound to a channel to an entity bound to a channel


command.permission.channel.role.copy.channel.user.syntax=permission channel role copy channel user <textChannel*> <role*> <textChannel*> <user*>
command.permission.channel.role.copy.channel.user.description=Copies permissions of a role bound to a channel to a user bound to a channel
command.permission.channel.role.copy.channel.user.response1=Copied **%permissionCount%** permission from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from `%role%` in **%channel1%** to **%user%** in **%channel2%**
command.permission.channel.role.copy.channel.user.arguments=%help.arg.role%\
  \n%help.arg.textchannel%\
  \n%help.arg.user%
command.permission.channel.role.copy.channel.user.examples=- `%prefix%permission channel role copy channel user #admins @Admin #bots @ToxicMushroom` Copies the permissions of the admin role bound to #admins to @ToxicMushroom bound to #bots\
  \n- `%prefix%permission channel role copy channel user #mods @Mod #bots @ToxicMushroom` Copies the permissions of the admin role bound to #mods to @ToxicMushroom bound to #bots


command.permission.channel.role.copy.channel.role.syntax=permission channel role copy channel role <channel*> <role*> <channel*> <role*>
command.permission.channel.role.copy.channel.role.description=Copies permissions of a role bound to a channel to a role bound to a channel
command.permission.channel.role.copy.channel.role.response1=Copied **%permissionCount%** permission from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from `%role1%` in **%channel1%** to `%role2%` in **%channel2%**
command.permission.channel.role.copy.channel.role.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.permission.channel.role.copy.channel.role.examples=- `%prefix%permission channel role copy channel role #bots @Admin #admins @Admin` Copies the permissions of the admin role bound to #bots to the admin role bound to #admins\
  \n- `%prefix%permission channel role copy channel role #bots @Admin #mods @Mod` Copies the permissions of the admin role bound to #bots to the mods role bound to #mods


command.permission.channel.role.clear.syntax=permission channel role clear <textChannel*> <role*>
command.permission.channel.role.clear.description=Clears the permissions of a role bound to a channel
command.permission.channel.role.clear.response1=Permissions for `%role%` in **%channel%** have been cleared
command.permission.channel.role.clear.arguments=%help.arg.role%\
  \n%help.arg.textchannel%
command.permission.channel.role.clear.examples=- `%prefix%permission channel role clear #bots @Admin` Clears the permissions of the admin role bound to #bots


command.permission.channel.user.syntax=permission channel user <set | view | copy | clear>
command.permission.channel.user.description=Manages the permissions of users bound to a channel


command.permission.channel.user.set.syntax=permission channel user set <textChannel*> <user*> <permissionNode*> <permState*>
command.permission.channel.user.set.description=Sets the permissions of a user bound to a channel
command.permission.channel.user.set.response1=**%permissionCount%** permissions matching `%permissionNode%` have been set to **%state%** for **%user%** in **%channel%**
command.permission.channel.user.set.arguments=%help.arg.user%\
  \n%help.arg.permissionnode%\
  \n%help.arg.permstate%\
  \n%help.arg.textchannel%
command.permission.channel.user.set.examples=- `%prefix%permission channel user set #bots @ToxicMushroom deniedFilters.* true` Allows @ToxicMushroom to user all of deniedFilters' subcommands in #bots


command.permission.channel.user.view.syntax=permission channel user view <textChannel*> <user*> [permissionNode*]
command.permission.channel.user.view.description=Shows info of a user bound to a channel
command.permission.channel.user.view.response1.title=Permissions of **%user%** in **%channel%** that match `%permissionNode%`
command.permission.channel.user.view.arguments=%help.arg.user%\
  \n%help.arg.textchannel%\
  \n%help.arg.permissionnode%
command.permission.channel.user.view.examples=- `%prefix%permission user view #bots @ToxicMushroom` Shows all permission states of @ToxicMushroom in #bots\
  \n- `%prefix%permission user view #bots @ToxicMushroom deniedFilters.*` Shows the permission states that match deniedFilters.* of @ToxicMushroom in #bots



command.permission.channel.user.copy.syntax=permission channel user copy <user | role | channel>
command.permission.channel.user.copy.description=Copies all permissions of a channel user to a role, user or channel


command.permission.channel.user.copy.user.syntax=permission user copy user <user*> <role*> <user*>
command.permission.channel.user.copy.user.description=Copies the permissions of a user bound to a channel to a user
command.permission.channel.user.copy.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel%** to **%user2%**
command.permission.channel.user.copy.user.arguments=%help.arg.user%
command.permission.channel.user.copy.user.examples=- `%prefix%permission channel user copy user #bots @ToxicMushroom @YingHamster` Copies the permissions of @ToxicMushroom bound to #bots to @



command.permission.channel.user.copy.role.syntax=permission channel user copy role <textChannel*> <user*> <role*>
command.permission.channel.user.copy.role.description=Copies the permissions of a user bound to a channel to a role
command.permission.channel.user.copy.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel%** to `%role%`
command.permission.channel.user.copy.role.arguments=%help.arg.role%\
  \n%help.arg.user%\
  \n%help.arg.textchannel%
command.permission.channel.user.copy.role.examples=- `%prefix%permission channel user copy role #bots @ToxicMushroom @Admin` Copies the permissions of @ToxicMushroom bound to #bots to the admin role


command.permission.channel.user.copy.channel.syntax=permission channel user copy channel <role | role>
command.permission.channel.user.copy.channel.description=Copies permissions of a user bound to a channel to an entity bound to a channel


command.permission.channel.user.copy.channel.user.syntax=permission channel user copy channel user <textChannel*> <user*> <textChannel*> <user*>
command.permission.channel.user.copy.channel.user.description=Copies permissions of a user bound to a channel to a user bound to a channel
command.permission.channel.user.copy.channel.user.response1=Copied **%permissionCount%** permission from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.user.response1.multiple=Copied **%permissionCount%** permissions from **%user1%** in **%channel1%** to **%user2%** in **%channel2%**
command.permission.channel.user.copy.channel.user.arguments=%help.arg.textchannel%\
  \n%help.arg.user%
command.permission.channel.user.copy.channel.user.examples=- `%prefix%permission channel user copy channel user #bots @YingHamster #bots @ToxicMushroom` Copies the permissions of @YingHamster bound to #bots to @ToxicMushroom bound to #bots\


command.permission.channel.user.copy.channel.role.syntax=permission channel user copy channel role <textChannel*> <user*> <textChannel*> <role*>
command.permission.channel.user.copy.channel.role.description=Copies permissions of a user bound to a channel to a role bound to a channel
command.permission.channel.user.copy.channel.role.response1=Copied **%permissionCount%** permission from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.copy.channel.role.response1.multiple=Copied **%permissionCount%** permissions from **%user%** in **%channel1%** to `%role%` in **%channel2%**
command.permission.channel.user.copy.channel.role.arguments=%help.arg.role%\
  \n%help.arg.user%\
  \n%help.arg.textchannel%
command.permission.channel.user.copy.channel.role.examples=- `%prefix%permission channel user copy channel role #bots @ToxicMushroom #bots @Admin` Copies the permissions of @ToxicMushroom role bound to #bots to the admin role bound to #admins\


command.permission.channel.user.clear.syntax=permission channel user clear <textChannel*> <user*>
command.permission.channel.user.clear.description=Clears the permissions of a user bound to a channel
command.permission.channel.user.clear.response1=Permissions for **%user%** in **%channel%** have been cleared
command.permission.channel.user.clear.arguments=%help.arg.user%\
  \n%help.arg.textchannel%
command.permission.channel.user.clear.examples=- `%prefix%permission channel user clear #bots @ToxicMushroom` Clears the permissions of @ToxicMushroom in #bots



help.arg.permstate=`permState` Permission state can be `Allow`, `Deny` or `Default`


help.arg.filter=`filter` A filter can be specified with text
help.arg.filter.examples=- `someword` (will match "someword")


help.arg.filterindex=`filterIndex` The index of a filter is a positive numeral value


help.arg.filtergroup=`filterGroup` A filtergroup is created and managed with `%prefix%filterGroup`, you can reference it by name afterwards


help.arg.selfrolegroup=`selfRoleGroup` A selfrole group is created and managed with `%prefix%selfRole group`, you can reference it by name afterwards


help.arg.joinrolegroup=`selfRoleGroup` A joinrole group is created and managed with `%prefix%joinRole group`, you can reference it by name afterwards


help.arg.timestamp=`timestamp` A timestamp declares a position of time `hh:mm:ss`
help.arg.timestamp.examples=If we want to use 1 minute and 30 seconds as timestamp:\
  \n- `1:30`\
  \n- `01:30`\
  \n- `00:01:30`\
  \n- `00:00:90`\
  \n- `00:90`\
  \n- `90`


help.arg.trackindex=`trackIndex` This is a number which indicates the position in the queue of a track (0 is playing, higher is further in queue)
help.arg.trackindex.examples=- `0` (is the playing track)\
  \n- `1` (is the track that is next in queue to be played)\
  \n- `2` (is the track that is second in queue to be played)


help.arg.volume=`volume` a number value ranging from 0 to 500 (100 is default) may end with % but not required
help.arg.speed=`speed` a number value ranging from 0 to 1000 (100 is default) may end with % but not required
help.arg.pitch=`pitch` a number value ranging from 0 to 1000 (100 is default) may end with % but not required
help.arg.rate=`rate` a number value ranging from 0 to 1000 (100 is default) may end with % but not required


help.arg.voicechannel=`voiceChannel` A voiceChannel can be specified by name, mention or id
help.arg.voicechannel.examples=If we want to use music as voiceChannel we can use of the following methods:\
  \n- `#music` (the actual mention format is <#id> <-> `<#340081887265685505>`, discord wont highlight this mention)\
  \n- `music` (you can have multiple channels named music)\
  \n- `340081887265685505` **recommended** (this is a voiceChannelId)


help.arg.textchannel=`textChannel` A textChannel can be specified by name, mention or id
help.arg.textchannel.examples=If we want to use #bots as channel we can use of the following methods:\
  \n- `#bots` **recommended** (the actual mention format is <#id> <-> `<#456055962004881408>`)\
  \n- `bots` (You can have multiple channels named bots)\
  \n- `456055962004881408` **recommended** (this is a channelId)


help.arg.votereminderoption=`voteReminderOption` A votereminderoption can be topgg, dblcom, bfdcom, dboats or global (not case sensitive)


help.arg.commandnode=`commandNode` A commandNode can be specified by commandName(.subCommandName.subCommandName) (ect) see examples.
help.arg.commandnode.examples=- `ping` matches the PingCommand\
  \n- `play.yt` matches the youtube subcommand of the PlayCommand\
  \n- `permission.*` matches all the subCommands of the PermissionCommand\
  \n- `*` matches all the permissions


help.arg.timeperiod=`timePeriod` See examples
help.arg.timeperiod.examples=- `day` (current time minus one day until current time)\
  \n- `today` (time of start of today until current time)\
  \n- `week` (current time minus one week until current time)\
  \n- `thisweek` (time of start of week until current time)\
  \n- `month` (current time minus one month until current time)\
  \n- `thismonth` (time of start of month until current time)\
  \n- `year` (current time minus one year until current time)\
  \n- `thisyear` (time of start of year until current time)\
  \n- `all` (0 until current time)


help.arg.attachment=`attachment` An attachment is not text and has to be added in the discord client by pressing the + icon on the left of the message field


help.arg.song=`song` The title of a song


help.arg.spotifyLink=`spotifyLink` Can be specified by spotify url or uri
help.arg.spotifyLink.examples=- `https://open.spotify.com/track/6j8ZhFIEf5n2zpdsmwAhH0?si=2FVyvwyzS_ysbgbIPXRjlQ` link to track\
  \n- `spotify:track:6j8ZhFIEf5n2zpdsmwAhH0` link to track\
  \n- `https://open.spotify.com/album/63yDWANDu5uL0m3jdW761V?si=6V2pRsw-SrCr27WDgQa9OQ` link to album\
  \n- `spotify:album:63yDWANDu5uL0m3jdW761V` link to album\
  \n- `https://open.spotify.com/playlist/53ITfM1lJqDu1PK9ytY0It?si=ArXTfuyfQV-qjCxhYzR01A` link to playlist\
  \n- `spotify:playlist:53ITfM1lJqDu1PK9ytY0It` link to playlist


help.arg.url=`url` A url is can be of this format `protocol://sub.domain.tld:port/location.filetype?query=value`
help.arg.url.examples=- `https://melijn.com/` url to melijn's homepage (same as https://melijn.com:443/index.php)


help.arg.number=`number` sequence of figures
help.arg.number.examples=- `5` represents the number five


help.arg.bignumber=`bignumber` possible long sequence of figures
help.arg.bignumber.examples=- `5` represents the number five\
  \n- `231459866630291459` is a bignumber


help.arg.numbers=`numbers` sequence of numbers seperated by a comma or a range by a -. See examples.
help.arg.numbers.examples=- `4,5` 4 and 5\
  \n- `4,5-8` 4, 5, 6, 7 and 8\
  \n- `5-10` 5, 6, 7, 8, 9 and 10


help.arg.string=`string` sequence of characters
help.arg.string.examples=- `abc` is a string


help.arg.slowmodedelay=`slowModeDelay` positive number which represents the amount of seconds of delay

help.arg.boolean=`boolean` defines a state between 2 possible values (on or off | true or false)
help.arg.boolean.examples=- `true` positive state, `false` negative state\
  - `enable` positive state, `disable` negative state\
  - `enabled` positive state, `disabled` negative state\
  - `yes` positive state, `no` negative state\
  - `on` positive state, `off` negative state\
  - `positive` positive state, `negative` negative state\
  - `+` positve state, `-` negative state


help.arg.color=`color` Colors are represented by a hex format or rgb format
help.arg.color.examples=- `#FFFFFF` white\
  \n- `000000` black\
  \n- `128,128,128` grey\
  \n- `255,0,0` red


help.arg.user=`user` A user can be specified by (nick)name, first part of their (nick)name, id or mention
help.arg.user.examples=If we want to use ToxicMushroom#2610 as user we can use one of the following methods:\
  \n- `@ToxicMushroom` **Recommended** (the actual mention format is <@id> <-> `<@231459866630291459>`)\
  \n- `ToxicMushroom#2610` **Recommended**\
  \n- `231459866630291459` **Recommended** (this is a userId)\
  \n- `ToxicMushroom` **not recommended** (this doesn't work if more then one users have this name)\
  \n- `Toxic` **not recommended** (this doesn't work if more users have toxic in their name)


help.arg.imageurl=`imageUrl` An imageUrl can be of this format protocol://sub.domain.tld:port/location.filetype?query=value with filtype as an imagetype like jpg, png, ect
help.arg.imageurl.examples=- `https://purr.objects-us-east-1.dream.io/i/bqzJ9.jpg` url to cat


help.arg.coloroffset=`colorOffset` A color offset is a value between -128 and 128 (try to see effects)


help.arg.gifquality=`gifQuality` The quality ranges from 1 to 20 with 1 being best and slowest (5 default)


help.arg.fps=`fps` Frames per second the gif should display, must be a positive number


help.arg.word=`word` A word is text without spaces
help.arg.word.examples=- `hi`


help.arg.timezone=`timezone` Please use a timezone out of this list: https://melijn.com/timezones
help.arg.timezone.examples=- `GMT` Greenwich Mean Time\
  \n- `Europe/Brussels` GMT+01:00 or GMT+02:00 (depends on what day of year since it has summer and winter hours)\
  \n- `PST` GMT-07:00


help.arg.member=`member` A member can be specified by (nick)name, first part of their (nick)name, id or mention.
help.arg.member.examples=If we want to use ToxicMushroom#2610 as member we can use one of the following methods:\
  \n- `@ToxicMushroom` **Recommended** (the actual mention format is <@id> <-> <@231459866630291459>\
  \n- `ToxicMushroom#2610` **Recommended**\
  \n- `231459866630291459` **Recommended** (this is a userId)\
  \n- `ToxicMushroom` **not recommended** (this doesn't work if more then one users have this name)\
  \n- `Toxic` **not recommended** (this doesn't work if more users have toxic in their name)


help.arg.deldays=`delDays` The amount of days that messages will be deleted 0-7


help.arg.softbanreason=`softBanReason` reason for the softban, "/" by default


help.arg.verificationpassword=`verificationPassword` The password that users need to type to become verified


help.arg.filtermode=`filterModes` can be one of the following: `Must_Contain_Any_Allowed`, `Must_Contain_All_Allowed`, `Must_Match_Allowed_Format`, `No_Wrap`, `Disabled` or `Default`
help.arg.filtermode.examples=- `Must_Contain_Any_Allowed` The message must contain any of the words in the allowed list\
  \n- `Must_Contain_All_Allowed` The message must contain all of the words in the allowed list\
  \n- `MUST_MATCH_ALLOWED_FORMAT` The message must completly match all the allowed formats\
  \n- `No_Wrap` The message can't contain denied words, this doesn't check if the denied word is inside an allowed word\
  \n- `Disabled` Nothing happens\
  \n- `Default` The message can't contain denied words unless if the denied word is encapsulated by a allowed word\


help.arg.verificationtype=`verificationType` one of the following types: `Password`, `Google_RecaptchaV2`, `Reaction` or `None`
help.arg.verificationtype.examples=- `Password` Users have to verify using the verificationPassword\
  \n- `Google_RecaptchaV2` Users have to verify using https://melijn.com/recaptcha and pasting the received code in the verification channel\
  \n- `Reaction` Users have to react with the verificationEmoteji\
  \n- `None` Users can't verify themselves

help.arg.emote=`emote` An emote is a custom discord emoji like :thonk:. They can be referenced via using them or their id
help.arg.emote.examples=- `<:lolDog:613504283270184967>` points to the lolDog emote, discord renders this text as the actual emote, bots receive it like this\
  \n- `613504283270184967` points to the lolDog emote, this is the id of an emote

help.arg.math=`math` You learn this at school, see here for a list of supported operations: https://github.com/mariuszgromada/MathParser.org-mXparser#number-format
help.arg.math.examples=- `1+1` 2\
  \n- `2*2` 4\
  \n- `2^2=sqrt(16)+sin(0)` 1 (true)\
  \n- `2>1` 0 (false)


help.arg.emoji=`emoji` 😂

help.arg.ccname=`ccName` the name for a custom command, also the way the custom command is going to be executed

help.arg.pointstriggertype=`pointsTriggerType` one of the following types: `Filtered_Message`, `Warn`, `Spam`, `Many_Mentions`, `Unverified_Duration` or `Hoisting`
help.arg.pointstriggertype.examples=- `Filtered_Message` Triggers when filterGroups are violated\
  \n- `Warn` Triggers when a user is warned\
  \n- `Spam` Triggers when a user spams\
  \n- `Many_Mentions` Triggers when a message contains many mentions\
  \n- `Unverified_Duration` Triggers when the user has been unverified for set time\
  \n- `Hoisting` Triggers when the user hoists their username

help.arg.ccresponse=`ccResponse` the content of the response of a custom command (can be changed later)

help.arg.ccid=`ccId` Id of a custom command, can be viewed with `%prefix%customCommand list`

help.arg.ccalias=`ccAlias` alias to execute the custom command with


help.arg.ccaliasindex=`ccAliasIndex` alias index can be viewed with %prefix%customCommand aliases list


help.arg.ccdescription=`ccDescription` some text that explains what the custom command does


help.arg.ccchance=`ccChance` Chance that the command will be executed when multiple custom commands have the same name


help.arg.cccontent=`ccContent` the normal message of the custom commands


help.arg.embeddescription=`embedDescription` description of the embed


help.arg.embedtitle=`embedTitle` title of the embed


help.arg.embedtitleurl=`embedTitleUrl` title url of the embed


help.arg.embedauthor=`embedAuthor` author of the embed


help.arg.footertext=`footer` footer of the embed


help.arg.fieldtitle=`fieldTitle` field title of the embed


help.arg.fieldvalue=`fieldValue` field value of the embed


help.arg.fieldindex=`fieldIndex` field index of the embed


help.arg.state=`state`\nPositive states are `on`, `enable`, `enabled`, `true` or `yes`\nNegative states are `off`, `disable`, `disabled`, `false` or `no`


help.arg.filename=`fileName` filenames should be `name.extension`
help.arg.filename.examples=- `cat.jpg` name: `cat` and extension: `jpg`


help.arg.channeltype=`channelType` ChannelType can be `Join`, `Leave`, `Pre_Verification_Join`, `Pre_Verification_Leave`, `Birthday`, `Banned`, `Kicked` or `Verification`


help.arg.punishmenttype=`punishmentType` PunishmentType can be `Ban`, `Mute`, `Kick`, `Warn` or `Softban`


help.arg.tristate=`tristate` A tristate can be negative: `false`, positive: `true` or neutral: `default`


help.arg.reason=`reason` reason for something, default reason is "/"


help.arg.duration=`duration` needs to be a number followed by a timeunit, timeunits are year: `y`, month: `M`, week: `w`, day: `d`, hour: `h`, minute: `m` and second: `s`
help.arg.duration.examples=- `5d 2h` 5 days and 2 hours\
  \n- `1M 10m` 1 Month 10 minutes\
  \n- `1 M 10 m` 1 Month 10 minutes


help.arg.logchanneltypenode=`logChannelTypeNode` logChannelTypes are: `Permban`, `Tempban`, `Softban`, `Unban`, `Permmute`, `Tempmute`, `Unmute`, `Kick`, `Warn`, `Other-Deleted-Message`, `Self-Deleted-Message`, `Purged-Message`, `Filtered-Message`, `Verification`, `Edited-Message`, `Reaction`, `Attachment`, `Music` and `Bot`
help.arg.logchanneltypenode.examples=- `Ban` stands for `Permban`, `Tempban`, `Softban` and `Unban`\
  \n- `All` stands for all types\
  \n- `Deleted-Message` stands for `Other-Deleted-Message`, `Self-Deleted-Message`, `Purged-Message` and `Filtered-Message`\
  \n- `Mute` stands for `Permmute`, `Tempmute` and `Unmute`\
  \n- `Punishment` stands for `Permban`, `Tempban`, `Softban`, `Unban`, `Permmute`, `Tempmute`, `Unmute`, `Kick` and `Warn`


help.arg.roletype=`roleType` roleTypes are `Mute`, `Unverified` or `Birthday`


help.arg.gaintype=`gainType` gainTypes are `Bass` or `Default`


help.arg.role=`role` A role can be specified by name, id or mention.
help.arg.role.examples=If we want to use Admin as role we can use one of the following methods:\
  \n- `@Admin` (the actual mention format is <@id> <-> <@231459866630291459>)\
  \n- `343674598216302592` (this is a roleId, can be obtained with `%prefix%roles` or `%prefix%roleInfo <role*>`)\
  \n- `Admin` **not recommended**  (this doesn't work if more then one role has this name)\
  \nIf we want to use the everyone role (everyone has this role but is invisible) we can use one of the following methods:\
  \n- `340081887265685504` (this is also the serverId)\
  \n- `everyone` **not recommended** (this doesn't work if more then one role has this name)


help.arg.prefix=`prefix` the character(s) you put in front of the commands so Melijn knows when to respond


help.arg.milliseconds=`milliseconds` number that represents an amount of milliseconds


help.arg.commandstate=`commandState` command states are: `Enabled` or  Disabled`


help.arg.channelcommandstate=`channelCommandState` channel command states are: `Enabled`, `Default` or `Disabled`


help.arg.selfrolepattern=`selfRolePattern` A selfRolePattern must be within 1 to 256 characters. Variables that will be replaced are %name%, %emoteji% and %role%
help.arg.selfrolepattern.examples=The default pattern is down bellow. But you can for example add markdown or extra text if you want\
  \n- `%name%:\n%emoteji% -> %role%` Blue:\n🟦 -> @blue



help.arg.text=`text` sequence of characters
help.arg.text.examples=- `abc`\
  \n- `a`\
  \n- `I exist :)`\
  \n- `example4`


help.arg.command=`command` A command can be specified by a sequence of command names and their subCommand names
help.arg.command.examples=- `permission user set` selects the set subcmd of the user subcmd of the perm command\
  \n- `help` selects the help command


help.arg.commandcategory=`commandCategory` Valid categories are: `Administration`, `Utility`, `Moderation`, `Music`, `Anime`, `Animal` and `Image`


help.arg.language=`language` available languages are: EN (if you want to translate the messages or improve existing once, contact me)


help.arg.token=`token` a discord token (shouldn't share this with others)


help.arg.datetime=`datetime` A full formatted date and time
help.arg.datetime.examples=- `2020-05-21 13:00` 21st of may in 2020 at 13:00 (24h)


help.arg.permissionnode=`permissionNode` permission node is like command.subcommand... a * represents all depth levels
help.arg.permissionnode.examples=- `*` all permissions\
  \n- `play.*` all subcommands of play\
  \n- `perm.user.set` only the permission of the set subcmd of the user subcmd of the permission command


help.arg.birthday=`birthday` A date with a possible year
help.arg.birthday.examples=- `25/12/1999` 25th of december 1999\
  \n- `25/12` 25th of december (year is unknown)


help.arg.dateformat=`dateFormat` Can be any of `DMY`, `MDY` or `YMD`
help.arg.dateformat.examples=- `DMY` Day month year\
  \n- `MDY` Month day year\
  \n- `YMD` Year month day


help.var.user=`{user}` shows the full user tag ex: ToxicMushroom#2610
help.var.usertag=`{userTag}` shows the full user tag ex: ToxicMushroom#2610
help.var.usermention=`{userMention}` mentions the user ex: @ToxicMushroom


help.var.userid=`{userId}` shows the userId ex: 231459866630291459


help.var.zws=`{zws}` shows a zero width space "\u200B" - unicode: \\u200B


help.var.szws=`{szws}` shows a space + zero width space " \u200B"
help.var.szws.examples=- `{szws}` ' \u200B'\
  \n- `{szws:2}` ' \u200B \u200B'


help.var.zwss=`{zwss}` shows a zero width space + space "\u200B "
help.var.zwss.examples=- `{zwss}` '\u200B '\
  \n- `{zwss:2}` '\u200B \u200B '


help.var.username=`{username}` shows the username ex: ToxicMushroom


help.var.voicechannelid=`{voiceChannelId}` shows the voiceChannel the user is in, ex: 344081173212823553 else null


help.var.nickname=`{nickname}` shows the nickname of the user, ex: Merlin else null


help.var.hasnickname=`{hasNickname}` shows true the if the user has a nickname, shows false otherwise


help.var.effectivename=`{effectiveName}` shows the effective name of the user nickname if the user has a nickname otherwise the username


help.var.effectiveavatarurl=`{effectiveAvatarUrl}` shows the avatar url of the user, default avatar url if user has none


help.var.avatarurl=`{avatarUrl}` shows the avatar url of the user, null otherwise


help.var.discriminator=`{discriminator}` shows the discriminator of the user, ex: 2610


help.var.servername=`{serverName}` shows the serverName of the server


help.var.serverid=`{serverId}` shows the serverId of the server


help.var.membercount=`{memberCount}` shows the memberCount of the server


help.var.user.isbot=`{user.isBot}` shows true if the user is a bot, shows false otherwise


help.var.isuser=`{isUser}` shows true with no input, {isUser:user*} retrieves the user and checks if it exists, shows true if so else false


help.var.ismember=`{isMember}` shows true with no input, {isMember:user*} retrieves the user and checks if it is a member exists, shows true if so else false


help.var.argscount=`{argsCount}` shows the amount of args


help.var.arg=`{arg}` needs an argument, {arg:0} shows the first arg


help.var.rawArg=`{rawArg}` Shows the raw argument string


help.var.startofbirthday=`{startOfBirthday}` Shows the exact date and time when the birthday started


help.var.endofbirthday=`{endOfBirthday}` Shows the exact date and time when the birthday will end


help.var.age=`{age}` Shows the new age of this user


help.var.birthdayrole=`{birthdayRole}` Shows the role that the user has received for it's birthday


help.var.currenttimemillis=`{currentTimeMillis}` Shows the current milliseconds since epoch


help.var.currentdatetime=`{currentDateTime}` Shows the current datetime, {currentDateTime:user*} Shows the current datetime for the timezone of the specified user